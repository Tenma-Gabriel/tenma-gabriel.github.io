{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u7b80\u4ecb","text":"<p>\u8fd9\u91cc\u662fhongzw\u7684\u4e2a\u4eba\u535a\u5ba2\u3002</p>"},{"location":"algorithm/","title":"\u7b80\u4ecb","text":"<p>\u8fd9\u91cc\u653e\u4e00\u4e9b\u4e2a\u4eba\u5b66\u4e60\u65f6\u5199\u7684\u7b97\u6cd5\u7b14\u8bb0</p>"},{"location":"algorithm/game-theory-study-note/","title":"\u535a\u5f08\u8bba\u5165\u95e8\u7b14\u8bb0","text":""},{"location":"algorithm/game-theory-study-note/#_1","title":"\u4ece\u5c0f\u5b66\u5965\u6570\u5f00\u59cb","text":"<p>\u7ed9\u5b9a\u4e00\u5806\u77f3\u5b50, \u5171n\u4e2a\u77f3\u5b50\uff0c\u4e24\u4e2a\u73a9\u5bb6\u8f6e\u6d41\u53d6\u77f3\u5b50, \u6bcf\u6b21\u53ea\u80fd\u62ff1\u4e2a\u62162\u4e2a\u62163\u4e2a\u77f3\u5b50. \u4e0d\u80fd\u53d6\u77f3\u5b50\u7684\u4e00\u65b9\u8f93. \u95ee\u5148\u624b\u6709\u65e0\u5fc5\u80dc\u7b56\u7565.</p> <p>\u89e3:</p> <p>\u5f53\u4e14\u4ec5\u5f53n\u4e0d\u4e3a4\u7684\u500d\u6570\u7684\u65f6\u5019, \u5148\u624b\u6709\u5fc5\u80dc\u7b56\u7565.</p> <p>\u6211\u4eec\u53ef\u4ee5\u5c06\u6e38\u620f\u7684\u5c40\u9762(\u5373\u5f53\u524d\u5269\u4f59\u7684\u77f3\u5b50\u4e2a\u6570\\(x\\))\u5206\u6210\u4e24\u7c7b, x%4==0\u548cx%4!=0, \u4e0d\u59a8\u5206\u522b\u79f0\u4e4b\u4e3aP\u5c40\u9762(\u5fc5\u8d25\u5c40\u9762)\u548cN\u5c40\u9762(\u5fc5\u80dc\u5c40\u9762).</p> <p>\u5f53\u62ff\u5230N\u5c40\u9762\u65f6,\u73a9\u5bb6\u53ef\u4ee5\u5c06N\u5c40\u9762\u6539\u53d8\u6210P\u5c40\u9762; \u5f53\u62ff\u5230P\u5c40\u9762\u7684\u65f6\u5019, \u73a9\u5bb6\u53ea\u80fd\u5c06P\u5c40\u9762\u6539\u6210N\u5c40\u9762. \u6700\u7ec8\\(x=0\\)\u8fd9\u4e2a\u6700\u7ec8\u5c40\u9762\u843d\u5728P\u5c40\u9762.</p> <p>\u5982\u4e0b\u56fe\u6240\u793a:</p> <p></p>"},{"location":"algorithm/game-theory-study-note/#bash-game","title":"\u5df4\u4ec0\u535a\u5f08(Bash Game)","text":"<p>\u8ba9\u6211\u4eec\u5bf9\u4e0a\u9762\u7684\u5c0f\u5b66\u5965\u6570\u9898\u8fdb\u884c\u63a8\u5e7f.</p> <p>\u7ed9\u5b9a\u4e00\u5806\u77f3\u5b50, \u5171n\u4e2a. \u4e24\u4e2a\u73a9\u5bb6\u8f6e\u6d41\u53d6\u77f3\u5b50, \u6bcf\u6b21\u81f3\u5c11\u53d6\u4e00\u4e2a, \u81f3\u591a\u53d6m\u4e2a. \u4e0d\u80fd\u53d6\u77f3\u5b50\u7684\u8f93. \u95ee\u7ed9\u5b9an, m, \u5148\u624b\u662f\u5426\u6709\u5fc5\u80dc\u7b56\u7565.</p> <p>\u89e3:</p> <p>\u5f53\u4e14\u4ec5\u5f53, n\u4e0d\u4e3a(m+1)\u7684\u500d\u6570\u65f6, \u5148\u624b\u6709\u5fc5\u80dc\u7b56\u7565. \u63a8\u7406\u8fc7\u7a0b\u5982\u4e0a.</p>"},{"location":"algorithm/game-theory-study-note/#nim-game","title":"\u5c3c\u59c6\u535a\u5f08(Nim Game)","text":"<p>\u7ed9\u5b9an\u5806\u77f3\u5b50. \u6bcf\u5806\u77f3\u5b50\u6709\\(a_i\\)\u4e2a\u77f3\u5b50. \u4e24\u4e2a\u73a9\u5bb6\u8f6e\u6d41\u53d6\u77f3\u5b50. \u6bcf\u56de\u5408\u9009\u5b9a\u4e00\u4e2a\u5806, \u81f3\u5c11\u53d6\u4e00\u4e2a\u77f3\u5b50, \u81f3\u591a\u628a\u9009\u5b9a\u7684\u8fd9\u4e00\u5806\u77f3\u5b50\u53d6\u5b8c. \u65e0\u6cd5\u53d6\u77f3\u5b50\u7684\u4e00\u65b9\u5224\u8d1f. \u95ee, \u7ed9\u5b9an\u548c\u6570\u7ec4a, \u5148\u624b\u662f\u5426\u6709\u5fc5\u80dc\u7b56\u7565.</p> <p>\u89e3:</p> <p>\u8bf7\u5148\u4e86\u89e3\u5f02\u6216\u64cd\u4f5c.</p> <p>\u76f4\u63a5\u7ed9\u51fa\u7ed3\u8bba: \u5f53\u4e14\u4ec5\u5f53, n\u5806\u77f3\u5b50\u7684\u5f02\u6216\u548c\u4e0d\u7b49\u4e8e0\u65f6, \u5148\u624b\u6709\u5fc5\u80dc\u7b56\u7565.</p> <p>\u6211\u4eec\u8003\u8651\u4e0a\u9762\u7684\u5c0f\u5b66\u5965\u6570\u9898, \u6211\u4eec\u628a\u6574\u4e2a\u6e38\u620f\u7684\u5c40\u9762\u62bd\u8c61\u6210\u4e86\u4e24\u79cd, \u5e76\u4e14\u8ba9\u5fc5\u8d25\u5c40\u9762\u7684\u540e\u7ee7\u6709\u4e14\u4ec5\u6709\u5fc5\u80dc\u5c40\u9762.</p> <p>\u53d7\u5230\u8fd9\u4e2a\u7684\u542f\u53d1, \u6211\u4eec\u5c1d\u8bd5\u5c06\u5c3c\u59c6\u535a\u5f08\u7684\u5c40\u9762\u4e5f\u62bd\u8c61\u6210\u4e24\u79cd. \u5373, \u77f3\u5b50\u5806\u7684\u5f02\u6216\u548c\u4e3a0 \u548c \u4e0d\u4e3a0.</p> <p>\u8ba9\u6211\u4eec\u79f0\u5f02\u6216\u548c\u4e3a0\u65f6, \u4e3a\u5fc5\u8d25\u5c40\u9762; \u5f02\u6216\u548c\u4e0d\u4e3a0\u65f6, \u4e3a\u5fc5\u80dc\u5c40\u9762.</p> <p>\u6211\u4eec\u6709\u4ee5\u4e0b\u4e09\u70b9\u6027\u8d28:</p> <ol> <li>\u6700\u7ec8\u5c40\u9762, \u5373\u6ca1\u6709\u77f3\u5b50\u53ef\u53d6\u7684\u65f6\u5019, \u6240\u6709\u77f3\u5b50\u5806\u7684\u77f3\u5b50\u6570\u90fd\u4e3a0, \u6240\u4ee5\u5f02\u6216\u548c\u81ea\u7136\u4e5f\u4e3a0. \u4e5f\u5c31\u662f\u8bf4, \u6700\u7ec8\u5c40\u9762\u53ef\u4ee5\u88ab\u7eb3\u5165\u5fc5\u8d25\u5c40\u9762\u4e2d.</li> <li>\u77f3\u5b50\u5806\u7684\u5f02\u6216\u548c\u4e3a0\u65f6, \u65e0\u8bba\u5728\u4e00\u4e2a\u77f3\u5b50\u5806\u79cd\u53d6\u591a\u5c11\u77f3\u5b50, \u5f02\u6216\u548c\u90fd\u4e0d\u4f1a\u4e3a0. \u7531\u5f02\u6216\u7684\u6027\u8d28\u4e0d\u96be\u5f97\u51fa.</li> <li>\u77f3\u5b50\u5806\u7684\u5f02\u6216\u548c\u4e0d\u4e3a0\u65f6, \u603b\u6709\u4e00\u79cd\u53d6\u6cd5, \u4f7f\u5f97\u53d6\u5b8c\u4e4b\u540e\u5f02\u6216\u548c\u4e3a0. \u7531\u5f02\u6216\u7684\u6027\u8d28\u4e0d\u96be\u5f97\u51fa.</li> </ol> <p>\u4e8e\u662f, \u5f52\u7eb3\u4e00\u4e0b, \u6211\u4eec\u5f97\u51fa\u4e0b\u56fe:</p> <p></p> <p>Note: \u5c3c\u59c6\u535a\u5f08\u662f\u5341\u5206\u91cd\u8981\u7684, \u5f88\u591a\u535a\u5f08\u90fd\u53ef\u4ee5\u8f6c\u6362\u6210\u5c3c\u59c6\u6e38\u620f\u7684\u53d8\u5f62. \u5b9e\u9645\u4e0a, \u6240\u6709\u516c\u5e73\u7ec4\u5408\u6e38\u620f\u90fd\u53ef\u4ee5\u770b\u6210\u5c3c\u59c6\u535a\u5f08\u7684\u53d8\u5f62.</p>"},{"location":"algorithm/game-theory-study-note/#anti-nim-game","title":"\u53cd\u5c3c\u59c6\u535a\u5f08(Anti-Nim Game)","text":"<p>\u7ed9\u5b9an\u5806\u77f3\u5b50. \u6bcf\u5806\u77f3\u5b50\u6709\\(a_i\\)\u4e2a\u77f3\u5b50. \u4e24\u4e2a\u73a9\u5bb6\u8f6e\u6d41\u53d6\u77f3\u5b50. \u6bcf\u56de\u5408\u9009\u5b9a\u4e00\u4e2a\u5806, \u81f3\u5c11\u53d6\u4e00\u4e2a\u77f3\u5b50, \u81f3\u591a\u628a\u9009\u5b9a\u7684\u8fd9\u4e00\u5806\u77f3\u5b50\u53d6\u5b8c. \u53d6\u5230\u6700\u540e\u4e00\u4e2a\u77f3\u5b50\u7684\u4e00\u65b9\u5224\u8d1f. \u95ee, \u7ed9\u5b9an\u548c\u6570\u7ec4a, \u5148\u624b\u662f\u5426\u6709\u5fc5\u80dc\u7b56\u7565.</p> <p>\u89e3:</p> <p>\u6211\u4eec\u770b\u5230\u53cd\u5c3c\u59c6\u535a\u5f08\u548c\u5c3c\u59c6\u535a\u5f08\u7684\u552f\u4e00\u533a\u522b\u70b9\u5c31\u662f, \u6700\u540e\u7684\u80dc\u5229\u6761\u4ef6\u662f\u76f8\u53cd\u7684.</p> <p>\u540c\u6837\u5148\u7ed9\u51fa\u7ed3\u8bba\u518d\u8bc1\u660e:</p> <p>\u5148\u624b\u6709\u5fc5\u80dc\u7b56\u7565, \u5f53\u4e14\u4ec5\u5f53:</p> <ol> <li>\u6240\u6709\u5806\u7684\u77f3\u5b50\u6570\u90fd\u4e3a1, \u4e14\u5f02\u6216\u548c\u4e3a0.</li> <li>\u6216\u8005, \u81f3\u5c11\u6709\u4e00\u5806\u77f3\u5b50\u6570\u5927\u4e8e1, \u4e14\u5f02\u6216\u548c\u4e0d\u4e3a0</li> </ol> <p>\u6761\u4ef61\u7684\u6b63\u786e\u6027\u662f\u663e\u7136\u7684, \u5f53\u6761\u4ef61\u6210\u7acb\u7684\u65f6\u5019, \u573a\u4e0a\u6709\u5076\u6570\u5806\u77f3\u5b50\u6570\u4e3a1\u7684\u77f3\u5b50, \u4e00\u4eba\u4e00\u4e2a, \u81ea\u7136\u5148\u624b\u83b7\u80dc.</p> <p>\u5bf9\u4e8e\u6761\u4ef62, \u4e5f\u5c31\u662f\u81f3\u5c11\u6709\u4e00\u5806\u77f3\u5b50\u6570\u5927\u4e8e1, \u6211\u4eec\u5206\u4e24\u79cd\u60c5\u51b5\u6765\u8ba8\u8bba</p> <ol> <li>\u5f53\u5f02\u6216\u548c\u4e0d\u4e3a0\u65f6: \u82e5\u8fd8\u6709\u4e24\u5806\u77f3\u5b50\u6570\u76ee\u5927\u4e8e1, \u6211\u4eec\u628a\u5f02\u6216\u548c\u53d8\u4e3a0; \u82e5\u53ea\u6709\u4e00\u5806\u77f3\u5b50\u6570\u76ee\u5927\u4e8e1, \u6211\u4eec\u603b\u53ef\u4ee5\u4f7f\u5f97\u573a\u4e0a\u53ea\u5269\u4e0b\u5947\u6570\u5806\u76841.</li> <li>\u5f53\u5f02\u6216\u548c\u4e3a0\u65f6, \u65e0\u8bba\u600e\u4e48\u53d6, \u5f02\u6216\u548c\u603b\u4e0d\u4e3a0. \u6ce8\u610f, \u7531\u5f02\u6216\u7684\u6027\u8d28\u53ef\u5f97 ,\u5f02\u6216\u548c\u4e3a0\u65f6, \u81f3\u5c11\u6709\u4e24\u5806\u77f3\u5b50\u6570\u76ee\u5927\u4e8e1.</li> </ol> <p>\u72b6\u6001\u8f6c\u79fb\u5982\u4e0b\u56fe\u6240\u793a:</p> <p></p>"},{"location":"algorithm/game-theory-study-note/#_2","title":"\u516c\u5e73\u7ec4\u5408\u6e38\u620f","text":"<p>\u5f53\u4e14\u4ec5\u5f53\u4e0b\u5217\u6761\u4ef6\u5168\u90e8\u6ee1\u8db3\u7684\u65f6\u5019, \u662f\u516c\u5e73\u7ec4\u5408\u6e38\u620f:</p> <ol> <li>\u6e38\u620f\u6709\u4e24\u4e2a\u4eba\u53c2\u4e0e, \u4e24\u4eba\u8f6e\u6d41\u505a\u51fa\u51b3\u7b56, \u53cc\u65b9\u90fd\u77e5\u9053\u6e38\u620f\u7684\u5b8c\u6574\u4fe1\u606f.</li> <li>\u4efb\u610f\u4e00\u4e2a\u6e38\u620f\u8005\u5728\u67d0\u4e00\u4e2a\u786e\u5b9a\u72b6\u6001\u4e0b\u53ef\u4ee5\u505a\u51fa\u7684\u51b3\u7b56\u96c6\u5408\u53ea\u4e0e\u5f53\u524d\u72b6\u6001\u6709\u5173, \u4e0e\u6e38\u620f\u8005\u65e0\u5173.</li> <li>\u6e38\u620f\u4e2d\u7684\u4e00\u4e2a\u72b6\u6001\u4e0d\u53ef\u4ee5\u591a\u6b21\u62b5\u8fbe, \u6e38\u620f\u4ee5\u73a9\u5bb6\u65e0\u6cd5\u79fb\u52a8\u7ed3\u675f.</li> <li>\u6e38\u620f\u4e00\u5b9a\u5728\u6709\u9650\u6b65\u5185\u7ed3\u675f, \u6ca1\u6709\u5e73\u5c40.</li> </ol> <p>\u4e0a\u9762\u8ba8\u8bba\u7684\u5df4\u4ec0\u535a\u5f08, \u5c3c\u59c6\u535a\u5f08, \u53cd\u5c3c\u59c6\u535a\u5f08\u90fd\u662f\u516c\u5e73\u7ec4\u5408\u6e38\u620f.</p> <p>\u6709\u7684\u540c\u5b66\u53ef\u80fd\u6709\u7591\u60d1, \u4e0a\u9762\u7684\u4e09\u79cd\u535a\u5f08\u6a21\u578b\u4e2d, \u540c\u4e00\u4e2a\u72b6\u6001\u88ab\u591a\u6b21\u5230\u8fbe\u4e86, \u8c8c\u4f3c\u8fdd\u53cd\u4e86\u4e00\u4e2a\u72b6\u6001\u4e0d\u80fd\u591a\u6b21\u5230\u8fbe\u7684\u5b9a\u4e49.</p> <p>\u5176\u5b9e\u4e0d\u662f\u7684, \u4e0a\u9762\u7684\u72b6\u6001\u5b9e\u9645\u4e0a\u662f\u67d0\u4e00\u7fa4\u7279\u5b9a\u72b6\u6001\u7684\u96c6\u5408. \u4f8b\u5982\u5728\u5df4\u4ec0\u535a\u5f08\u4e2d, \\(n=13\\)\u662f\u4e00\u4e2a\u786e\u5b9a\u72b6\u6001, \u800c\\(n%(m+1)=0\\)\u662f\u4e00\u7c7b\u7279\u5b9a\u72b6\u6001.</p> <p>\u516c\u5e73\u7ec4\u5408\u6e38\u620f\u90fd\u53ef\u4ee5\u7528\\(SG\\)\u51fd\u6570\u6c42\u89e3\uff0c\u56e0\u6b64\u53c8\u79f0\u4e3a\\(SG\\)\u7ec4\u5408\u6e38\u620f\u3002</p>"},{"location":"algorithm/game-theory-study-note/#sg","title":"SG\u51fd\u6570","text":"<p>\u4e0b\u9762\u4ecb\u7ecd\u516c\u5e73\u7ec4\u5408\u6e38\u620f\u4e2d\u7684\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u5de5\u5177\u2014\u2014SG\u51fd\u6570\u3002</p> <p>SG\u51fd\u6570\u662f\u5bf9\u535a\u5f08\u4e2d\u7684\u6bcf\u4e2a\u72b6\u6001\uff08\u8282\u70b9\uff09\u7684\u8bc4\u4f30\u51fd\u6570\uff0c\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <p>\\(sg(v) = mex {sg(u)|\u72b6\u6001u\u662f\u72b6\u6001v\u7684\u540e\u7ee7}\\)</p> <p>\u5176\u4e2d\\(mex(S)\\)\u51fd\u6570\u7684\u610f\u4e49\u4e3a\uff0c\u4e0d\u5c5e\u4e8e\u96c6\u5408\\(S\\)\u7684\u6700\u5c0f\u975e\u8d1f\u6570\u3002</p> <p>\u5f53\u4e14\u4ec5\u5f53\uff0c\u67d0\u4e2a\u72b6\u6001\u7684SG\u51fd\u6570\u4e3a0\u65f6\uff0c\u8be5\u72b6\u6001\u5fc5\u8d25\u3002</p> <p>\u8fd9\u770b\u8d77\u6765\u5341\u5206\u5730\u62bd\u8c61\uff0c\u6211\u4eec\u4e0d\u59a8\u4ee5SG\u51fd\u6570\u6765\u5206\u6790\u6211\u4eec\u719f\u6089\u7684Nim\u535a\u5f08\u770b\u770b\u3002</p>"},{"location":"algorithm/game-theory-study-note/#nim","title":"\u518d\u63a2Nim\u535a\u5f08","text":"<p>\u6211\u4eec\u9996\u5148\u6765\u8003\u8651\u7279\u6b8a\u5f62\u51b5\u4e0b\u7684\u5c3c\u59c6\u535a\u5f08\u2014\u2014\u53ea\u6709\u4e00\u5806\u77f3\u5b50\u7684\u5c3c\u59c6\u535a\u5f08\u3002</p> <p>\u5f53\u6211\u4eec\u6709\u4e00\u5806\u77f3\u5b50\uff0c\u8bb0\u8fd9\u4e00\u5806\u77f3\u5b50\u7684\u603b\u6570\u4e3a\\(a_1\\)\u3002\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u4e00\u5806\u77f3\u5b50\u7684\u540e\u7ee7\u662f\\({0,1,2,...,a_1-1}\\)\uff0c\u4e0d\u96be\u53d1\u73b0\u5355\u5806\u77f3\u5b50\u7684SG\u51fd\u6570\u5c31\u662f\u8be5\u5806\u77f3\u5b50\u7684\u77f3\u5b50\u6570\u3002</p> <p>\u63a5\u7740\uff0c\u6211\u4eec\u7ed9\u51fa\u4e00\u4e2a\u5b9a\u7406\uff1a</p> <p>SG\u5b9a\u7406\uff1a</p> <p>\u5982\u679c\u4e00\u4e2a\u6e38\u620f\u7b49\u4ef7\u4e8e\uff0c\u82e5\u5e72\u4e2a\u516c\u5e73\u7ec4\u5408\u6e38\u620f\u540c\u65f6\u8fdb\u884c\u4e14\u6bcf\u6b21\u53ea\u80fd\u5bf9\u67d0\u4e2a\u516c\u5e73\u7ec4\u5408\u6e38\u620f\u8fdb\u884c\u5355\u6b21\u64cd\u4f5c\uff0c\u90a3\u4e48\uff0c\u8be5\u6e38\u620f\u7684\u67d0\u4e2a\u5c40\u9762\u7684SG\u51fd\u6570\u7b49\u4e8e\u5176\u6240\u6709\u5b50\u6e38\u620f\u7684SG\u51fd\u6570\u7684\u5f02\u6216\u548c\u3002</p> <p>\u6839\u636eSG\u5b9a\u7406\uff0c\u6211\u4eec\u4e0d\u59a8\u5c06\u4e00\u822c\u7684\u5c3c\u59c6\u535a\u5f08\u770b\u4f5c\u82e5\u5e72\u4e2a\u53ea\u6709\u4e00\u5806\u77f3\u5b50\u7684\u5c3c\u59c6\u535a\u5f08\uff0c\u8fd9\u65f6\u6574\u4e2a\u6e38\u620f\u7684SG\u51fd\u6570\u7b49\u4e8e\u6240\u6709\u5806\u77f3\u5b50\u6570\u7684\u5f02\u6216\u548c\u3002</p> <p>\u4e8e\u662f\uff0c\u6211\u4eec\u4eceSG\u51fd\u6570\u7684\u89d2\u5ea6\u5c06Nim\u6e38\u620f\u53c8\u63a8\u4e86\u4e00\u904d\u3002</p> <p>\u6211\u7684\u7406\u89e3\u662f\uff1aSG\u51fd\u6570\u5c31\u662f\u5c06\u4e00\u4e2a\u516c\u5e73\u7ec4\u5408\u6e38\u620f\u62bd\u8c61\u6210Nim\u6e38\u620f\u7684\u5de5\u5177\u3002</p>"},{"location":"algorithm/game-theory-study-note/#_3","title":"\u9636\u68af\u5c3c\u59c6","text":""},{"location":"algorithm/game-theory-study-note/#_4","title":"\u95ee\u9898\u5f15\u5165\uff1a","text":"<p>A\u548cB\u559c\u6b22\u73a9\u535a\u5f08\u6e38\u620f\u3002\u4ed6\u4eec\u5728\u4e00\u4e2a\u9636\u68af\u4e0a\u7684\u5c42\u9636\u90fd\u653e\u4e0a\u4e86\u82e5\u5e72\u4e2a\u77f3\u5b50\uff08\\(\\ge 0\\))\u3002\u73b0\u5728A\u548cB\u8f6e\u6d41\u8fdb\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\u9009\u5b9a\u9636\u68af\u4e0a\u7684\u4efb\u610f\u4e00\u5c42\uff0c\u7136\u540e\u79fb\u52a8\u81f3\u5c11\u4e00\u4e2a\u77f3\u5b50\u5230\u76f8\u90bb\u7684\u8f83\u4f4e\u5c42\u3002\u65e0\u6cd5\u8fdb\u884c\u64cd\u4f5c\uff08\u6240\u6709\u7684\u77f3\u5b50\u90fd\u88ab\u79fb\u52a8\u5230\u4e86\u5730\u677f\u4e0a\uff09\u7684\u4eba\u8f93\u6389\u6e38\u620f\u3002\u7ed9\u5b9a\u4e00\u4e2a\u521d\u59cb\u72b6\u6001\uff0c\u95ee\u8c01\u8d62\uff1f\uff08\u8bd5\u6c42\\(O(n)\\)\u7684\u7b97\u6cd5\uff09</p> <p>\u4f8b\uff0c\u7ed9\u5b9a\u4e94\u4e2a\u5c42\u7684\u9636\u68af\uff0c\u4ece\u9ad8\u5230\u4f4e\u5206\u522b\u75315\uff0c4\uff0c3\uff0c2\uff0c1\u4e2a\u77f3\u5b50\uff0c\u5982\u4e0b\u56fe\u3002</p> <p></p>"},{"location":"algorithm/game-theory-study-note/#_5","title":"\u5206\u6790\uff1a","text":"<p>\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u9002\u5f53\u7684\u53d8\u5f62\u6210\u4e3a\u5c3c\u59c6\u535a\u5f08\u3002</p> <p>\u8003\u8651\u5fc5\u80dc\u7b56\u7565\u5982\u4e0b\uff1a</p> <p>\u5f53\u5947\u6570\u5c42\u7684\u77f3\u5b50\u6570\u7684\u5f02\u6216\u548c\u4e0d\u4e3a0\u65f6\uff0c\u5148\u624b\u80dc\u3002</p> <p>\u8fd9\u662f\u56e0\u4e3a\u5982\u679c\u5947\u6570\u5c42\u7684\u77f3\u5b50\u6570\u7684\u5f02\u6216\u548c\u4e0d\u4e3a0\u65f6\uff0c\u5148\u624b\u53ef\u4ee5\u4e00\u6b65\u4f7f\u5f97\u5176\u4e3a0\u3002</p> <p>\u5982\u679c\u9047\u5230\u5947\u6570\u5c42\u77f3\u5b50\u6570\u7684\u5f02\u6216\u548c\u4e3a0\u65f6\uff0c\u4e0d\u8bba\u662f\u52a0\uff08\u5c06\u5076\u6570\u5c42\u7684\u77f3\u5b50\u79fb\u5230\u5947\u6570\u5c42\uff09\uff0c\u8fd8\u662f\u51cf\uff08\u5c06\u5947\u6570\u5c42\u7684\u77f3\u5b50\u79fb\u5230\u5076\u6570\u5c42\u6216\u8005\u5730\u9762\uff09\uff0c\u90fd\u4e0d\u80fd\u505a\u5230\u7ef4\u6301\u77f3\u5b50\u6570\u7684\u5f02\u6216\u548c\u4e3a0.</p> <p>\u4e0d\u96be\u770b\u51fa\u8fd9\u662f\u548c\u5c3c\u59c6\u6e38\u620f\u4e00\u4e2a\u6982\u5ff5\u7684\u4e1c\u897f\u3002</p>"},{"location":"algorithm/game-theory-study-note/#_6","title":"\u4f8b\u9898\uff1a","text":"<p>POJ1704</p>"},{"location":"algorithm/game-theory-study-note/#_7","title":"\u7b80\u8ff0\uff1a","text":"<p>A\u548cB\u73a9\u6e38\u620f\u3002\u5728\u4e00\u4e2a\\(1\\times n\\)\u7684\u68cb\u76d8\u4e0a\u5171\u6709m\u4e2a\u68cb\u5b50\uff0cA\u548cB\u8f6e\u6d41\u8fdb\u884c\u64cd\u4f5c\uff1a\u9009\u62e9\u4e00\u4e2a\u68cb\u5b50\uff0c\u5e76\u5411\u53c8\u79fb\u52a8\uff0c\u4e0d\u5141\u8bb8\u8de8\u8fc7\u4efb\u4f55\u68cb\u5b50\u548c\u79fb\u51fa\u68cb\u76d8\u3002</p>"},{"location":"algorithm/game-theory-study-note/#_8","title":"\u5206\u6790\uff1a","text":"<p>\u6211\u4eec\u628a\u6bcf\u4e2a\u68cb\u5b50\u76ee\u524d\u6240\u80fd\u8d70\u7684\u6b65\u6570\u5355\u72ec\u62ff\u51fa\u6765\u505a\u4e3a\u4e00\u4e2a\u6570\u7ec4b\uff0c\u4e0d\u96be\u770b\u51fa\uff0c\u8fdb\u884c\u4e00\u6b21\u64cd\u4f5c\u5c31\u662f\u5c06\u524d\u4e00\u679a\u68cb\u5b50\u53ef\u8d70\u7684\u6b65\u6570\u8ba9\u6e21\u7ed9\u4e0b\u4e00\u679a\u68cb\u5b50\uff0c\u8fd9\u662f\u6807\u51c6\u7684\u9636\u68af\u5c3c\u59c6\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u901a\u8fc7\u9002\u5f53\u53d8\u5f62\u5373\u53ef\u5c06\u672c\u9898\u5316\u4e3a\u9636\u68af\u5c3c\u59c6\u3002</p>"},{"location":"algorithm/game-theory-study-note/#_9","title":"\u4ee3\u7801\uff1a","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;stdio.h&gt;\nusing namespace std;\nconst int N = 2005;\nint a[N];\nvoid solve()\n{\n    int n; scanf(\"%d\",&amp;n);\n    for(int i = 1; i &lt;= n; i++) scanf(\"%d\", a+i);\n    sort(a+1, a+n+1);\n    for(int i = n; i; i--) a[i] = a[i] - a[i-1] - 1;\n    int sum = 0;\n    for(int i = n; i &gt; 0; i -= 2) sum ^= a[i];\n    if(sum == 0) printf(\"Bob will win\\n\"); // \u5148\u624b\u8d25\n    else printf(\"Georgia will win\\n\"); //\u5148\u624b\u80dc\n}\nint main()\n{\n    int T; scanf(\"%d\",&amp;T);\n    while(T--) solve();\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"algorithm/game-theory-study-note/#_10","title":"\u6590\u6ce2\u90a3\u5951\u535a\u5f08","text":""},{"location":"algorithm/game-theory-study-note/#_11","title":"\u95ee\u9898\u5f15\u5165\uff1a","text":"<p>\u53d6\u77f3\u5b50</p> <p>1\u5806\u77f3\u5b50\u6709n\u4e2a,\u4e24\u4eba\u8f6e\u6d41\u53d6.\u5148\u53d6\u8005\u7b2c1\u6b21\u53ef\u4ee5\u53d6\u4efb\u610f\u591a\u4e2a\uff0c\u4f46\u4e0d\u80fd\u5168\u90e8\u53d6\u5b8c.\u4ee5\u540e\u6bcf\u6b21\u53d6\u7684\u77f3\u5b50\u6570\u4e0d\u80fd\u8d85\u8fc7\u4e0a\u6b21\u53d6\u5b50\u6570\u76842\u500d\u3002\u53d6\u5b8c\u8005\u80dc.\u5148\u53d6\u8005\u8d1f\u8f93\u51fa\"Second win\".\u5148\u53d6\u8005\u80dc\u8f93\u51fa\"First win\".</p>"},{"location":"algorithm/game-theory-study-note/#_12","title":"\u5206\u6790\uff1a","text":"<p>\u89c2\u5bdf\u53d1\u73b0\uff0c\u5f53n\u4e3a\u6590\u6ce2\u90a3\u5951\u6570\u65f6\uff0c\u5148\u624b\u5fc5\u8d25\u3002</p> <p>\u8bc1\u660e\u5982\u4e0b\uff1a</p> <p>\u8bben\u4e3a\u7b2ci\u4f4d\u6590\u6ce2\u90a3\u5951\u6570\uff0c\u8bb0\u4e3a\\(f_i\\).</p> <ul> <li>\u5f53\\(f_i\\le 2\\)\u65f6\uff0c\u5148\u624b\u5fc5\u8d25\u3002</li> <li>\u5f53\\(f_i&gt;2\\)\u65f6\uff0c\u4e0d\u59a8\u8bbe\\(n=f_{i-1}\\)\u548c\\(n=f_{i-2}\\)\u5fc5\u8d25. \u8003\u8651\uff1a\\(f_i = f_{i-1}+f_{i-2}, f_{i-1} \\le 2f_{i-2}\\)<ol> <li>\u6b64\u65f6\u5148\u624b\u4e0d\u80fd\u53d6\u5927\u4e8e\u7b49\u4e8e\\(f_{i-2}\\)\u4e2a\u77f3\u5b50, \u5426\u5219\u540e\u624b\u53ef\u4ee5\u4e00\u6b65\u53d6\u5b8c\u3002</li> <li>\u56e0\u6b64\u95ee\u9898\u8f6c\u5316\u4e3a\u5bf9\u4e8e\\(f_{i-2}\\)\u4e2a\u77f3\u5b50\uff0c\u5148\u624b\u80fd\u5426\u53d6\u5230\u6700\u540e\u4e00\u4e2a\uff1f\u663e\u7136\u662f\u4e0d\u884c\u7684\uff0c\u56e0\u4e3a\u6839\u636e\u5b9a\u4e49\\(f_{i-2}\\)\u5148\u624b\u5fc5\u8d25\u3002</li> </ol> </li> </ul> <p>\u8bc1\u6bd5\u3002</p> <p>\u63a5\u4e0b\u6765\u8003\u8651\u8bc1\u660en\u4e0d\u4e3a\u6590\u6ce2\u90a3\u5951\u6570\u65f6\uff0c\u5148\u624b\u5fc5\u80dc\u3002</p> <p>\u8bc1\u660e\uff1a</p> <p>\u9996\u5148\u7ed9\u51fa\u4e00\u4e2a\u5b9a\u7406:</p> <p>\u9f50\u80af\u591a\u592b\u5b9a\u7406(Zeckendorf's theorem)\uff1a\u4efb\u4f55\u6b63\u6574\u6570n\u53ef\u4ee5\u88ab\u8868\u793a\u6210\u82e5\u5e72\u4e2a\u4e0d\u8fde\u7eed\u7684\u6590\u6ce2\u90a3\u5951\u6570\u4e4b\u548c\u3002</p> <p>\u8bc1\u660e\u5982\u4e0b\uff1a</p> <ul> <li> <p>\u5f53n\u4e3a\u6590\u6ce2\u90a3\u5951\u6570\u65f6\uff0c\u5b9a\u7406\u663e\u7136\u6210\u7acb\u3002</p> </li> <li> <p>\u5f53n\u4e0d\u4e3a\u6590\u6ce2\u90a3\u5951\u6570\u65f6\uff0c\u4e0d\u59a8\u8bbe\u5bf9\u4e8e\\(i&lt;n\\), \u5b9a\u7406\u90fd\u6210\u7acb\uff08\u8fd9\u662f\u56e0\u4e3a\u6590\u6ce2\u90a3\u5951\u6570\u5217\\(f_1,f_2,f_3\\)\u5206\u522b\u4e3a1\uff0c2\uff0c3\uff09\u3002</p> </li> </ul> <p>\u8bbe\\(n'=n-f_m\\), \u5176\u4e2d\\(f_m\\)\u4e3a\u6700\u5927\u7684\u5c0f\u4e8en\u7684\u6590\u6ce2\u90a3\u5951\u6570\u3002</p> <p>\u6839\u636e\u5047\u8bbe\uff0c\\(n'\\)\u53ef\u4ee5\u8868\u8ff0\u6210\u82e5\u5e72\u4e2a\u4e0d\u8fde\u7eed\u7684\u6590\u6ce2\u90a3\u5951\u4e4b\u548c\uff0c\u4e14\\(n'&lt;f_{m-1}\\)\uff0c \u6545\u5176\u4e0d\u8fde\u7eed\u7684\u6590\u6ce2\u90a3\u5951\u6570\u4e2d\u4e0d\u5305\u542b\\(f_{m-1}\\)\u3002\u4e0d\u59a8\u8bb0\\(n'\\)\u7684\u6590\u6ce2\u90a3\u5951\u8868\u793a\u4e3a\\(F(n')\\)</p> <p>\u6545\uff0c\\(F(n) = f_m+F(n')\\)</p> <p>\u8bc1\u6bd5</p> <p>\u8bb0\\(n = f_{s_1}+f_{s_2}+....+f_{s_k}\\) , \u5373\u628an\u505a\u4e3ak\u4e2a\u4e0d\u8fde\u7eed\u7684\u6590\u6ce2\u90a3\u5951\u6570\u7684\u548c\uff0c\u5176\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u4e0b\u6807\u505a\u4e3a\u96c6\u5408s\uff0c \u5176\u4e2d\\(s1&lt;s_2&lt;...&lt;s_k\\)\u3002</p> <p>\u7ed9\u51fa\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5\uff1a</p> <ol> <li> <p>\u5148\u624b\u53d6\u5f53\u524d\u6700\u5c0f\u7684\u6590\u6ce2\u90a3\u5951\u6570\\(f_{s_1}\\)</p> </li> <li> <p>\u540e\u624b\u663e\u7136\u53ea\u80fd\u53d6\u4e0d\u5b8c\u5269\u4e0b\u7684\u6b21\u5c0f\u7684\u6590\u6ce2\u90a3\u5951\u6570\\(f_{s_2}\\)(\\(f_i\\gt 2f_{i-2}\\))</p> </li> </ol> <p>\u90a3\u4e48\u53ef\u4ee5\u770b\u4f5c\u4ee5\u540e\u624b\u4e3a\u5148\u624b\u7684\uff0c\u53d6\u8fd9\u4e2a\u6b21\u5c0f\u7684\u6590\u6ce2\u90a3\u5951\u6570\\(f_{s_2}\\)\u7684\u5b50\u95ee\u9898(\u5373\u5f62\u5f0f\u4e0a\u4e0e\u539f\u95ee\u9898\u4e00\u6837\uff0c\u4f46\u89c4\u6a21\u6bd4\u539f\u95ee\u9898\u5c0f)\u3002</p> <p>\u8003\u8651\u4e4b\u524d\u5df2\u7ecf\u8bc1\u660e\u8fc7n\u4e3a\u6590\u6ce2\u90a3\u5951\u65f6\u5148\u624b\u5fc5\u8d25\uff0c\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u4e2a\u5b50\u95ee\u9898\uff0c\u539f\u95ee\u9898\u7684\u5148\u624b\u53ef\u4ee5\u53d6\u5230\\(f_{s_2}\\)\u6700\u540e\u4e00\u5757\u77f3\u5b50\u3002</p> <p>\u4e8e\u662f\u5bf9\u4e8e\u4e4b\u540e\u6240\u6709\u7684\\(f_{s_i},i\\gt2\\), \u90fd\u53ef\u4ee5\u7c7b\u4f3c\u5730\u8003\u8651\u3002\u4e5f\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e2a\\(f_{s_i}\\)\u5b50\u95ee\u9898\uff0c\u539f\u95ee\u9898\u7684\u5148\u624b\u603b\u662f\u53d6\u5230\u6700\u540e\u4e00\u4e2a\u77f3\u5b50\u3002</p> <p>\u8bc1\u6bd5\u3002</p>"},{"location":"algorithm/game-theory-study-note/#_13","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n//#pragma GCC optimize(2)\n#define close();    ios::sync_with_stdio(false);\n#define endl '\\n'\n#define rep(i, l, r) for(int i = l; i &lt;= r; i++)\n#define dwn(i, r, l) for(int i = r; i &gt;= l; i--)\ntypedef long long LL;\nconst int N = 3e5+100;\nLL a[N];\nint cnt;\nvoid init()\n{\n    a[0] = a[1] = 1;\n    cnt = 1;\n    rep(i, 2, 100)\n    {\n        a[i] = a[i-1] + a[i-2];\n        ++cnt;\n        if(a[i] &gt;= (1ll&lt;&lt;31)) break;\n    }\n}\n\nvoid solve(LL n)\n{\n    auto p = lower_bound(a+1, a+cnt+1, n);\n    if(*p == n) cout &lt;&lt; \"Second win\\n\";\n    else cout &lt;&lt; \"First win\\n\";\n}\n\nint main()\n{\n    init();\n    LL n; cin &gt;&gt; n;\n    while(n) \n    {\n        solve(n);\n        cin &gt;&gt; n;\n    }\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"algorithm/game-theory-study-note/#_14","title":"\u5a01\u4f50\u592b\u535a\u5f08","text":""},{"location":"algorithm/game-theory-study-note/#_15","title":"\u95ee\u9898\u5f15\u5165","text":"<p>\u6d1b\u8c37P2252\uff1a</p> <p>\u6709\u4e24\u5806\u77f3\u5b50\uff0c\u6570\u91cf\u4efb\u610f\uff0c\u53ef\u4ee5\u4e0d\u540c\u3002\u6e38\u620f\u5f00\u59cb\u7531\u4e24\u4e2a\u4eba\u8f6e\u6d41\u53d6\u77f3\u5b50\u3002\u6e38\u620f\u89c4\u5b9a\uff0c\u6bcf\u6b21\u6709\u4e24\u79cd\u4e0d\u540c\u7684\u53d6\u6cd5\uff0c\u4e00\u662f\u53ef\u4ee5\u5728\u4efb\u610f\u7684\u4e00\u5806\u4e2d\u53d6\u8d70\u4efb\u610f\u591a\u7684\u77f3\u5b50\uff1b\u4e8c\u662f\u53ef\u4ee5\u5728\u4e24\u5806\u4e2d\u540c\u65f6\u53d6\u8d70\u76f8\u540c\u6570\u91cf\u7684\u77f3\u5b50\u3002\u6700\u540e\u628a\u77f3\u5b50\u5168\u90e8\u53d6\u5b8c\u8005\u4e3a\u80dc\u8005\u3002\u73b0\u5728\u7ed9\u51fa\u521d\u59cb\u7684\u4e24\u5806\u77f3\u5b50\u7684\u6570\u76ee\uff0c\u4f60\u5148\u53d6\uff0c\u5047\u8bbe\u53cc\u65b9\u90fd\u91c7\u53d6\u6700\u597d\u7684\u7b56\u7565\uff0c\u95ee\u6700\u540e\u4f60\u662f\u80dc\u8005\u8fd8\u662f\u8d25\u8005\u3002</p>"},{"location":"algorithm/game-theory-study-note/#_16","title":"\u5206\u6790\uff1a","text":"<p>\u5df2\u77e5\u521d\u59cb\u60c5\u51b5a\uff0cb\u4e0d\u540c\u65f6\u4e3a0\u3002</p> <p>\u5b9a\u4e49\uff1a \u540e\u624b\u6709\u5fc5\u80dc\u7b56\u7565\u7684\u5c40\u52bf\uff0c\u79f0\u4e4b\u4e3a\u5947\u5f02\u5c40\u52bf\u3002</p> <p>\u89c2\u5bdf\u5f97\u51fa\u7b2c\\(0\\)\u79cd\u5947\u5f02\u5c40\u52bf(0,0)\uff0c\u5f53a,b\u4e00\u65b9\u4e3a\u96f6\u6216\u8005a\u4e0eb\u7684\u5dee\u503c\u4e3a0\u65f6\u53ef\u4ee5\u4e00\u6b65\u5230\u8fbe(0,0)\u3002</p> <p>\u5f53\u9009\u624b\u89c2\u5bdf\u5230\u5947\u5f02\u5c40\u52bf(0,0)\u65f6\uff0c\u8868\u793a\u5bf9\u624b\u5df2\u7ecf\u53d6\u5b8c\u77f3\u5b50\uff0c\u5df2\u7ecf\u80dc\u5229\u3002</p> <p>\u7ee7\u7eed\u89c2\u5bdf\uff0c\u5f97\u51fa\u7b2c\\(1\\)\u79cd\u5947\u5f02\u5c40\u52bf(1,2)\uff0c\u5f53a,b\u4e00\u65b9\u4e3a2\u6216\u80051\u65f6\uff1ba\uff0cb\u5dee\u503c\u4e3a1\u65f6,\u53ef\u4ee5\u4e00\u6b65\u5230\u8fbe(1,2)\u3002</p> <p>\u5f53\u73a9\u5bb6\u89c2\u5bdf\u5230\u5947\u5f02\u5c40\u52bf(1,2)\u65f6\uff0c\u6709\u56db\u79cd\u884c\u52a8\u65b9\u6848\uff1a</p> <ol> <li>\\((1,2) \\rightarrow (1,1)\\)</li> <li>\\((1,2) \\rightarrow (1,0)\\)</li> <li>\\((1,2) \\rightarrow (0,1)\\)</li> <li>\\((1,2) \\rightarrow (0,2)\\)</li> </ol> <p>\u6211\u4eec\u53d1\u73b0\uff0c\u4e0d\u8bba\u9009\u62e9\u54ea\u79cd\u884c\u52a8\uff0c\u540e\u624b\u73a9\u5bb6\u90fd\u53ef\u4ee5\u4e00\u6b65\u5c06\u5176\u8f6c\u79fb\u5230\u7b2c\\(0\\)\u79cd\u5947\u5f02\u5c40\u52bf\uff0c\u5bfc\u81f4\u5148\u624b\u73a9\u5bb6\u7684\u5fc5\u8d25\u3002</p> <p>\u4e0d\u59a8\u7ee7\u7eed\u89c2\u5bdf\uff0c\u5f97\u5230\u7b2c\\(2\\)\u79cd\u5947\u5f02\u5c40\u52bf(3,5)\uff0c\u5f53a,b\u4e00\u65b9\u4e3a\\(3\\space or \\space 5\\)\u65f6 \u6216\u8005 \u5f53a\u4e0eb\u5dee\u503c\u4e3a2\u65f6\uff0c\u53ef\u4ee5\u4e00\u6b65\u5230\u8fbe(3,5)\u3002</p> <p>\u5f53\u5c40\u52bf\u662f(3,5)\u65f6\uff0c\u53ef\u4ee5\u5927\u81f4\u5206\u4e3a \\(3\\) \u79cd\u884c\u52a8\u65b9\u6848\uff1a</p> <ol> <li>\u7f29\u5c0fa\uff0cb\u7684\u5dee\u503c\u3002\u6b64\u65f6\u5dee\u503c\u4e3a2\uff0c\u7f29\u5c0f\u5dee\u503c\u610f\u5473\u7740\u5dee\u503c\u7684\u5927\u5c0f\u5c06\u53d8\u4e3a 0 \u6216\u8005 1\u3002\u5982\u6b64\u4e00\u6765\uff0c\u5bf9\u65b9\u53ef\u4ee5\u4e00\u6b65\u4f7f\u5c40\u52bf\u8fdb\u5165\u7b2c0, 1\u79cd\u5947\u5f02\u5c40\u52bf\u3002</li> <li>\u6269\u5927a\uff0cb\u7684\u5dee\u503c\u3002\u663e\u7136\u662f\u8981\u53d63\u4e2a\u77f3\u5b50\u7684\u90a3\u5806\uff0c\u4e5f\u5c31\u662f\u8fd9\u5806\u77f3\u5b50\u5c06\u4f1a\u53d8\u4e3a\\({0,1,2}\\)\u3002\u5982\u6b64\u4e00\u6765\uff0c\u5bf9\u65b9\u53ef\u4ee5\u4e00\u6b65\u4f7f\u5c40\u52bf\u8fdb\u5165\u7b2c0, 1\u79cd\u5947\u5f02\u5c40\u52bf\u3002</li> <li>\u7ef4\u6301a\uff0cb\u5dee\u503c\u4e0d\u53d8\u3002\u4e3a\u6b64\u9700\u8981\u6267\u884c\u7b2c\u4e8c\u79cd\u64cd\u4f5c\uff0c\u4e5f\u5c31\u662f\u4e24\u5806\u77f3\u5b50\u4e00\u8d77\u53d6\u76f8\u540c\u6570\u5b57\u7684\u77f3\u5b50\u8d70\u6389\u3002\u64cd\u4f5c\u5b8c\u540e\uff0c\u8f83\u5c0f\u7684\u6570\u5b57\u5c06\u4f1a\u5728\\({0,1,2}\\)\u4e2d\u3002\u5982\u6b64\u4e00\u6765\uff0c\u5bf9\u65b9\u53ef\u4ee5\u4e00\u6b65\u4f7f\u5c40\u52bf\u8fdb\u5165\u7b2c0, 1\u79cd\u5947\u5f02\u5c40\u52bf\u3002</li> </ol> <p>\u56e0\u6b64\u5c40\u52bf(3,5)\u662f\u5947\u5f02\u5c40\u52bf\u3002</p> <p>\u5230\u6b64\u6211\u4eec\u4f3c\u4e4e\u53d1\u73b0\u4e86\u5947\u5f02\u5c40\u52bf\u7684\u4e00\u4e9b\u89c4\u5f8b\uff0c\u6bd4\u5982\uff1a</p> <ol> <li> <p>\u5947\u5f02\u5c40\u52bf\u65e0\u6cd5\u5728\u4e00\u6b21\u4e14\u4ec5\u4e3a\u64cd\u4f5c\u5185\u53d6\u5b8c\u3002(0,0)\u4e5f\u662f\uff0c\u56e0\u4e3a\u65e0\u6cd5\u8fdb\u884c\u4e00\u6b21\u64cd\u4f5c\uff0c\u6b64\u65f6\u5bf9\u65b9\u5df2\u7ecf\u83b7\u80dc\u3002</p> </li> <li> <p>\u5f53\u73a9\u5bb6\u9047\u5230\u7b2c\\(i\\)\u4e2a\u5947\u5f02\u5c40\u52bf\u65f6\uff0c\u65e0\u8bba\u73a9\u5bb6\u5982\u4f55\u64cd\u4f5c\uff0c\u5bf9\u65b9\u53ef\u4ee5\u8ba9\u8be5\u73a9\u5bb6\u5728\u4e0b\u4e00\u56de\u5408\u9047\u5230\u7b2c\\(j(j&lt;i)\\)\u79cd\u5947\u5f02\u5c40\u52bf\u3002\u56e0\u6b64\u9047\u5230\u5947\u5f02\u5c40\u52bf\u53ef\u4ee5\u6052\u7b49\u4e8e\u5931\u8d25\u3002</p> </li> <li> <p>\u89c2\u5bdf\u5947\u5f02\u5c40\u52bf\u4e4b\u95f4\u7684\u8f6c\u79fb\u4f3c\u4e4e\u57fa\u4e8e\u4e24\u79cd\u673a\u5236\u3002\u8bb0\u5947\u5f02\u5c40\u52bf\u4e3a\\((x,y) \\space \u4e14 \\space x&lt;y\\)</p> </li> <li> <p>\u7f29\u5c0f\u5dee\u503c\u3002\u5982\u5c40\u52bf(3,5)\u7684\u7b2c\u4e00\u79cd\u884c\u52a8\u65b9\u6848\u3002</p> </li> <li>\u51cf\u5c0f\u8f83\u5c0f\u503c\u3002\u5982\u5c40\u52bf(3,5)\u7684\u7b2c2\uff0c3\u79cd\u65b9\u6848\u3002</li> </ol> <p>\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u8981\u4fdd\u8bc1\u5947\u5f02\u5c40\u52bf\u53ef\u4ee5\u5411\u4e0b\u8f6c\u79fb\uff0c\u8981\u4fdd\u8bc1\u4e24\u79cd\u673a\u5236\u7684\u5b9e\u73b0\u3002</p> <p>\u673a\u5236\u4e00\u7684\u4fdd\u8bc1\uff1a\u8f83\u9ad8\u5c42\u7684\u5947\u5f02\u5c40\u52bf\\((x,y)\\)\u7684\u5dee\u503c\\(y-x\\)\u9700\u8981\u6bd4 \u6bd4\u5176\u4f4e\u5c42\u7684\u5947\u5f02\u5c40\u52bf\u7684\u6700\u5927\u5dee\u503c \u591a\u4e14\u4ec5\u591a\\(1\\)\u3002\u56e0\u4e3a\u5982\u679c\u76f8\u7b49\u5c31\u6ca1\u6709\u610f\u4e49\uff0c\u5982\u679c\u5927\u4e8e1\u5219\u4e0d\u80fd\u4fdd\u8bc1\u8f6c\u79fb\u3002</p> <p>\u673a\u5236\u4e8c\u7684\u4fdd\u8bc1\uff1a\u8f83\u9ad8\u5c42\u7684\u5947\u5f02\u5c40\u52bf\\((x,y)\\)\u7684\u4e24\u4e2a\u503c\\(x,y\\)\u4e0d\u80fd\u4e0e \u8f83\u5176\u4f4e\u5c42\u7684\u5947\u5f02\u5c40\u52bf\u7684\u503c \u76f8\u7b49\u3002\u56e0\u4e3a\u5982\u679c\u5b58\u5728\u76f8\u7b49\uff0c\u5c31\u53ef\u4ee5\u4e00\u6b65\u8f6c\u79fb\u5230\u53e6\u4e00\u79cd\u5947\u5f02\u5c40\u52bf\uff0c\u5bfc\u81f4\u5bf9\u65b9\u5fc5\u8d25\uff0c\u4e0e\u5947\u5f02\u5c40\u52bf\u7684\u5b9a\u4e49\u76f8\u6096\u3002</p> <p>\u641e\u660e\u767d\u8fd9\u4e9b\u89c4\u5f8b\u4e4b\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u6765\u6784\u9020\u66f4\u591a\u7684\u5947\u5f02\u5c40\u52bf\u6765\u627e\u66f4\u591a\u7684\u89c4\u5f8b\u4e86\u3002</p> <p>\u5bf9\u4e8e\u7b2c\\(i\\)\u4e2a\u5947\u5f02\u5c40\u52bf\\((x,y)\\)\u5177\u4f53\u7684\u6784\u9020\u65b9\u6cd5\u662f\uff1a</p> <ol> <li>\u7b2c\\(0\\)\u4e2a\u5947\u5f02\u5c40\u52bf\u662f\\((0,0)\\)\u3002</li> <li>\\(x\\)\u9009\u5b9a\u4e3a\u7b2c[0, i)\u4e2a\u5947\u5f02\u5c40\u52bf\u4e2d \u672a\u66fe\u51fa\u73b0\u7684\u6700\u5c0f\u975e\u8d1f\u6574\u6570\u3002</li> <li>\\(y = x +i\\)</li> </ol> <p>\u4ee5\u4e0b\u662f\u5176\u4ed6\u7684\u5947\u5f02\u5c40\u52bf\uff1a</p> <pre><code>    \u7b2c3\u79cd\u5947\u5f02\u5c40\u52bf (4,7)\n\n    \u7b2c4\u79cd\u5947\u5f02\u5c40\u52bf (6,10)\n\n    \u7b2c5\u79cd\u5947\u5f02\u5c40\u52bf (8, 13)\n\n    \u7b2c6\u79cd\u5947\u5f02\u5c40\u52bf (9, 15)\n\n    \u7b2c7\u79cd\u5947\u5f02\u5c40\u52bf (11, 18)\n\n    \u2026\u2026\n</code></pre> <p>\u6211\u4eec\u901a\u8fc7\u4e0a\u9762\u7684\u6784\u9020\u53c8\u53ef\u4ee5\u603b\u7ed3\u51fa\u51e0\u6761\u7ed3\u8bba\uff1a</p> <ol> <li>\u4efb\u4f55\u81ea\u7136\u6570\u90fd\u5305\u542b\u5728\u4e14\u4ec5\u5305\u542b\u5728\u4e00\u4e2a\u5947\u5f02\u5c40\u52bf\u4e2d\u3002</li> <li>\u4efb\u610f\u64cd\u4f5c\u90fd\u4f1a\u4f7f\u5947\u5f02\u5c40\u52bf\u8f6c\u79fb\u6210\u975e\u5947\u5f02\u5c40\u52bf</li> <li>\u901a\u8fc7\u9002\u5f53\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5c06\u975e\u5947\u5f02\u5c40\u52bf\u8f6c\u6362\u6210\u5947\u5f02\u5c40\u52bf</li> <li>\u4e00\u4e2a\u5c40\u52bf\uff0c\u8981\u4e48\u4e3a\u975e\u5947\u5f02\u5c40\u52bf\uff0c\u8981\u4e48\u4e3a\u5947\u5f02\u5c40\u52bf</li> </ol> <p>\u5982\u56fe\uff1a</p> <p></p> <p>\u597d\u4e86\uff0c\u73b0\u5728\u6211\u4eec\u79bb\u89e3\u51fa\u8fd9\u9053\u9898\u5f88\u8fd1\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad\u9898\u76ee\u7ed9\u51fa\u7684\\(a,b\\)\u662f\u5426\u662f\u5947\u5f02\u5c40\u52bf\u5c31\u597d\u4e86\u3002</p> <p>\u4f46\u662f\u6570\u636e\u8303\u56f4\u5f88\u5927\uff0c\u9012\u63a8\u7684\u65b9\u5f0f\u6beb\u65e0\u7591\u95ee\u4f1a\u8d85\u65f6\u3002</p> <p>\u5176\u5b9e\u6211\u4eec\u6709\u4e00\u4e2a\u5f88\u597d\u7528\u7684\u516c\u5f0f\uff1a</p> <p></p> <p>\u5176\u4e2da[k]\u8868\u793a\u7b2ck\u4e2a\u5947\u5f02\u5c40\u52bf\u7684a\uff0cb[k]\u8868\u793a\u7b2ck\u4e2a\u5947\u5f02\u5c40\u52bf\u7684b\uff0c\u5176\u4e2dk\u4e3a\u81ea\u7136\u6570\u3002</p> <p>\u8bc1\u660e\u5982\u4e0b\uff1a</p> <p>\u9996\u5148\u6211\u4eec\u6709Beatty\u5b9a\u7406\uff1a</p> <p>\u8bbea\u3001b\u662f\u6b63\u65e0\u7406\u6570\u4e14 \\(\\frac{1}{a} +\\frac{1}{b} =1\\)\u3002\u8bb0\\(P={ \\lfloor na \\rfloor | n\u4e3a\u4efb\u610f\u7684\u6b63\u6574\u6570}\uff0cQ={ \\lfloor nb \\rfloor | n \u4e3a\u4efb\u610f\u7684\u6b63\u6574\u6570}\\)\uff0c\u5219P\u4e0eQ\u662f\\(N^+\\)\u7684\u4e00\u4e2a\u5212\u5206\uff0c\u5373\\(P\u2229Q=\\varnothing\\)\u4e14\\(P\u222aQ=N^+\\)\uff08\u6b63\u6574\u6570\u96c6\uff09\u3002</p> <p>\u56de\u987e\u6211\u4eec\u4e4b\u524d\u7684\u8fd9\u4e2a\u7ed3\u8bba\uff1a</p> <p>*\u4efb\u4f55\u81ea\u7136\u6570\u90fd\u5305\u542b\u5728\u4e14\u4ec5\u5305\u542b\u5728\u4e00\u4e2a\u5947\u5f02\u5c40\u52bf\u4e2d\u3002*\u4e14a,b\u4e0d\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\uff0c\u4e5f\u5c31\u662f\u8bf4\u5168\u4f53\u5947\u5f02\u5c40\u52bf(\u4e0d\u5305\u542b\\((0,0)\\))\u7684a\u7684\u96c6\u5408A\u548cb\u7684\u96c6\u5408B\u4e5f\u662f\u6b63\u6574\u6570\u7684\u4e00\u4e2a\u5212\u5206\u3002</p> <p>\u6211\u4eec\u5c1d\u8bd5\u7528\u4e00\u4e2a\u65e0\u7406\u6570\\(\\lfloor ku\\rfloor\\)\u6765\u8868\u793aa\uff0c\u4e00\u4e2a\u65e0\u7406\u6570\\(\\lfloor(u+1)k\\rfloor\\)\u6765\u8868\u793ab\uff0c\u5176\u4e2dk\u8868\u793a\u7b2ck\u4e2a\u5947\u5f02\u5c40\u52bf\uff0c\u540c\u65f6\\(b-a=n\\)\u7b26\u5408\u5b9a\u4e49\uff0c\u5176\u4e2dk\u4e3a\u6b63\u6574\u6570\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u6709\\(\\frac{1}{u}+\\frac{1}{u+1}=1\\)\u3002\u89e3\u8fd9\u4e2a\u65b9\u7a0b\u5f97\u51fa\\(u = \\frac{1+\\sqrt{5}}{2}\\)\u3002</p> <p>\u540c\u65f6\u5c06\\((0,0)\\)\u5e26\u5165\uff0ck=0, \u56e0\u6b64k\u53ef\u4ee5\u7b49\u4e8e0\u3002</p> <p>Q.E.D</p>"},{"location":"algorithm/game-theory-study-note/#_17","title":"\u4ee3\u7801\u5b9e\u73b0","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;cmath&gt;\nusing namespace std;\nint a, b;\nconst double lorry = (sqrt(5.0) + 1.0) / 2.0;\n\nint main() {\n    cin &gt;&gt; a &gt;&gt; b;\n    if(a &lt; b) swap(a, b);\n    int k = a - b;\n    if(b == int(lorry * k))\n        cout &lt;&lt; 0 &lt;&lt; endl;\n    else \n        cout &lt;&lt; 1 &lt;&lt; endl;\n}\n</code></pre>"},{"location":"algorithm/re-rooting-study-note/","title":"\u6362\u6839DP","text":""},{"location":"algorithm/re-rooting-study-note/#_1","title":"\u7b80\u8ff0","text":"<p>\u6362\u6839DP\u662f\u4e00\u7c7b\u7279\u6b8a\u7684\u6811\u5f62DP\u3002\u6bd4\u8f83\u96be\u60f3\u5230, \u4f46\u662f\u7406\u89e3\u4e86\u5c31\u4e0d\u96be\u4e86(\u6307\u601d\u8def, \u4e0d\u662f\u6307\u9898).</p> <p>\u5728\u89e3\u9898\u8fc7\u7a0b\u4e2d\uff0c\u5b58\u5728\u4e00\u7c7b\u6811\u4e0a\u95ee\u9898\uff0c\u8981\u6c42\u6211\u4eec\u6c42\u89e3\u6bcf\u4e2a\u8282\u70b9\u505a\u4e3a\u6839\u8282\u70b9\u7684\u65f6\u7684\u4e00\u4e9b\u6570\u636e\u7684\u95ee\u9898\u3002\u6734\u7d20\u7b97\u6cd5\u4e00\u822c\u662f\\(O(n^2)\\)\u5730\u8fdb\u884cn\u6b21dfs\u3002\u9047\u5230\u8fd9\u79cd\u95ee\u9898\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8003\u5bdf\u6839\u8282\u70b9\u8f6c\u79fb\u5230\u76f8\u90bb\u8282\u70b9\u65f6\u7684\u5f71\u54cd\uff0c\u4ece\u800c\u5f97\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u8fdb\u800c\\(O(1)\\)\u5730\u8f6c\u79fb\u6839\u8282\u70b9\u5f97\u5230\u65b0\u7684\u7b54\u6848\u3002\u6700\u540e\u8fbe\u5230\u5c06\u95ee\u9898\u603b\u7684\u590d\u6742\u5ea6\u964d\u5230\\(O(n)\\)\u7684\u76ee\u7684\u3002</p>"},{"location":"algorithm/re-rooting-study-note/#_2","title":"\u95ee\u9898\u5f15\u5165","text":"<p>\u7ed9\u5b9a\u4e00\u68f5n\u4e2a\u8282\u70b9\u65e0\u5411\u6811\uff08n\u4e2a\u8282\u70b9\uff0cn-1\u6761\u65e0\u5411\u8fb9\u7684\u8fde\u901a\u56fe\uff09\uff0c\u8981\u6c42\u9009\u51fa\u4e00\u4e2a\u8282\u70b9\uff0c\u4f7f\u5f97\u8be5\u8282\u70b9\u505a\u4e3a\u6839\u8282\u70b9\u65f6\uff0c\u6240\u6709\u8282\u70b9\u7684\u6df1\u5ea6\u548c\u6700\u5927\u3002</p> <p>\u67d0\u4e2a\u8282\u70b9\u7684\u6df1\u5ea6\u88ab\u5b9a\u4e49\u4e3a \u8be5\u8282\u70b9\u4e0e\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u3002</p> <p>\u6211\u4eec\u4e0d\u96be\u60f3\u5230\u7528dfs\u5728\\(O(n)\\)\u7684\u65f6\u95f4\u5185\u6c42\u51fa\u4efb\u4e00\u7ed9\u5b9a\u8282\u70b9\u505a\u4e3a\u6839\u8282\u70b9\u65f6, \u6240\u6709\u8282\u70b9\u7684\u6df1\u5ea6\u548c. \u56e0\u6b64\u5bb9\u6613\u60f3\u5230\u4e00\u4e2a\u6734\u7d20\u7684\u7b97\u6cd5\u662f\u8fdb\u884cn\u6b21dfs, \u65f6\u95f4\u590d\u6742\u5ea6\\(O(n^2)\\).</p> <p>\u6734\u7d20\u7b97\u6cd5\u662f\u53ef\u884c\u7684, \u4f46\u6211\u4eec\u5e76\u4e0d\u6ee1\u8db3.</p> <p>\u4f7f\u7528\u6362\u6839DP\u53ef\u4ee5\u5c06\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u5230\\(O(n)\\).</p>"},{"location":"algorithm/re-rooting-study-note/#_3","title":"\u95ee\u9898\u5206\u6790","text":"<p>\u8ba9\u6211\u4eec<sub>~\u94a6\u5b9a</sub>~\u9009\u5b9a\u4e00\u53f7\u8282\u70b9\u505a\u4e3a\u6839\u8282\u70b9.</p> <p>\u8ba9\\(size_i\\)\u8868\u793a\u4ee5\u7b2ci\u4e2a\u8282\u70b9\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u5927\u5c0f.(\u4e00\u53f7\u8282\u70b9\u505a\u4e3a\u6839\u8282\u70b9\u7684\u610f\u4e49\u4e0b)</p> <p>\u8ba9\\(dp_i\\)\u8868\u793a\u7b2ci\u4e2a\u8282\u70b9\u505a\u4e3a\u6839\u8282\u70b9\u65f6\u7684\u6240\u6709\u8282\u70b9\u7684\u6df1\u5ea6\u548c.</p> <p>\u8bb0\u8282\u70b9\\(u\\) \u4e3a\u8282\u70b9\\(v\\)\u7684 (\u4e00\u53f7\u8282\u70b9\u505a\u4e3a\u6839\u8282\u70b9\u7684\u610f\u4e49\u4e0b\u7684) \u7236\u8282\u70b9.</p> <p>\u90a3\u4e48\u53ef\u4ee5\u5f97\u5230\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\\(dp_v = dp_u-size_v+(size_1-size_v)\\)</p> <p>\u7b2c\u4e00\u4e2a\\(-size_v\\)\u7684\u610f\u4e49\u662f, \u5f53\u6839\u8282\u70b9\u8f6c\u79fb\u5230\u8282\u70b9v\u4e4b\u540e, \u4ee5\u8282\u70b9v\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u7684\u6240\u6709\u8282\u70b9\u7684\u6df1\u5ea6\u90fd\u51cf\u4e00. (\u56e0\u4e3a\u8282\u70b9u\u662f\u8282\u70b9v\u7684\u7236\u8282\u70b9)</p> <p>\u7b2c\u4e8c\u4e2a\\(size_1-size_v\\)\u7684\u6570\u91cf\u610f\u4e49\u662f, \u603b\u8282\u70b9\u6570\u51cf\u53bb\u4ee5v\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u7684\u5927\u5c0f. \u5728\u65b9\u7a0b\u4e2d\u7684\u610f\u4e49\u662f, \u6240\u6709\u4e0d\u662f\u4ee5\u8282\u70b9v\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u7684\u8282\u70b9\u7684\u6df1\u5ea6\u52a0\u4e00. (\u79bb\u6839\u8282\u70b9\u66f4\u8fdc\u4e86)</p> <p>\u4e0d\u96be\u770b\u51fa\u8fd9\u4e2a\u65b9\u7a0b\u7684\u8fb9\u754c\u6761\u4ef6\u662f\\(dp_1\\).</p> <p>\u5f97\u5230\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e4b\u540e, \u6211\u4eec\u53ea\u9700\u8981dfs\u9884\u5904\u7406\u4e00\u904d\u51fa\u6240\u9700\u8981\u7684\u4fe1\u606f(\u6bd4\u5982\\(size\\)\u6570\u7ec4, \u6bd4\u5982\\(dp_1\\))\u5373\u53ef, \u518ddfs\u4e00\u6b21\u51fa\u6240\u6709\u7684\u7b54\u6848\u53d6\u6700\u5927\u503c\u5373\u53ef.</p>"},{"location":"algorithm/re-rooting-study-note/#_4","title":"\u4ee3\u7801","text":"<pre><code>/* \u6362\u6839DP \u6a21\u677f\u9898 */\n#include &lt;algorithm&gt;\n#include &lt;vector&gt;\n#include &lt;iostream&gt;\nusing namespace std;\ntypedef long long LL;\nconst int N = 1e6+10;\nvector&lt;int&gt; G[N];\nvoid add(int u, int v)\n{\n    G[u].push_back(v);\n    G[v].push_back(u);\n}\nint n;\nint sz[N];\nint dep[N];\nint maxx;\nLL f[N];\nvoid pre(int u, int fa) //\u9884\u5904\u7406\u6df1\u5ea6\u548c\u5b50\u6811\u5927\u5c0f\n{\n    sz[u] = 1;\n    for(int v: G[u])\n    {\n        if(v == fa) continue;\n        dep[v] = dep[u]+1;\n        pre(v, u);\n        f[1] += dep[v];\n        sz[u] += sz[v];\n    }\n}\n\nvoid dp(int u, int fa)\n{\n    for(int v: G[u])\n    {\n        if(v == fa) continue;\n        f[v] = f[u] - 2*sz[v] + sz[1]; //\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\n        dp(v, u);\n    }\n    if(f[u] &gt; f[maxx]) maxx = u;\n}\n\n\nint main()\n{\n    scanf(\"%d\",&amp;n);\n    for(int i = 1; i &lt; n; i++)\n    {\n        int u, v; scanf(\"%d %d\",&amp;u,&amp;v);\n        add(u, v);\n    } \n    //\u5efa\u56fe\n\n    maxx = 1;\n    pre(1, 0); //\u9884\u5904\u7406\n    dp(1, 0); //DP\n\n    cout &lt;&lt; maxx &lt;&lt; endl;\n    system(\"pause\");\n}\n</code></pre>"},{"location":"algorithm/re-rooting-study-note/#_5","title":"\u4f8b\u9898\u5206\u6790:","text":""},{"location":"algorithm/re-rooting-study-note/#usaco10margreat-cow-gathering-g","title":"[USACO10MAR]Great Cow Gathering G","text":"<p>\u4f20\u9001\u95e8</p> <p>\u53ea\u662f\u4e0a\u9762\u90a3\u9898\u52a0\u4e86\u8fb9\u6743, \u70b9\u6743\u800c\u5df2, \u4e0d\u80fd\u8bf4\u4e00\u6a21\u4e00\u6837, \u53ea\u80fd\u8bf4\u5b8c\u5168\u76f8\u4f3c.</p> <p>\u76f4\u63a5\u7ed9\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b \\(f[v] = f[u] + (sz[1] - 2*sz[v])*w;\\) \u5176\u4e2dw\u662f\u8fb9\u6743, \u8282\u70b9u\u662f\u8282\u70b9v\u7684\u7236\u8282\u70b9, \\(sz[i]\\)\u8868\u793a\u4ee5\u8282\u70b9i\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u5927\u5c0f.</p> <p>note: \u8fb9\u6743\u548csize\u76f8\u4e58\u65f6\u4f1a\u7206int</p> <pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\ntypedef long long LL;\nconst int N = 1e5+100;\nstruct edge{\n    int to, w;\n};\n\nvector&lt;edge&gt; G[N];\nvoid add(int u, int v, int w)\n{\n    G[u].push_back({v, w});\n    G[v].push_back({u, w});\n}\nint n;\nLL c[N];\nLL f[N];\nLL sz[N];\nvoid pre(int u, int fa)\n{\n    sz[u] = c[u];\n    for(auto x: G[u])\n    {\n        if(x.to == fa) continue;\n        pre(x.to, u);\n        sz[u] += sz[x.to];\n        f[u] += sz[x.to] * x.w + f[x.to];\n    }\n}\nLL ans;\nvoid dp(int u, int fa)\n{\n    for(auto x: G[u])\n    {\n        if(x.to == fa) continue;\n        f[x.to] = f[u] + (sz[1] - 2*sz[x.to])*x.w;\n        dp(x.to, u);\n    }\n    if(f[u] &lt; ans) ans = f[u];\n}\n\nint main()\n{\n    cin &gt;&gt; n;\n    for(int i = 1; i &lt;= n; i++) cin &gt;&gt; c[i];\n\n    for(int i = 1; i &lt; n; i++)\n    {\n        int u, v , w; cin &gt;&gt; u &gt;&gt; v &gt;&gt; w;\n        add(u, v, w);\n    }\n\n    ans = 1ll&lt;&lt;62;\n    pre(1, 0);\n    dp(1, 0);\n\n    cout &lt;&lt; ans &lt;&lt; endl;\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"algorithm/re-rooting-study-note/#usaco12febnearby-cows-g","title":"[USACO12FEB]Nearby Cows G","text":"<p>\u4f20\u9001\u95e8</p> <p>\u4e4d\u770b\u8d77\u6765\u5f88\u6050\u6016, \u4f46\u662f\u8003\u8651\u5230\\(k\\le20\\)\u5c31\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u4e86. \u590d\u6742\u5ea6\\(O(kn)\\)</p> <p>\u8bb0\\(f[i][j]\\)\u4e3a\u79bb\u8282\u70b9\\(i\\)\u7684\u8ddd\u79bb\u4e3a\\(j\\)\u7684\u8282\u70b9\u7684\u6570\u91cf.</p> <p>\u7b2c\u4e00\u6b21dfs\u9884\u5904\u7406\u4e0b\\(f[i][j]\\), \u8ba9\u5176\u7b49\u4e8e\u5176\u672c\u8eab\u5b9a\u4e49, \u4f46\u53ea\u9650\u5b9a\u5728\u4ee5\u8282\u70b9i\u4e3a\u6839\u7684\u5b50\u6811\u4e2d.</p> <p>\u7ed9\u51fa\u7b2c\u4e8c\u6b21dfs\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b: \\(f[v][j] += \\sum_{cnt=2}^{k}f[u][cnt-1] - f[v][cnt-2]\\)</p> <pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\ntypedef long long LL;\nconst int N = 1e5+100;\nvector&lt;int&gt; G[N];\nvoid add(int u, int v)\n{\n    G[u].push_back(v);\n    G[v].push_back(u);\n}\nLL c[N];\nLL f[N][22];\nint n, k; \nvoid pre(int u, int fa)\n{\n    f[u][0] = c[u];\n    for(int v: G[u])\n    {\n        if(v == fa) continue;\n        pre(v,u);\n        for(int i = 0; i &lt; k; i++)\n        f[u][i+1] += f[v][i];\n    }\n}\nvoid dfs(int u, int fa)\n{\n    for(int v: G[u])\n    {\n        if(v == fa) continue;\n        for(int i = k; i &gt;= 2; i--)\n        {\n            f[v][i] += f[u][i-1] - f[v][i-2];\n        }\n        f[v][1]+=c[u];\n        dfs(v, u);\n    }\n}\n\nint main()\n{\n    cin &gt;&gt; n &gt;&gt; k;\n\n    for(int i = 1; i &lt; n; i++)\n    {\n        int u, v; cin &gt;&gt; u &gt;&gt; v;\n        add(u, v);\n    }\n\n    for(int i = 1; i &lt;= n; i++) cin &gt;&gt; c[i];\n\n    pre(1, 0);\n    dfs(1, 0);\n\n    for(int i = 1; i &lt;= n; i++)\n    {\n        LL ans = 0;\n        for(int j = 0; j &lt;= k; j++)\n        ans += f[i][j];\n\n        cout &lt;&lt; ans &lt;&lt; endl;\n    }\n\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"algorithm/re-rooting-study-note/#cf708c-centroids","title":"CF708C Centroids","text":"<p>\u4f20\u9001\u95e8</p> <p>\u7b80\u8981\u9898\u5e72\uff1a</p> <p>\u7ed9\u5b9a\u4e00\u68f5\u65e0\u6839\u6811\uff0c\u5171n\u4e2a\u8282\u70b9\u3002</p> <p>\u5141\u8bb8\u8fdb\u884c\u4e00\u6b21\u64cd\u4f5c\uff1a\u9009\u62e9\u4e00\u6761\u8fb9\uff0c\u5e76\u5c06\u8fd9\u6761\u8fb9\u5220\u9664\uff0c\u7136\u540e\u518d\u65b0\u52a0\u4e00\u6761\u8fb9\u3002\u64cd\u4f5c\u5fc5\u987b\u4fdd\u8bc1\u6267\u884c\u5b8c\u540e\u4f9d\u7136\u662f\u68f5\u6811\u3002</p> <p>\u5220\u9664\u54ea\u6761\u8fb9\u548c\u589e\u52a0\u4e00\u6761\u65b0\u8fb9\u662f\u5b8c\u5168\u81ea\u7531\u7684\u3002</p> <p>\u95ee\uff0c\u6709\u591a\u5c11\u8282\u70b9\u5728\u6267\u884c\u5b8c\u4e00\u6b21\u6216\u96f6\u6b21\u64cd\u4f5c\u4e4b\u540e\u53ef\u4ee5\u53d8\u6210\u6811\u7684\u91cd\u5fc3\u3002</p> <p>\u5176\u4e2d\uff0c\u6811\u7684\u91cd\u5fc3\u7b49\u4ef7\u4e8e\uff0c\u5c06\u8be5\u8282\u70b9\u5220\u9664\u540e\uff0c\u5269\u4e0b\u7684\u68ee\u6797\u6ca1\u6709\u4efb\u4f55\u6811\u7684\u5927\u5c0f\u5927\u4e8e\\(\\lfloor\\frac{n}{2}\\rfloor\\).</p> <p>\u6570\u636e\u89c4\u6a21\uff1a\\(n\\le 4e5\\)</p> <p>\u5206\u6790\uff1a</p> <p>\u8bb0\u4ee5\u8282\u70b9v\u4e3a\u6839\u7684\u5b50\u6811\u7684\u5927\u5c0f\u4e3a\\(sz[v]\\)\u3002</p> <p>\u9996\u5148\u7ed9\u51fa\u6027\u8d28\uff1a\u4e00\u68f5\u6811\u4e00\u5b9a\u6709\u91cd\u5fc3\u3002</p> <p>\u65e2\u7136\u662f\u65e0\u6839\u6811\uff0c\u6211\u4eec\u4e0d\u59a8\u6307\u5b9a\u4e00\u4e2a\u539f\u6811\u7684\u91cd\u5fc3\u505a\u4e3a\u6839\u8282\u70b9\u3002</p> <p>\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\uff0c\u6839\u636e\u91cd\u5fc3\u7684\u5b9a\u4e49\uff0c\u5bf9\u4e8e\u4efb\u610f\u975e\u6839\u8282\u70b9\\(x\\), \u5fc5\u7136\u5b58\u5728$sz[x] \\le \\frac{n}{2} $.</p> <p>\u4e8e\u662f\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u975e\u6839\u8282\u70b9\\(x\\)\uff0c\u6211\u4eec\u53ea\u8981\u8003\u8651\u5176\u7236\u8282\u70b9\u7684\u8fd9\u4e2a\u5b50\u6811\u3002</p> <p>\u5982\u679c\u5176\u7236\u8282\u70b9\u8fd9\u4e2a\u5b50\u6811\u5927\u4e8e\\(\\frac{n}{2}\\), \u90a3\u4e48\u6211\u4eec\u5c31\u5e94\u8be5\u4ece\u8fd9\u4e2a\u7236\u8282\u70b9\u5b50\u6811\u4e2d\u627e\u51fa\u4e00\u4e2a\u5b50\u6811\\(target\\)\uff0c\u4f7f\u5f97\\(n-sz[x]-sz[target]\\le \\frac{n}{2}\\).</p> <p>\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u73b0\u5728\u628a\u95ee\u9898\u8f6c\u5316\u6210\u4e86\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u975e\u6839\u8282\u70b9\\(x\\)\uff0c\u6211\u4eec\u8981\u5728 \u539f\u6811\u51cf\u53bb\u4ee5\u8282\u70b9x\u4e3a\u6839\u7684\u5b50\u6811\u7684\u6811\u4e2d \u627e\u5230\u4e00\u4e2a\u4e0d\u8d85\u8fc7\\(\\frac{n}{2}\\)\u7684\u6700\u5927\u5b50\u6811\uff0c\u4e0d\u59a8\u8bb0\u8fd9\u4e2a\u5b50\u6811\u7684\u5927\u5c0f\u4e3a\\(f[x]\\).</p> <p>\u7136\u540e\u6211\u4eec\u53bbcheck\\(n-sz[x]-f[x]\\le \\frac{n}{2}\\)\u3002</p> <p>\u4e00\u4e2a\u76f4\u89c2\u7684\u60f3\u6cd5\u662f\uff0c\\(f[x] = f[fa]\\), \u4ece\u5b9a\u4e49\u4e0a\u6765\u770b\u8fd9\u662f\u663e\u7136\u7684\u3002</p> <p>\u7136\u540e\u518d\u8003\u8651\u4ee5\u8282\u70b9x\u7684\u5144\u5f1f\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u5185\u7684\u5927\u5c0f\u4e0d\u8d85\u8fc7\\(\\frac{n}{2}\\)\u3002</p> <p>\u4e0d\u59a8\u8bbe\u8282\u70b9x\u7684\u5144\u5f1f\u8282\u70b9\u96c6\u5408\u4e3a\\(B(x)\\), \u8bb0\u4ee5\u8282\u70b9v\u4e3a\u6839\u7684\u5b50\u6811\u7684\u4e0d\u8d85\u8fc7\\(\\frac{n}{2}\\)\u7684\u5b50\u6811\u5927\u5c0f\u4e3a\\(d[j]\\) \u4e8e\u662f\u6211\u4eec\u5f97\u51fa\uff1a</p> <p> \u8003\u8651\u4e0a\u9762\u8fd9\u4e2a\u67ff\u5b50\u9047\u5230\u83ca\u56fe\u4f1a\u88ab\u5361\u6210\\(O(n^2)\\)\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u7528\u4e00\u4e2a\u5c0f\u6280\u5de7\u8fdb\u884c\u8f6c\u6362, \u8bb0\\(d[i][0]\\)\u4e3a\u4ee5\u8282\u70b9i\u4e3a\u6839\u7684\u5b50\u6811\u7684\u4e0d\u8d85\u8fc7\\(\\frac{n}{2}\\)\u7684\u6700\u5927\u5b50\u6811\u5927\u5c0f, \\(d[i][1]\\)\u4ee5\u8282\u70b9i\u4e3a\u6839\u7684\u5b50\u6811\u7684\u4e0d\u8d85\u8fc7\\(\\frac{n}{2}\\)\u7684\u6b21\u5927\u5b50\u6811\u5927\u5c0f\uff1a  \u4e8e\u662f\u672c\u9898\u5c31\u53ef\u505a\u4e86\u3002</p> <p>\u4e09\u904ddfs\uff0c\u7b2c\u4e00\u904d\u627e\u91cd\u5fc3\uff0c\u4e00\u6b21\u9884\u5904\u7406\\(d[],size[]\\)\u6570\u7ec4\uff0c\u4e00\u6b21\u6362\u6839DP\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;queue&gt;\n#include &lt;cstring&gt;\n#include &lt;map&gt;\n#include &lt;set&gt;\n#include &lt;cmath&gt;\n#include &lt;assert.h&gt;\nusing namespace std;\n//#pragma GCC optimize(2)\n#define close();    ios::sync_with_stdio(false);\n#define endl '\\n'\n#define rep(i, l, r) for(int i = l; i &lt;= r; i++)\n#define dwn(i, r, l) for(int i = r; i &gt;= l; i--)\ntypedef long long LL;\nconst int N = 4e5+100;\n\nint n; \nvector&lt;int&gt; G[N];\nint root;\nint f[N];\nint dp[N][2];\nint sz[N];\nint is[N];\nvoid pre(int x = 1, int fa = 0)\n{\n    int mx = 0;\n    sz[x] = 1;\n    for(int e: G[x])\n    {\n        if(e == fa) continue;\n        pre(e, x);\n        mx = max(mx, sz[e]);\n        sz[x] += sz[e];\n    }\n    if(n - sz[x] &lt;= n/2 &amp;&amp; mx &lt;= n/2 ) is[x] = 1; \n}\n\nvoid dfs1(int x = root, int fa = 0)\n{\n    sz[x] = 1;\n    for(int e: G[x])\n    {\n        if(e == fa) continue;\n        dfs1(e, x);\n        sz[x] += sz[e];\n        int t = ((sz[e] &lt;= n/2)? sz[e]: dp[e][0]);\n        if(t &lt;= n/2 &amp;&amp; dp[x][0] &lt; t) \n        {\n            dp[x][1] = dp[x][0];\n            dp[x][0] = t;\n        }\n        else if(t &lt;= n/2 &amp;&amp; dp[x][1] &lt; t) \n        {\n            dp[x][1] = t;\n        }\n    }\n}\n\nvoid dfs(int x = root, int fa = 0)\n{\n    if(x != root)\n    {\n        f[x] = (n-sz[x]&lt;=n/2)? n-sz[x]: 0;\n        int t = ((sz[x] &lt;= n/2)? sz[x]: dp[x][0]);\n        if(t != dp[fa][0]) f[x] = max(dp[fa][0], f[0]);\n        else f[x] = max(f[x], dp[fa][1]);\n        f[x] = max(f[x], f[fa]);\n    }\n    else f[x] = 0;\n    if(f[x] &gt;= n-n/2-sz[x]) is[x] = 1;\n    for(int e: G[x]) \n    {\n        if(fa == e) continue;\n        dfs(e, x);\n    }\n}\n\nint main()\n{\n    close();\n    cin &gt;&gt; n;\n    rep(i, 1, n-1) \n    {\n        int u, v; cin &gt;&gt; u &gt;&gt; v;\n        G[u].push_back(v);\n        G[v].push_back(u);\n    }\n\n    pre();\n    rep(i, 1, n) if(is[i]) { root = i; f[root] = dp[root][0]; break; }\n    dfs1();\n    dfs();\n    rep(i, 1, n) cout &lt;&lt; is[i] &lt;&lt; \" \"; cout &lt;&lt; endl;\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/","title":"\u7b80\u4ecb","text":"<p>\u8fd9\u4e2a\u9875\u9762\u5f52\u6863\u4e86\u4e00\u4e9b\u6ca1\u4ec0\u4e48\u7528\u7684\u535a\u5ba2</p>"},{"location":"archived/codefroces/Codeforces-Round-110/","title":"A. Fair Playoff","text":"<p>\u5206\u6790\uff1a\u7565</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\nint a[10];\nint main()\n{\n    int t; cin &gt;&gt; t;\n    while(t--)\n    {\n        for(int i = 0; i &lt; 4; i++) cin &gt;&gt; a[i];\n        int x = max(a[0], a[1]), y = max(a[2], a[3]);\n        if(x&gt;y) swap(x, y);\n        sort(a, a+4);\n        if(x == a[2] &amp;&amp; y == a[3]) cout &lt;&lt; \"YES\\n\";\n        else cout &lt;&lt; \"NO\\n\";\n    }\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-110/#b-array-reodering","title":"B. Array Reodering","text":"<p>\u5206\u6790\uff1a \u628a\u5076\u6570\u5168\u90e8\u6392\u5230\u6700\u524d\u9762\uff0c\u5bf9\u5947\u6570\u66b4\u529b\u679a\u4e3e\u3002\u590d\u6742\u5ea6\\(O(n^2)\\)</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\nconst int N = 3010;\n\nint a[N], b[N];\nint gcd(int a, int b) {return b == 0? a: gcd(b, a%b);}\nint main()\n{\n    int t; cin &gt;&gt; t;\n    while(t--)\n    {\n        int n; scanf(\"%d\",&amp;n);\n        for(int i = 0; i &lt; n; i++) scanf(\"%d\",&amp;b[i]);\n        long long ans = 0;\n        int cnt = 0;\n        for(int i = 0; i &lt; n; i++) \n            if(b[i]%2 == 0) \n            {\n                a[cnt++] = b[i];\n                ans += n-cnt;\n            }\n        int x = cnt;\n        for(int i = 0; i &lt; n; i++)\n            if(b[i]&amp;1) a[cnt++] = b[i];\n\n        for(int i = x; i &lt; n; i++)\n            for(int j = i+1; j &lt; n; j++)\n            if(gcd(a[i], a[j]) &gt; 1) ans++;\n        cout &lt;&lt; ans &lt;&lt; endl;\n    }\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-110/#c-unstable-string","title":"C. Unstable String","text":"<p>\u5206\u6790\uff1a \u7ebf\u6027dp\u3002 \u8bb0dp[i][0]\u8868\u793a\u4ee5\u7b2ci\u4e2a\u5b57\u7b26\u7ed3\u5c3e\u5e76\u4e14\u4ee50\u7ed3\u5c3e\u7684\u5408\u6cd5\u5b50\u4e32\u7684\u6570\u91cf. dp[i][1]\u8868\u793a\u4ee5\u7b2ci\u4e2a\u5b57\u7b26\u7ed3\u5c3e\u5e76\u4e14\u4ee51\u7ed3\u5c3e\u7684\u5408\u6cd5\u5b50\u4e32\u7684\u6570\u91cf. $$ dp[i][0]=\\left{ \\begin{aligned} dp[i-1][1]+1 &amp;&amp;&amp;&amp;s[i] = 0 \\space or \\space ? \\ 0 &amp;&amp;&amp;&amp;s[i] = 1 \\end{aligned} \\right. $$ $$ dp[i][1]=\\left{ \\begin{aligned} dp[i-1][0]+1 &amp;&amp;&amp;&amp;s[i] = 1 \\space or \\space ? \\ 0 &amp;&amp;&amp;&amp;s[i] = 0 \\end{aligned} \\right. $$ dp\u7684\u8fc7\u7a0b\u4e2d\u7ef4\u62a4\u7b54\u6848\u548c\u5373\u53ef.</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;string&gt;\nusing namespace std;\nconst int N = 2e5+100;\nint dp[N][2];\nstring s;\nint main()\n{\n    int t; cin &gt;&gt; t;\n    while(t--)\n    {\n        cin &gt;&gt; s; \n        int n = s.size();\n        for(int i = 0; i &lt; n; i++) dp[i][0] = dp[i][1] = 0;\n        long long ans = 1;\n        if(s[0] == '1') dp[0][1] = 1;\n        else if(s[0] == '0') dp[0][0] = 1;\n        else dp[0][1] = dp[0][0] = 1;\n\n        for(int i = 1; i &lt; n; i++)\n        {\n            if(s[i] == '1') dp[i][1] = dp[i-1][0] + 1;\n            else if(s[i] == '0') dp[i][0] = dp[i-1][1] + 1;\n            else \n            {\n                dp[i][1] = dp[i-1][0] + 1;\n                dp[i][0] = dp[i-1][1] + 1;\n            }\n\n            ans += max(dp[i][1], dp[i][0]);\n        }\n        // for(int i = 0 ; i &lt; n; i++) cout &lt;&lt; dp[i][0] &lt;&lt; \" \"; cout &lt;&lt; endl;\n        // for(int i = 0 ; i &lt; n; i++) cout &lt;&lt; dp[i][1] &lt;&lt; \" \"; cout &lt;&lt; endl;\n        cout &lt;&lt; ans &lt;&lt; endl;\n    }\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-110/#d-playoff-tournament","title":"D. Playoff Tournament","text":"<p>\u5206\u6790: \u5728\u4e8c\u53c9\u5806\u4e0aDP. \u5bf9\u6bcf\u4e2a\u8282\u70b9\u6765\u8bf4, \u5982\u679c\\(s_i\\)\u662f0,\u90a3\u4e48\u8be5\u8282\u70b9\u7684\u53ef\u80fd\u4eba\u6570\u5c31\u662f\u4e0b\u6807\u8f83\u4f4e\u7684\u5b50\u8282\u70b9\u7684\u53ef\u80fd\u4eba\u6570, \u5982\u679c\\(s_i\\)\u662f1, \u90a3\u4e48\u5c31\u662f\u4e0b\u6807\u8f83\u9ad8\u7684\u5b50\u8282\u70b9\u7684\u53ef\u80fd\u4eba\u6570. \u5982\u679c\\(s_i\\)\u662f?, \u90a3\u4e48\u8be5\u8282\u70b9\u5c31\u662f\u4e24\u4e2a\u5b50\u8282\u70b9\u7684\u53ef\u80fd\u4eba\u6570\u4e4b\u548c. \u8fb9\u754c\u6761\u4ef6\u662f\u53f6\u8282\u70b9, \u8981\u4e48\u4e3a1, \u8981\u4e48\u4e3a2. \u8003\u8651\u6bcf\u6b21\u4fee\u6539\u53ea\u4f1a\u6539\u53d8\u8be5\u8282\u70b9,\u4ee5\u53ca\u8be5\u8282\u70b9\u7684\u7956\u5148\u8282\u70b9,\u5355\u8bcd\u64cd\u4f5c\u662f\\(O(\\log n)\\)\u7684. \u6bcf\u6b21\u8be2\u95ee\u5b8c\u540e, \u7b54\u6848\u662f\u6839\u8282\u70b9\u7684\u53ef\u80fd\u6570. \u6545\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\\(O(n \\log n)\\) \u4ee3\u7801:</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\nconst int N = 600100;\nint c[N], dp[N];\nint to[N];\nvoid  init(int k, int n)\n{\n    int cnt = 0;\n    for(int i = k-1; i &gt;= 0; i--)\n    {\n        int x = 1&lt;&lt;i;\n        for(int j = 0; j &lt; x; j++)\n            c[x+j] = ++cnt;  \n    }\n    for(int i = 1; i &lt;= n-1; i++)\n        to[c[i]] = i;\n    // for(int i = 1; i &lt; n; i++)\n    //     printf(\"%d-&gt;%d\\n\",i,to[i]);\n}\nstring s;\n\nint update(int x, int mode, int n)\n{\n    x = to[x];\n    c[x] = mode;\n    while(x)\n    {\n        // printf(\"now x = %d\\n\", x);\n        if(c[x] == 0)\n        {\n            if(x &gt;= n/2) dp[x] = 1;\n            else dp[x] = dp[x&lt;&lt;1];\n        }\n        else if(c[x] == 1)\n        {\n            if(x &gt;= n/2) dp[x] = 1;\n            else dp[x] = dp[(x&lt;&lt;1)+1];\n        }\n        else\n        {\n            if(x &gt;= n/2) dp[x] = 2;\n            else dp[x] = dp[(x&lt;&lt;1)+1] + dp[x&lt;&lt;1];\n        }\n        x /= 2;\n    }\n    // for(int i = 1; i &lt; n; i++) cout &lt;&lt; dp[i] &lt;&lt; \" \"; cout &lt;&lt; endl;\n    return dp[1];\n}\n\nint main()\n{\n    int k; scanf(\"%d\",&amp;k);\n    int n = 1&lt;&lt;k;\n    init(k, n);\n    cin &gt;&gt; s;\n    for(int i = 1; i &lt;= n-1; i++)\n    {\n        int x = to[i];\n        if(s[i-1] == '0')\n        {\n            if(x &gt;= n/2) dp[x] = 1;\n            else dp[x] = dp[x&lt;&lt;1];\n            c[x] = 0;\n        }\n        else if(s[i-1] == '1')\n        {\n            if(x &gt;= n/2) dp[x] = 1;\n            else dp[x] = dp[(x&lt;&lt;1)+1];\n            c[x] = 1;\n        }\n        else\n        {\n            if(x &gt;= n/2) dp[x] = 2;\n            else dp[x] = dp[(x&lt;&lt;1)+1] + dp[x&lt;&lt;1];\n            c[x] = 2;\n        }\n    }\n    // for(int i = 1; i &lt; n; i++) cout &lt;&lt; dp[i] &lt;&lt; \" \"; cout &lt;&lt; endl;\n    int m; cin &gt;&gt; m;\n    for(int i = 0; i &lt; m; i++)\n    {\n        int x; cin &gt;&gt; x &gt;&gt; s;\n        int ans;\n        if(s == \"0\") ans = update(x, 0, n);\n        else if(s == \"1\") ans = update(x, 1, n);\n        else ans = update(x, 2, n);\n        printf(\"%d\\n\", ans);\n    }\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-719/","title":"CF Round 719","text":"<p>\u8865\u9898\uff0c \u987a\u4fbf\u5199\u4e2a\u9898\u89e3\u3002</p>"},{"location":"archived/codefroces/Codeforces-Round-719/#a-do-not-be-distracted","title":"A. Do Not Be Distracted!","text":"<p>\u5206\u6790\uff1a \u7565\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;string&gt;\nusing namespace std;\nstring s;\nint main()\n{\n    int t; cin &gt;&gt; t;\n    while(t--)\n    {\n        int n; cin &gt;&gt; n &gt;&gt; s;\n        bool vis[26];\n        for(int i = 0; i &lt; 26; i++) vis[i] = 0;\n        vis[s[0]-'A'] = 1;\n        bool f = 1;\n        for(int i = 1; i &lt; n; i++)\n        {\n            if(s[i] != s[i-1]) \n            {\n                if(vis[s[i]-'A'] == 1) \n                {\n                    f = 0;\n                    break;\n                }\n                vis[s[i]-'A']  = 1;\n            }\n        }\n        if(f) cout &lt;&lt; \"YES\\n\";\n        else cout &lt;&lt; \"NO\\n\";\n    }\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-719/#b-ordinary-numbers","title":"B. Ordinary Numbers","text":"<p>\u5206\u6790\uff1a \u7565\u3002 <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\nint main()\n{\n    int t; cin &gt;&gt; t;\n    while(t--)\n    {\n        int n; cin &gt;&gt; n;\n        int ans = 0;\n        int x = n;\n        int i = 0;\n        int a[20];\n        while(n)\n        {\n            a[i] = n%10;\n            n/=10;\n            i++;\n        }\n\n        ans += (i-1)*9 + a[i-1] - 1;\n        int y = a[i-1];\n        for(int j = 1; j &lt; i; j++) { y*=10; y+=a[i-1]; }\n\n        if(x&gt;=y) ans++;\n\n        cout &lt;&lt; ans &lt;&lt; endl;\n    }\n    // system(\"pause\");\n}\n</code></pre></p>"},{"location":"archived/codefroces/Codeforces-Round-719/#c-not-adjacent-matrix","title":"C. Not Adjacent Matrix","text":"<p>\u5206\u6790\uff1a \u6784\u9020\u3002 \u7279\u5224n=2\u65f6\u4e0d\u5b58\u5728\u7b54\u6848\u3002 \u6784\u9020\u65b9\u6cd5\uff1a\u77e9\u9635\u4e0a\u534a\u90e8\u5206\u653e\u5947\u6570\uff0c\u4e0b\u534a\u90e8\u5206\u653e\u5076\u6570\u3002 \u6b63\u786e\u6027\uff1a\u591a\u6253\u51e0\u4e2a\u8868\u8d8a\u770b\u8d8a\u5bf9\uff08\u9003</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\nint a[12000];\nvoid print(int n)\n{\n    for(int i = 0; i &lt; n; i++)\n    {\n        for(int j = 0; j &lt; n; j++)\n        {\n            cout &lt;&lt; a[i*n + j] &lt;&lt; \" \";\n        }\n        cout &lt;&lt; endl;\n    }\n}\n\nint main()\n{\n    int t; cin &gt;&gt; t;\n    while(t--)\n    {\n        int n; cin &gt;&gt; n;\n        if(n == 2) { cout &lt;&lt; -1 &lt;&lt; endl; continue; }\n        int cnt = 0;\n        for(int i = 1; i &lt;= n*n; i+=2) a[cnt++] = i;\n        for(int i = 2; i &lt;= n*n; i+=2) a[cnt++] = i;\n        print(n);\n    }\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-719/#d-same-differences","title":"D. Same Differences","text":"<p>\u5206\u6790\uff1a \u6211\u4eec\u6709\\(a_j\u2212a_i=j\u2212i\\) \u5bf9\u8868\u8fbe\u5f0f\u53d8\u5f62\u540e\u6211\u4eec\u5f97\u51fa  \\(a_j-j=a_i-i\\) \u7528\u6876\u8bb0\u5f55\u4e0b\u5143\u7d20\u548c\u4e0b\u6807\u7684\u5dee\u503c\u5373\u53ef.</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\nconst int N = 4e5+100;\nint b[N];\nint main()\n{\n    int t; cin &gt;&gt; t;\n    while(t--)\n    {\n        int n; cin &gt;&gt; n;\n        long long ans = 0;\n        for(int i = 0; i &lt;= n*2; i++) b[i] = 0;\n        for(int i = 0; i &lt; n; i++) \n        {\n            int tmp; cin &gt;&gt; tmp;\n            ans += b[tmp-i+n];\n            b[tmp-i+n]++;\n        }\n        cout &lt;&lt; ans &lt;&lt; endl;\n    }\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-719/#e-arranging-the-sheep","title":"E. Arranging The Sheep","text":"<p>\u5206\u6790: \u5de6DP\u4e00\u6b21, \u53f3DP\u4e00\u6b21, \u5408\u5e76\u7b54\u6848. \u548c\u8fd9\u9898\u633a\u50cf\u7684, \u611f\u5174\u8da3\u7684\u53ef\u4ee5\u628a\u90a3\u9898\u4e5f\u505a\u4e86.</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;string&gt;\nusing namespace std;\nconst int N = 1e6+10;\ntypedef long long LL;\nLL fl[N], fr[N];\nstring s;\n\nint main()\n{\n    int t; cin &gt;&gt; t;\n    while(t--)\n    {\n        int n; cin &gt;&gt; n &gt;&gt; s;\n        int sum = 0;\n        if(s[0] == '*') sum = 1;\n        fl[0] = 0;\n        for(int i = 1; i &lt; n; i++) \n            if(s[i] == '*')\n            {\n                sum++;\n                fl[i] = fl[i-1];\n            }\n            else fl[i] = fl[i-1] + sum;\n\n        if(s[n-1] == '*') sum = 1;\n        else sum = 0;\n        fr[n-1] = 0;\n        for(int i = n-2; i &gt;= 0; i--)\n            if(s[i] == '*')\n            {\n                sum++;\n                fr[i] = fr[i+1];\n            }\n            else fr[i] = fr[i+1] + sum;\n\n        LL ans = min(fl[n-1], fr[0]);\n        for(int i = 1; i &lt; n-1; i++)\n        {\n           LL x;\n           if(s[i] == '*') \n           {\n               x = fl[i-1] + fr[i+1];\n           }\n           else\n           {\n               x = min(fl[i]+fr[i+1], fr[i]+fl[i-1]);\n           }\n           if(x &lt; ans) \n           {\n               ans = x;\n           }\n        }\n\n        cout &lt;&lt; ans &lt;&lt; endl;\n    }\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-719/#f1-guess-the-k-th-zero-easy-version","title":"F1. Guess the K-th Zero (Easy version)","text":"<p>\u5206\u6790: \u5df2\u77e5\\(n&lt;2^{18}\\), \u6700\u591a\u53ef\u4ee5\u95ee20\u6b21. \u76f4\u63a5\u4e8c\u5206\u554a.</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;string&gt;\nusing namespace std;\nint query(int l, int r)\n{\n    printf(\"? %d %d\\n\",l,r);\n    fflush(stdout);\n    int rev; cin &gt;&gt; rev;\n    return rev;\n}\nint main()\n{\n    int n, t; cin &gt;&gt; n &gt;&gt; t;\n    int k ; cin &gt;&gt; k;\n    int l = 1, r = n;\n\n    while(l &lt; r)\n    {\n        int mid = l+r&gt;&gt;1;\n        int x = query(1, mid);\n        x = mid - x;\n        if(k &gt; x) l = mid+1;\n        else if(k &lt; x) r = mid-1;\n        else if(k == x) r = mid;\n    }\n\n    printf(\"! %d\\n\",l);\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-719/#f2-guess-the-k-th-zero-hard-version","title":"F2. Guess the K-th Zero (Hard version)","text":"<p>\u5206\u6790: \u548c\u7b80\u5355\u7248\u672c\u4e00\u6837\u4e8c\u5206. \u4f46\u662f\u76f8\u540c\u67e5\u8be2\u53ea\u67e5\u4e00\u904d, \u67e5\u5b8c\u540e\u8bb0\u5fc6\u5316. \u5982\u4f55\u4fdd\u8bc1\u4e0d\u8fc7\u7ed9\u5b9a\u67e5\u8be2\u6b21\u6570? \u6211\u4eec\u8003\u8651\\(n&lt;2e5&lt;2^{18}, \\space t&lt;6e4\\), \u53ef\u4ee5\u628a\u4e8c\u5206\u770b\u4f5c\u4e00\u68f5\u6df1\u5ea6\u4e3a18\u7684\u4e8c\u53c9\u51b3\u7b56\u6811. \u6211\u4eec\u6ce8\u610f\u5230\u53ea\u8981\u628a\u4e8c\u5206\u51b3\u7b56\u6811\u7684\u4e0a14\u5c42,\u5168\u90e8\u8bb0\u5fc6\u5316, \u9700\u8981\\(2^{14}=16384\\)\u6b21\u67e5\u8be2. \u9664\u6b64\u4e4b\u5916, \u6bcf\u4e2a\u8981\u6c42\u7684k, \u53ea\u9700\u8981\u518d\u5f80\u4e0b4\u5c42\u5373\u53ef\u786e\u5b9a, k\u6700\u5927\u4e3a10, \u4e5f\u5c31\u662f\u8bf4\u8fd8\u9700\u8981\\(10000 * 4 = 40000\\)\u6b21\u67e5\u8be2. \u603b\u5171\\(40000 + 16384 = 56384 &lt;60000\\), \u8fd9\u6837\u4e00\u6765\u5373\u53ef\u4fdd\u8bc1\u7ea6\u675f.</p> <p>\u6bcf\u6b21\u67e5\u8be2\u8fc7\u540e\u6570\u7ec4\u90fd\u4f1a\u53d8, \u4e4b\u524d\u8bb0\u5fc6\u5316\u7684\u67e5\u8be2\u597d\u50cf\u7528\u4e0d\u4e86\u4e86, \u8fd9\u53ef\u5982\u4f55\u662f\u597d? \u6211\u4eec\u8003\u8651\u5bf9\u6bcf\u6b21\u8bb0\u5f55\u4e0b\u7684\u67e5\u8be2\u505a\u53d8\u6362\u5904\u7406, \u5373\u5904\u7406\u6210\u6700\u521d\u7684\u6570\u7ec4\u7684\u5bf9\u5e94\u533a\u95f4\u67e5\u8be2\u7684\u7ed3\u679c. \u6362\u53e5\u8bdd\u8bf4, \u6211\u4eec\u7684\u67e5\u8be2\u8981\u51cf\u53bb\u76ee\u524d\u4e3a\u6b62\u5728\u67e5\u8be2\u533a\u95f4\u63d2\u5165\u76841. \u901a\u8fc7\u6811\u72b6\u6570\u7ec4\u53ef\u4ee5\u7ef4\u62a4\u76ee\u524d\u4e3a\u6b62\u5728\u67e5\u8be2\u533a\u95f4\u63d2\u5165\u76841. \u6bcf\u6b21\u6211\u4eec\u8981\u7528\u8fd9\u4e9b\u67e5\u8be2\u7684\u65f6\u5019, \u5c31\u8981\u52a0\u4e0a\u76ee\u524d\u4e3a\u6b62\u5728\u67e5\u8be2\u533a\u95f4\u63d2\u5165\u76841.</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;string&gt;\n#include &lt;map&gt;\nusing namespace std;\nint n, t; \nint sum[300100];\nint c[300100];\nvoid add(int x)\n{\n    for(int i = x; i &lt; n; i+=i&amp;-i)\n        c[i]++;\n}\n\nint pre(int x)\n{\n    int rev = 0;\n    for(int i = x; i &gt; 0; i-=i&amp;-i)\n        rev += c[i];\n    return rev;\n}\nint query(int l, int r)\n{\n    printf(\"? %d %d\\n\",l,r);\n    fflush(stdout);\n    int rev; cin &gt;&gt; rev;\n    return rev;\n}\nint main()\n{\n    cin &gt;&gt; n &gt;&gt; t;\n    for(int i = 1; i &lt;= n; i++) sum[i] = -1;\n    while(t--)\n    {\n        int k ; cin &gt;&gt; k;\n        int l = 1, r = n;\n        while(l &lt; r)\n        {\n            int mid = l+r&gt;&gt;1;\n            int x;\n            if(sum[mid]&gt;=0) x= sum[mid] + pre(mid);\n            else { x = query(1, mid); sum[mid] = x - pre(mid); }\n            x = mid - x;\n            if(k &gt; x) l = mid+1;\n            else if(k &lt; x) r = mid-1;\n            else if(k == x) r = mid;\n        }\n\n        add(l);\n        printf(\"! %d\\n\",l);\n    }\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-719/#g-to-go-or-not-to-go","title":"G. To Go Or Not To Go?","text":"<p>\u5206\u6790: \u8003\u8651\u5230\u6700\u4f18\u89e3\u4e0b,\u4f20\u9001\u95e8\u81f3\u591a\u53ea\u4f1a\u7528\u52302\u4e2a. \u663e\u7136, \u5982\u679c\u7528\u52302\u4e2a\u4ee5\u4e0a\u7684\u4f20\u9001\u95e8, \u6211\u4eec\u53ea\u9700\u8981\u9009\u53d6\u5176\u4e2d\u7b2c\u4e00\u4e2a\u4f7f\u7528\u7684\u4f20\u9001\u95e8\u548c\u6700\u540e\u4e00\u4e2a\u4f7f\u7528\u7684\u4f20\u9001\u95e8\u5c31\u53ef\u4ee5\u7ec4\u6210\u4e00\u4e2a\u66f4\u4f18\u89e3. \u5f53\u7136, \u6700\u4f18\u89e3\u4e5f\u6709\u53ef\u80fd\u4e0d\u7528\u4f20\u9001\u95e8.</p> <p>\u90a3\u4e48\u53ea\u9700\u8981dp\u51fa\u4e24\u4e2a\u6570\u7ec4, \u4e00\u4e2a\u4ee3\u8868\u4ece\u8d77\u70b9\u5230\u8be5\u70b9\u7684\u6700\u5c0f\u8ddd\u79bb, \u4e00\u4e2a\u8868\u793a\u4ece\u8be5\u5e97\u7684\u7ec8\u70b9\u7684\u6700\u5c0f\u8ddd\u79bb. \u7136\u540e\u8f6c\u79fb\u51fa\u7b54\u6848\u5373\u53ef. (\u662f\u4e0d\u662f\u548cE\u9898\u6709\u70b9\u50cf)</p> <p>note: dp\u7684\u65f6\u5019\u8981\u7528bfs\u5e8f.</p> <p><pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;queue&gt;\n#include &lt;string.h&gt;\nusing namespace std;\ntypedef long long LL;\nconst LL INF = 0x3f3f3f3f3f3f3f3f;\nint n, m;\nLL a[2021][2021], w, dp[2021][2021], dp_2[2021][2021];\nstruct node{\n    int x, y;\n};\nLL h1 = INF, h2 = INF;\nqueue&lt;node&gt; q;\nvoid work()\n{\n    q.push({1,1});\n    if(a[1][1]&gt;0) h1 = min(h1, a[1][1]);\n    while(q.size())\n    {\n        node u = q.front();\n        q.pop();\n\n        if(u.x&gt;1 &amp;&amp; dp[u.x-1][u.y] == INF &amp;&amp; a[u.x-1][u.y] &gt;= 0)\n        {\n            dp[u.x-1][u.y] = dp[u.x][u.y] + w;\n            if(a[u.x-1][u.y]&gt;0) h1 = min(h1, dp[u.x-1][u.y]+a[u.x-1][u.y]);\n            q.push({u.x-1, u.y});\n        }\n        if(u.y&gt;1 &amp;&amp; dp[u.x][u.y-1] == INF &amp;&amp; a[u.x][u.y-1] &gt;= 0)\n        {\n            dp[u.x][u.y-1] = dp[u.x][u.y] + w;\n            if(a[u.x][u.y-1]&gt;0) h1 = min(h1, dp[u.x][u.y-1]+a[u.x][u.y-1]);\n            q.push({u.x, u.y-1});\n        }\n        if(u.x&lt;n &amp;&amp; dp[u.x+1][u.y] == INF &amp;&amp; a[u.x+1][u.y] &gt;= 0)\n        {\n            dp[u.x+1][u.y] = dp[u.x][u.y] + w;\n            q.push({u.x+1, u.y});\n            if(a[u.x+1][u.y]&gt;0) h1 = min(h1, dp[u.x+1][u.y] + a[u.x+1][u.y]);\n        }\n        if(u.y&lt;m &amp;&amp; dp[u.x][u.y+1] == INF &amp;&amp; a[u.x][u.y+1] &gt;= 0)\n        {\n            dp[u.x][u.y+1] = dp[u.x][u.y] + w;\n            q.push({u.x, u.y+1});\n            if(a[u.x][u.y+1]) h1 = min(h1, dp[u.x][u.y+1] + a[u.x][u.y+1]);\n        }\n    }\n\n    q.push({n, m});\n    if(a[n][m] &gt; 0) h2 = min(h2, a[n][m]);\n    while(q.size())\n    {\n        node u = q.front();\n        q.pop();\n        if(u.x&gt;1 &amp;&amp; dp_2[u.x-1][u.y] == INF &amp;&amp; a[u.x-1][u.y] &gt;= 0)\n        {\n            dp_2[u.x-1][u.y] = dp_2[u.x][u.y] + w;\n            q.push({u.x-1, u.y});\n            if(a[u.x-1][u.y]&gt;0)  h2 = min(h2, dp_2[u.x-1][u.y]+a[u.x-1][u.y]);\n        }\n        if(u.y&gt;1 &amp;&amp; dp_2[u.x][u.y-1] == INF &amp;&amp; a[u.x][u.y-1] &gt;= 0)\n        {\n            dp_2[u.x][u.y-1] = dp_2[u.x][u.y] + w;\n            q.push({u.x, u.y-1});\n            if(a[u.x][u.y-1]&gt;0) h2 = min(h2, dp_2[u.x][u.y-1]+a[u.x][u.y-1]);\n        }\n        if(u.x&lt;n &amp;&amp; dp_2[u.x+1][u.y] == INF &amp;&amp; a[u.x+1][u.y] &gt;= 0)\n        {\n            dp_2[u.x+1][u.y] = dp_2[u.x][u.y] + w;\n            q.push({u.x+1, u.y});\n            if(a[u.x+1][u.y]&gt;0) h2 = min(h2, dp_2[u.x+1][u.y]+a[u.x+1][u.y]);\n        }\n        if(u.y&lt;m &amp;&amp; dp_2[u.x][u.y+1] == INF &amp;&amp; a[u.x][u.y+1] &gt;= 0)\n        {\n            dp_2[u.x][u.y+1] = dp_2[u.x][u.y] + w;\n            q.push({u.x, u.y+1});\n            if(a[u.x][u.y+1]) h2 = min(h2, dp_2[u.x][u.y+1]+a[u.x][u.y+1]);\n        }\n    }\n}\nint main()\n{\n    cin &gt;&gt; n &gt;&gt; m &gt;&gt; w;\n    memset(dp, 0x3f, sizeof dp);\n    memset(dp_2, 0x3f, sizeof dp_2);\n    dp[1][1] = 0;\n    dp_2[n][m] = 0;\n    for(int i = 1; i &lt;= n; i++)\n    for(int j = 1; j &lt;= m; j++)\n        scanf(\"%lld\",&amp;a[i][j]);\n    work();\n    LL ans = dp[n][m];\n    ans = min(ans, h1+h2);\n    if(ans != INF) cout &lt;&lt; ans &lt;&lt; endl;\n    else cout &lt;&lt; -1 &lt;&lt; endl;\n    // system(\"pause\");\n}\n</code></pre> \u603b\u7ed3: \u4f1a\u7b97\u590d\u6742\u5ea6\u5f88\u91cd\u8981. \u7ecf\u5e38\u5361\u4e00\u5361\u5c31\u8fc7\u53bb\u4e86(\u4e0d\u662f).</p>"},{"location":"archived/codefroces/Codeforces-Round-722/","title":"Codeforces Round #722 (Div. 2)\u9898\u89e3","text":""},{"location":"archived/codefroces/Codeforces-Round-722/#a-eshag-loves-big-arrays","title":"A. Eshag Loves Big Arrays","text":"<p>\u5206\u6790\uff1a\u6700\u5c0f\u7684\u5143\u7d20\u662f\u4e0d\u53ef\u80fd\u88ab\u6d88\u9664\u7684\uff0c\u5176\u4f59\u6bd4\u6700\u5c0f\u5143\u7d20\u4e25\u683c\u5927\u7684\u5143\u7d20\u90fd\u53ef\u4ee5\u548c\u6700\u5c0f\u5143\u7d20\u7ec4\u6210\u4e00\u5bf9\u7136\u540e\u88ab\u6d88\u9664\u3002\u56e0\u6b64\u6700\u540e\u53ea\u4f1a\u6709\u6700\u5c0f\u5143\u7d20\u7559\u4e0b\u6765\u3002</p> <pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\nusing namespace std;\nconst int N = 3e5+100;\nint a[N];\n\nint main()\n{\n    int t; cin &gt;&gt; t;\n    while(t--)\n    {\n        int n; cin &gt;&gt; n;\n        for(int i = 0; i &lt; n; i++)\n            cin &gt;&gt; a[i];\n        sort(a, a+n);\n        int cnt = 1;\n        for(int i = 1; i &lt; n; i++)\n        {\n            if(a[i]==a[i-1]) cnt++;\n            else break;\n        }\n        cout &lt;&lt; n-cnt &lt;&lt; endl;\n    }\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-722/#b-sifid-and-strange-subsequences","title":"B. Sifid and Strange Subsequences","text":"<p>\u5206\u6790: </p> <p>\u8d1f\u6570\u548c\u96f6\u90fd\u662f\u5fc5\u9009\u7684. \u95ee\u9898\u5728\u4e8e\u6b63\u6570\u600e\u4e48\u9009? </p> <p>\u8003\u8651\u9898\u76ee\u9650\u5236\u8981\u6c42\u7684\u662f\"\u4efb\u610f\u4e24\u4e2a\u5143\u7d20\u4e4b\u5dee\u7edd\u5bf9\u503c\u7684\u6700\u5c0f\u503c\" &lt; \\(MAX\\). </p> <p>\u6211\u4eec\u6ce8\u610f\u5230\"\u4efb\u610f\u4e24\u4e2a\u5143\u7d20\u4e4b\u5dee\u7edd\u5bf9\u503c\u7684\u6700\u5c0f\u503c\"\u53ea\u4f1a\u51fa\u73b0\u5728\u6392\u5e8f\u540e\u7684\u76f8\u90bb\u5143\u7d20\u4e4b\u95f4.</p> <p>\u4e8e\u662f\u6211\u4eec\u51b3\u5b9a\u6309\u5347\u5e8f\u6392\u5b8c\u5e8f\u540e, \u4ece\u524d\u5f80\u540e\u8d70, \u7ef4\u62a4\"\u76f8\u90bb\u4e24\u5143\u7d20\u7684\u5dee\u7684\u7edd\u5bf9\u503c\u7684\u6700\u5c0f\u503c\". \u5f53\u9047\u5230\u6b63\u6570\u7684\u65f6\u5019, \u5982\u679c\u6b63\u6570\u5c0f\u4e8e\u7b49\u4e8e\u8fd9\u4e2a\u503c, \u90a3\u4e48\u52a0\u5165, \u5426\u5219break.</p> <pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\nusing namespace std;\nconst int N = 3e5+100;\nint a[N];\n\nint main()\n{\n    int t; cin &gt;&gt; t;\n    while(t--)\n    {\n        int n; cin &gt;&gt; n;\n        for(int i = 0; i &lt; n; i++)\n            cin &gt;&gt; a[i];\n        sort(a, a+n);\n        int ans = 0, sub = 0x3f3f3f3f;\n        for(int i = 0; i &lt; n; i++)\n        {\n            if(a[i] &lt;= 0) ans++;\n            if( a[i] &lt;= 0 &amp;&amp; i &gt; 0 ) sub = min(sub, a[i]-a[i-1]);\n            if( a[i] &gt; 0 )\n            {\n                if(a[i] &lt;= sub) ans++;\n                break;\n            }\n        }\n        cout &lt;&lt; ans &lt;&lt; endl;\n    }\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-722/#c-parsas-humongous-tree","title":"C. Parsa's Humongous Tree","text":"<p>\u5206\u6790:</p> <p>\u4e00\u4e2a\u7ed3\u8bba\u662f\u6700\u4f18\u7ed3\u679c\u53ef\u4ee5\u901a\u8fc7 \u8282\u70b9\u4e0a\u7684\u503c\u53ea\u53d6\u6700\u5927\u503c\u6216\u8005\u6700\u5c0f\u503c \u6765\u8fbe\u5230.</p> <p>\u4e0d\u4f1a\u8bc1, \u4f46\u662f\u5927\u5bb6\u53ef\u4ee5\u8bd5\u7740\u628a\u53d6\u4e09\u4e2a\u8282\u70b9, \u7136\u540e\u628a\u533a\u95f4\u753b\u6210\u7ebf\u6bb5, \u628a==\u5404\u79cd\u53ef\u80fd==\u7684\u5f62\u5f0f\u90fd\u753b\u51fa\u6765, \u518d\u901a\u8fc7==\u51e0\u4f55\u5f62\u5f0f==\u6765\u8003\u5bdf\u6bd4\u8f83\u5bb9\u6613\u770b\u89c4\u5f8b. \u6bd4\u5982\u4e0b\u56fe:</p> <p></p> <p>\u53ef\u4ee5\u770b\u51fa\u8fd9\u79cd\u60c5\u51b5\u7684\u6700\u4f18\u89e3\u662f\\(C.r-A.l\\), \u53ef\u4ee5\u901a\u8fc7\u8282\u70b9\u53d6\u6781\u503c\u8fbe\u5230.</p> <p>\u5f97\u5230\u8fd9\u4e2a\u7ed3\u8bba\u540e\u5c31\u5f88\u7b80\u5355\u4e86, \u76f4\u63a5\u8bb0\u5fc6\u5316\u5927\u6cd5\u5e08\u5c31\u884c\u4e86.</p> <pre><code>#include &lt;algorithm&gt;\n#include &lt;vector&gt;\n#include &lt;cstdio&gt;\nusing namespace std;\ntypedef long long INT;\nconst int N = 2e5+100;\nvector&lt;int&gt; G[N];\nvoid add(int u, int v)\n{\n    G[u].push_back(v);\n    G[v].push_back(u);\n}\nINT w[N][2], dp[N][2]; //0-left, 1-right\nvoid init(int n) \n{\n    for(int i = 0; i &lt;= n; i++)\n    {\n        dp[i][0] = dp[i][1] = 0;\n        G[i].clear();\n    }\n}\nINT dfs(int i, int s, int fa = 0)\n{\n    if(i != 1 &amp;&amp; G[i].size() == 1) return 0;\n    if(dp[i][s]) return dp[i][s];\n    INT rev = 0;\n    for(int p: G[i])\n    {\n        if(fa == p) continue;\n        INT a, b;\n        a = dfs(p, s^1, i) + abs(w[i][s] - w[p][s^1]);\n        b = dfs(p, s, i) + abs(w[i][s] - w[p][s]);\n        rev += max(a, b);\n    }\n    return dp[i][s] = rev;\n}\nint main()\n{\n    int t; scanf(\"%d\",&amp;t);\n    while(t--)\n    {\n        int n; scanf(\"%d\",&amp;n);\n        init(n);\n        for(int i = 1; i &lt;= n; i++) scanf(\"%lld%lld\", &amp;w[i][0], &amp;w[i][1]);\n        for(int i = 1; i &lt; n; i++)\n        {\n            int u, v; scanf(\"%d%d\",&amp;u,&amp;v);\n            add(u, v);\n        }\n        INT ans = 0;\n        ans = max(dfs(1, 0), dfs(1, 1));\n        printf(\"%lld\\n\",ans);\n    }\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-722/#d-kavi-on-pairing-duty","title":"D. Kavi on Pairing Duty","text":"<p>\u5206\u6790: </p> <p>\u4e0d\u59a8\u8bbe\\(f_i\\)\u4e3a\\(n=i\\)\u662f\u7684\u53ef\u884c\u89e3\u7684\u6570\u91cf.</p> <p>\u663e\u7136\\(f_1=1\\)</p> <p>\u73b0\u5728\u518d\u6765\u8003\u8651\\(i&gt;1\\)\u7684\u60c5\u51b5</p> <p>\\(f_i\\)\u5e94\u8be5\u6709\u4ee5\u4e0b\u4e24\u5927\u7c7b\u7ec4\u6210\u90e8\u5206:</p> <ol> <li>\u7528\u4e4b\u524d\u7684\u7ec4\u5408\u65b9\u5f0f\u8f6c\u79fb\u6765\u7684\u90e8\u5206.</li> <li>\u4f7f\u5f97\u6bcf\u4e2a\u7ebf\u6bb5\u957f\u4e3a i\u7684\u56e0\u6570, \u8fd9\u6837\u662f\u7b26\u5408\u9898\u610f, \u5374\u53c8\u4e0d\u7b97\u5728\u7b2c\u4e00\u79cd\u60c5\u51b5\u4e2d\u7684.</li> </ol> <p>\u5177\u4f53\u60c5\u51b5\u5982\u4e0b\u56fe</p> <p></p> <p>\u6545\u6b64\u53ef\u4ee5\u5f97\u51fa\u9012\u63a8\u5f0f: \\(f_i = \\sum_{j=1}^{i-1}{f_j }+ \\pi(i),\\space\\space i&gt;1\\), \u5176\u4e2d\\(\\pi(i)\\)\u662f\\(i\\)\u7684\u56e0\u6570\u4e2a\u6570.</p> <p>\u8fd9\u65f6\u5019\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898, \u5982\u4f55\u6c42\\(\\pi(i), i\\in [1, n]\\)</p> <p>\u4e0d\u96be\u60f3\u5230\u5229\u7528\u7c7b\u4f3c\u57c3\u6c0f\u7b5b\u7684\u601d\u8def, \u679a\u4e3e\u56e0\u6570\u53bb\u6807\u8bb0\u5176\u500d\u6570. \u51fd\u6570\u4ee3\u7801\u5982\u4e0b:</p> <pre><code>INT pi[N];\nvoid init(int n)\n{\n    for(int i = 1; i &lt;= n; i++)\n    for(int j = 1; i*j &lt;= n; j++)\n    pi[i*j]++;\n}\n</code></pre> <p>\u6211\u4eec\u6709\\(O(n(1+\\frac{1}{2} + \\frac{1}{3} +  \\frac{1}{4} + ...+ \\frac{1}{n})) = O(n\\log n)\\)</p> <p>\u56e0\u6b64\u8be5\u51fd\u6570\u7684\u590d\u6742\u5ea6\u662f\\(O(n\\log n)\\)\u7684.</p> <p>\u6700\u540e\u662f\uff21\uff23\u4ee3\u7801\uff1a</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\ntypedef long long INT;\nconst int N = 1e6+100;\nINT f[N], pi[N];\nvoid init(int n)\n{\n    for(int i = 1; i &lt;= n; i++)\n    for(int j = 1; i*j &lt;= n; j++)\n    pi[i*j]++;\n}\nint main()\n{\n    int n; cin &gt;&gt; n;\n\n    init(n);\n\n    f[1] = 1;\n    INT sum = 1;\n    for(int i = 2; i &lt;= n; i++)\n    {\n        f[i] = sum + pi[i];\n        sum += f[i]; \n        sum %= 998244353ll;\n        f[i] %= 998244353ll;\n    }\n    cout &lt;&lt; f[n] &lt;&lt; endl;\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-723/","title":"A. Mean Inequality","text":"<p>\u5206\u6790\uff1a\u5f88\u7b80\u5355\u7684\u6784\u9020\u3002 \u4ee3\u7801\uff1a</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;vector&gt;\nusing namespace std;\nconst int N = 100;\nint a[N], b[N];\nint main()\n{\n    int t; cin &gt;&gt; t;\n    while(t--)\n    {\n        int n; cin &gt;&gt; n;\n        for(int i = 1; i &lt;= n&lt;&lt;1; i++) cin &gt;&gt; a[i];\n        sort(a+1,a+1+2*n);\n        for(int i = 1; i &lt;= 2*n; i++)\n        {\n            if(i&amp;1) b[i] = a[(i+1)&gt;&gt;1];\n            else b[i] = a[n+(i&gt;&gt;1)];\n        }\n        for(int i = 1; i &lt;= 2*n; i++) cout &lt;&lt; b[i] &lt;&lt; \" \";\n        cout &lt;&lt; endl;\n    }\n//     system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-723/#b-i-hate-1111","title":"B. I Hate 1111","text":"<p>\u5206\u6790\uff1a \u663e\u7136\u5927\u4e8e111\u7684\u5f62\u5982\\([1^*]\\)\u7684\u6570\u5b57\u90fd\u53ef\u4ee5\u88ab\\(11a+111b\\)\u6765\u8868\u793a, \u5176\u4e2da\u548cb\u662f\u5e38\u6570. \u6240\u4ee5\u6211\u4eec\u53ea\u8981\u5206\u6790\u7ed9\u5b9a\u7684\u6570\u5b57n\u53ef\u4e0d\u53ef\u4ee5\u88ab11\u548c111\u5206\u89e3\u5373\u53ef.  \u8003\u8651\\(111\\%11=1\\), \u4e0d\u96be\u53d1\u73b0\u4efb\u4f55\u53ef\u4ee5\u88ab11\u548c111\u5206\u89e3\u7684\u6570\u5b57, \u53ef\u4ee5\u88ab\u5206\u89e3\u6210\\(11a+111b\\), \u5176\u4e2d\\(b\\le10\\). \u90a3\u4e48\u679a\u4e3eb\u5373\u53ef. \u4ee3\u7801:</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;vector&gt;\nusing namespace std;\ntypedef long long INT;\n\nint main()\n{\n    int t; cin &gt;&gt; t;\n    while(t--)\n    {\n        INT n; cin &gt;&gt; n;\n        bool f = 0;\n        int x = n%11;\n        if((n -= x*111) &gt;= 0) \n            if(n%11 == 0) f = 1;\n        // printf(\"= %d*111 + %d*11\\n\",x,n/11);\n        if(f) cout &lt;&lt; \"YES\\n\";\n        else cout &lt;&lt; \"NO\\n\";\n    }\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-723/#c1-potions-easy-version","title":"C1. Potions (Easy Version)","text":"<p>\u5206\u6790: \u56e0\u4e3a\u662f\u7b80\u5355\u7248\u672c,\u6240\u4ee5\u4e0b\u9762\u7ed9\u51fa\\(O(n^2)\\)\u7684\u505a\u6cd5. \u53c2\u8003\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684DP\u65b9\u5f0f, \\(dp[i]\\)\u8868\u793a\u957f\u5ea6\u4e3a\\(i\\)\u7684\u5408\u6cd5\u5b50\u5e8f\u5217\u4e2d\u6700\u5927\u7684sum. \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b: \\(dp[i] = dp[i-1] + a[i]\\) ps: \u8bb0\u5f97\u5f00long long \u4ee3\u7801:</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;vector&gt;\nusing namespace std;\ntypedef long long INT;\nconst int N = 3000;\n\nINT a[N], f[N];\n\nint main()\n{\n    int n; cin &gt;&gt; n;\n    for(int i = 0; i &lt; n; i++) cin &gt;&gt; a[i];\n    int start = 0;\n    while(start &lt; n &amp;&amp; a[start]&lt;0) start++;\n    if(start == n) \n    {\n        cout &lt;&lt; 0 &lt;&lt; endl;\n        // system(\"pause\");\n        return 0;\n    }\n    f[1] = a[start];\n    int maxh = 1;\n    for(int i = start+1; i &lt; n; i++)\n    {\n        for(int j = maxh; j &gt;= 0; j--)\n        {\n            if(f[j] + a[i] &gt;= 0)\n            {\n                f[j+1] = max(f[j+1], f[j]+a[i]);\n                if(j == maxh)\n                {\n                    maxh++;\n                }\n            }\n        }\n    }\n    cout &lt;&lt; maxh &lt;&lt; endl;\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-723/#c2-potions-hard-version","title":"C2. Potions (Hard Version)","text":"<p>\u5206\u6790: \u4e0b\u9762\u4ecb\u7ecd\\(O(n \\log n)\\)\u7684\u505a\u6cd5. \u7b97\u6cd5 tag: \u53cd\u6094\u8d2a\u5fc3. \u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u53cd\u6094\u5806, \u8fd9\u5c06\u662f\u4e00\u4e2a\u5c0f\u6839\u5806(\u4f18\u5148\u961f\u5217). \u6bcf\u5f53\u6211\u4eec\u628a\u4e00\u4e2a\u8d1f\u6570\u52a0\u5165\u6211\u4eec\u7684\u5b50\u5e8f\u5217\u65f6, \u6211\u4eec\u5c31\u628a\u8d1f\u6570\u538b\u5165\u5806\u4e2d. \u539f\u56e0\u662f, \u6211\u4eec\u5c06\u8d1f\u6570\u52a0\u5165\u5b50\u5e8f\u5217(\u5f53\u524d\u6700\u4f18\u89e3)\u7684\u65f6\u5019\u662f\u6700\u4f18, \u4f46\u662f\u5728\u672a\u6765\u6211\u4eec\u53ef\u80fd\u53ef\u4ee5\u9047\u5230\u66f4\u597d\u7684\u8d1f\u6570(\u672c\u8d28\u4e0a\u5c31\u662f\u6570\u503c\u6bd4\u5f53\u524d\u8fd9\u4e2a\u8d1f\u6570\u5927), \u56e0\u6b64\u6211\u4eec\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a\u53cd\u6094\u673a\u5236. \u5f53\u6211\u4eec\u7684\u5b50\u5e8f\u5217\u65e0\u6cd5\u52a0\u5165\u5f53\u524d\u7684\u8d1f\u6570\u7684\u65f6\u5019, \u4e00\u822c\u6765\u8bf4\u662f\u56e0\u4e3a\u5b50\u5e8f\u5217\u7684sum+\u5f53\u524d\u7684\u8d1f\u6570&lt;0. \u5982\u679c\u6b64\u65f6\u5806\u9876\u5143\u7d20\u5c0f\u4e8e\u5f53\u524d\u8d1f\u6570, \u90a3\u4e48\u9009\u62e9\u5f53\u524d\u8d1f\u6570\u800c\u4e0d\u9009\u62e9\u5806\u9876\u8d1f\u6570\u662f\u4e00\u5b9a\u66f4\u4f18\u7684, \u90a3\u4e48\u5c31\u5f39\u51fa\u5806\u9876\u5143\u7d20, \u538b\u5165\u5f53\u524d\u8d1f\u6570. \u5177\u4f53\u64cd\u4f5c\u770b\u4ee3\u7801:</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;queue&gt;\nusing namespace std;\npriority_queue&lt;long long, vector&lt;long long&gt;, greater&lt;long long&gt;&gt; h;\nlong long sum;\nint cnt;\nint main()\n{\n    int n; scanf(\"%d\",&amp;n);\n    for(int i = 0; i &lt; n; i++) \n    {\n        long long tmp; scanf(\"%lld\",&amp;tmp);\n        if(tmp &gt;= 0) sum += tmp, cnt++;\n        else if(tmp + sum &gt;= 0) \n        {\n            sum += tmp;\n            cnt++;\n            h.push(tmp);\n        }\n        else if(h.size() &amp;&amp; h.top() &lt; tmp)\n        {\n            sum = sum - h.top() + tmp;\n            h.pop();\n            h.push(tmp);\n        }\n    }\n    printf(\"%d\\n\",cnt);\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-724/","title":"A. Omkar and Bad Story","text":"<p>\u5206\u6790\uff1a \u663e\u7136\u6709\u8d1f\u6570\u5b58\u5728\u4e0d\u53ef\u80fd\u6ee1\u8db3\u9898\u610f\uff0c\u6545\u8f93\u51faNO\u3002 \u5982\u679c\u53ea\u6709\u975e\u8d1f\u6570\u7684\u8bdd\uff0c\u90a3\u4e48\u76f4\u63a5\u8f93\u51fa\u4ee50\u5f00\u5934\uff0c100\u7ed3\u5c3e\u7684\uff0c\u516c\u5dee\u4e3a1\u7684\u7b49\u5dee\u6570\u5217\u5373\u53ef\u3002\u56e0\u4e3a\u503c\u57df\u662f[-100,100]\uff0c\u800c\u6570\u7ec4\u5927\u5c0f\u7684\u9650\u5236\u662f\u4e09\u767e\u4ee5\u5185\u3002 \u4ee3\u7801\uff1a</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\nint a[110];\nint main()\n{\n    int t; cin &gt;&gt; t;\n    while(t--)\n    {\n        int n; cin &gt;&gt; n;\n        bool f = 1;\n        int minx = 1000, maxx = -1000;\n        for(int i = 0; i &lt; n; i++)\n        {\n            cin &gt;&gt; a[i];\n            if(a[i] &lt; 0) f = 0;\n            minx = min(a[i], minx);\n            maxx = max(a[i], maxx);\n        }\n        if(f)\n        {\n            cout &lt;&lt; \"YES\\n\";\n            cout &lt;&lt; maxx+1 &lt;&lt; endl;\n            for(int i = 0; i &lt;= maxx; i++) cout &lt;&lt; i &lt;&lt; \" \"; cout &lt;&lt; endl;\n        }\n        else cout &lt;&lt; \"NO\\n\";\n    }\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-724/#b-prinzessin-der-verurteilung","title":"B. Prinzessin der Verurteilung","text":"<p>\u5206\u6790\uff1a \u8003\u8651\u957f\u5ea6\u4e3a1\u7684\u4e0d\u540c\u5b57\u7b26\u4e32\u670926\u4e2a\uff0c\u957f\u5ea6\u4e3a2\u7684\u6709\\(26^2\\)\u4e2a,\u957f\u5ea6\u4e3a3\u7684\u6709\\(26^3\\)\u4e2a. \u7531\u4e8e\u9898\u76ee\u4e2d\u6240\u7ed9\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0a\u9650\u4e3a1000, \u6545\u6700\u591a\u5305\u542b1000\u4e2a\u957f\u5ea6\u4e3a1\u7684\u5b50\u4e32, 999\u4e2a\u957f\u5ea6\u4e3a2\u7684\u5b50\u4e32, 998\u4e2a\u957f\u5ea6\u4e3a3\u7684\u5b50\u4e32. \u663e\u7136\u8be5\u5b57\u7b26\u4e32\u7684mex\u6700\u5927\u957f\u5ea6\u4e3a3. \u66b4\u529b\u5373\u53ef. \u4ee3\u7801:</p> <pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\n#include &lt;map&gt;\nusing namespace std;\nstring s;\nbool ok(string t)\n{\n    int n = s.size(), m = t.size();\n    for(int i = 0, j = 0; i &lt; n; i++)\n    {\n        for(j = 0; j &lt; m &amp;&amp; i + j &lt; n; j++)\n        if(s[i+j] != t[j]) break;\n        if(j == m) return 0;\n    }\n    return 1;\n}\nint main()\n{\n    int t; cin &gt;&gt; t;\n    while(t--)\n    {\n        int n;\n        cin &gt;&gt; n;\n        cin &gt;&gt; s;\n        string ans = \"\";\n        for(int i = 0; i &lt; 26; i++)\n        {\n            string t = \"\"; t += (char)('a'+i);\n            if(ok(t)) \n            {\n                ans = t;\n                break;\n            }\n        }\n        if(ans == \"\")\n        for(int i = 0; i &lt; 26; i++)\n        {\n            string t = \"\"; t += (char)('a'+i);\n            for(int j = 0; j &lt; 26; j++)\n            {\n                string t1 = t + (char)('a'+j);\n                if(ok(t1)) \n                {\n                    ans = t1;\n                    break;\n                }\n            }\n            if(ans != \"\") break;\n        }\n\n        if(ans == \"\")\n        for(int i = 0; i &lt; 26; i++)\n        {\n            string t = \"\"; t += (char)('a'+i);\n            for(int j = 0; j &lt; 26; j++)\n            {\n                string t1 = t + (char)('a'+j);\n                for(int k = 0; k &lt; 26; k++)\n                {\n                    string t2 = t1 + (char)('a'+k);\n                    if(ok(t2)) \n                    {\n                        ans = t2;\n                        break;\n                    }\n                }\n                if(ans != \"\") break;\n            }\n            if(ans != \"\") break;\n        }\n\n        cout &lt;&lt; ans &lt;&lt; endl;\n    }\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-724/#c-diluc-and-kaeya","title":"C. Diluc and Kaeya","text":"<p>\u5206\u6790: \u5f88\u660e\u663e\u7684DP.  \u8bb0\\(dp[i][j]\\)\u8868\u793a\u6bd4\u4f8b\u4e3a\u6700\u8fd1\u4e00\u6b21\u6bd4\u4f8b\u4e3a\\(i:j\\)\u65f6\u7684\u5207\u5272\u65b9\u6848. \u4e0d\u80fd\u8bc1\u660e\u4ece\u4e00\u6b21\\(a:b\\)\u5230\u4e0b\u4e00\u6b21\\(a:b\\), \u65b0\u589e\u7684\u4e00\u6bb5\u4e5f\u662f\\(a:b\\) \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a \\(dp[i][j] = dp[i/gcd(i,j)][j/gcd(i,j)] + 1\\) \u8fd8\u6709\u4e00\u4e2a\u95ee\u9898, \u663e\u7136\u72b6\u6001\u6570\u592a\u591a\u4e86, \u5c06\u4f1a\u7528\u5230\\(O(\\varphi(n)^2)\\)\u7684\u7a7a\u95f4, \u5176\u4e2dn\u6700\u5927\u53ef\u4ee5\u53bb\\(5e5\\), \u4e8c\u7ef4\u6570\u7ec4\u5f00\u4e0d\u4e0b. map! \u663e\u7136\u5b9e\u9645\u4e0a\u4e0d\u4f1a\u7528\u5230\u90a3\u4e48\u591a\u72b6\u6001, \u53ea\u9700\u8981\u8bb0\u5f55\u7528\u5230\u7684\u72b6\u6001\u5c31\u597d\u4e86. \u4ee3\u7801:</p> <pre><code>#include &lt;algorithm&gt;\n#include &lt;map&gt;\n#include &lt;iostream&gt;\n#include &lt;string&gt;\nusing namespace std;\nstruct node{\n    int a, b;\n    bool operator &lt;(const node&amp; o) const{\n        if(a != o.a) return a &lt; o.a;\n        else return b &lt; o.b;\n    }\n};\nmap&lt;node, int&gt; mp;\nstring s;\nint ans[501000];\nint gcd(int a, int b)\n{\n    return b == 0? a: gcd(b, a%b);\n}\nint main()\n{\n    int t; cin &gt;&gt; t;\n    while(t--)\n    {\n        int n; cin &gt;&gt; n;\n        cin &gt;&gt; s;\n        node x;\n        x.a = x.b = 0;\n        for(int i = 0; i &lt; n; i++)\n        {\n            if(s[i] == 'D') x.a++;\n            else x.b++;\n\n            node y = x;\n            int z = gcd(y.a, y.b);\n            // printf(\"%d %d gcd = %d\\n\",x.a,x.b,z);\n            y.a /= z;\n            y.b /= z;\n            if(mp.find(y) == mp.end()) mp[y] = 1;\n            else mp[y]++;\n            ans[i] = mp[y];\n        }\n        for(int i = 0; i &lt; n; i++)\n            printf(\"%d \",ans[i]);\n        printf(\"\\n\");\n        mp.clear();\n    }\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-724/#d-omkar-and-medians","title":"D. Omkar and Medians","text":"<p>\u5206\u6790: \u8003\u8651\u6bcf\u6b21\u589e\u52a0\u4e00\u6b21\u524d\u7f00, \u76f8\u5f53\u4e8e\u5f80\u6570\u7ec4\u52a0\u5165\u4e24\u4e2a\u6570\u5b57, \u4e5f\u5c31\u662f\u8bf4\u4e2d\u4f4d\u6570\u6700\u591a\u504f\u79fb1\u4e2a\u4f4d\u7f6e. \u8bb0\u4e0a\u4e00\u6b21\u7684\u4e2d\u4f4d\u6570\u4e3a\\(mid\\), \u5728\u6240\u6709\u51fa\u73b0\u8fc7\u7684\u4e2d\u4f4d\u6570\u4e2d\u7b2c\u4e00\u4e2a\u6bd4mid\u4e25\u683c\u5927\u4e8e\u7684\u4e3a\\(r\\), \u7b2c\u4e00\u4e2a\u6bd4\u4e25\u683c\u5c0f\u4e8e\u7684\u4e3a\\(l\\). \u5982\u679c\\(r\\)\u4e0d\u5b58\u5728\u5c31\u8bb0\u4e3a\u65e0\u7a77\u5927, \u5982\u679c\\(l\\)\u4e0d\u5b58\u5728\u5c31\u8bb0\u4e3a\u8d1f\u65e0\u7a77\u5927. \u90a3\u4e48\u65b0\u52a0\u5165\u4e00\u4e2a\u4e2d\u4f4d\u6570, \u8bb0\u4e3ax.  x\u5fc5\u987b\u5b58\u5728\u4e8e\\([l, r]\\)\u533a\u95f4\u624d\u7b97\u5408\u6cd5, \u5426\u5219\u5c31\u662f\u4e0d\u5b58\u5728. \u90a3\u4e48\u5982\u4f55\u53bb\u627e\u7b2c\u4e00\u4e2a\u6bd4mid\u5927\u7684\u6570,\u7b2c\u4e00\u4e2a\u6bd4mid\u5c0f\u7684\u6570\u5462? \u6211\u4f1aSplay! map! \u4f17\u6240\u5468\u77e5, map\u5e95\u5c42\u662f\u7ea2\u9ed1\u6811, \u76f4\u63a5\u7528\u8fed\u4ee3\u5668\u5c31\u597d\u4e86. \u4ee3\u7801:</p> <p><pre><code>#include &lt;algorithm&gt;\n#include &lt;map&gt;\n#include &lt;iostream&gt;\nusing namespace std;\nmap&lt;int, int&gt; mp;\nint a[301000];\nint main()\n{\n    int t; cin &gt;&gt; t;\n    while(t--)\n    {\n        int n; cin &gt;&gt; n;\n        for(int i = 0; i &lt; n; i++) cin &gt;&gt; a[i];\n\n        int l = -1e9-1, r = 1e9+1;\n        // cout &lt;&lt; l &lt;&lt; \" \" &lt;&lt; r &lt;&lt; endl;\n        int mid = a[0];\n        mp[mid] = 1;\n        bool f = 1;\n        for(int i = 1; i &lt; n; i++)\n        {\n\n            map&lt;int,int&gt;::const_iterator it = mp.find(mid);\n            if(it == mp.begin()) l = -1e9-1;\n            else l = (--it)-&gt;first;\n\n            it = mp.find(mid);\n            if((++it) == mp.end()) r = 1e9+1;\n            else r = it-&gt;first;\n\n            mid = a[i];\n            mp[mid] = 1;\n            if(l &lt;= a[i] &amp;&amp; a[i] &lt;= r);\n            else \n            {\n\n                // cout &lt;&lt; i &lt;&lt; \" is not good\\n\" &lt;&lt; l &lt;&lt; \" \" &lt;&lt; r &lt;&lt; endl;\n                f = 0; \n                break;\n            }\n        }\n\n        if(f) cout &lt;&lt; \"YES\\n\";\n        else cout &lt;&lt; \"NO\\n\";\n\n        mp.clear();\n    }\n    // system(\"pause\");\n}\n</code></pre> \u5c0f\u603b\u7ed3: map\u662f\u4e2a\u597d\u4e1c\u897f.</p>"},{"location":"archived/codefroces/Codeforces-Round-725/","title":"A. Stone Game","text":"<p>\u5206\u6790\uff1a \u8003\u8651\u4ece\u4e24\u8fb9\u5220\uff0c\u8fd8\u662f\u4ece\u4e00\u904d\u5220\uff0c\u9009\u6bd4\u8f83\u5c0f\u7684\u90a3\u4e2a <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\nint a[200];\nint main(){\n    int t; cin &gt;&gt; t;\n    a[101] = 101;\n    while(t--)\n    {\n        int n; cin &gt;&gt; n;\n        int minx = 101, maxx = 0;\n        for(int i = 1; i &lt;= n; i++) \n        {\n            cin &gt;&gt; a[i];\n            if(a[minx] &gt; a[i]) minx = i;\n            if(a[maxx] &lt; a[i]) maxx = i;\n        }\n\n        if(minx &gt; maxx) swap(minx, maxx);\n        int ans = min(maxx, n-minx+1);\n        ans = min(minx + n-maxx+1, ans);\n        cout &lt;&lt; ans  &lt;&lt; endl;\n    }\n    // system(\"pause\");\n}\n</code></pre></p>"},{"location":"archived/codefroces/Codeforces-Round-725/#b-friends-and-candies","title":"B. Friends and Candies","text":"<p>\u5206\u6790\uff1a \u628a\u5927\u4e8e\u5747\u503c\u7684\u4eba\u6311\u51fa\u6765\u5373\u53ef <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\nconst int N = 200100;\ntypedef long long LL;\nint a[N];\n\nint main()\n{\n    int t; cin &gt;&gt; t;\n    while(t--)\n    {\n        int n; cin &gt;&gt; n;\n        LL sum = 0;\n        for(int i = 1; i &lt;= n; i++)\n        {\n            cin &gt;&gt; a[i];\n            sum += a[i];\n        }\n\n        if(sum%n != 0) \n        {\n            cout &lt;&lt; \"-1\" &lt;&lt; endl;\n            continue;\n        }\n\n        int avg = sum/n;\n        int cnt = 0;\n        for(int i = 1; i &lt;= n; i++)\n        {\n            if(a[i] &gt; avg) cnt++;\n        }\n        cout &lt;&lt; cnt &lt;&lt; endl;\n    }\n    // system(\"pause\");\n}\n</code></pre></p>"},{"location":"archived/codefroces/Codeforces-Round-725/#c-number-of-pairs","title":"C. Number of Pairs","text":"<p>\u5206\u6790: \u5148\u6392\u5e8f,\u6392\u5e8f\u540e\u679a\u4e3e\u6709\u5e8f\u5bf9\u7684\u7b2c\u4e00\u4e2a\u6570\u5b57, \u7136\u540e\u4e8c\u5206\u51fa\u7b2c\u4e8c\u4e2a\u6570\u5b57\u7684\u5408\u6cd5\u533a\u95f4. \u590d\u6742\u5ea6\\(O(n\\log n)\\) <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;vector&gt;\n#include &lt;cmath&gt;\nusing namespace std;\nconst int N= 200100;\nint a[N];\nint n, l, r; \n\nint work(int x)\n{\n    int tl = l-a[x], tr = r-a[x];\n    auto p = lower_bound(a+x+1, a+1+n, tl);\n    int ll = p-a;\n    p = upper_bound(a+x+1, a+n+1, tr);\n    int rr = p-a-1;\n    int rev = 0;\n    if(ll &lt; rr) \n    {\n        if(rr == n+1) rr = n;\n        rev = rr-ll+1;\n    }\n    else if(ll == rr &amp;&amp; ll &lt;= n) rev = 1;\n    return rev&gt;=0?rev:0;\n}\n\nint main()\n{\n    int t; cin &gt;&gt; t;\n    while(t--)\n    {\n        cin &gt;&gt; n &gt;&gt; l &gt;&gt; r;\n        for(int i = 1; i &lt;= n; i++) scanf(\"%d\",&amp;a[i]);\n        sort(a+1,a+1+n);\n        long long ans = 0;\n        for(int i = 1; i &lt; n; i++)\n        {\n            ans += work(i);\n        }\n        cout &lt;&lt; ans &lt;&lt; endl;\n    }\n    // system(\"pause\");\n}\n</code></pre></p>"},{"location":"archived/codefroces/Codeforces-Round-725/#d-another-problem-about-dividing-numbers","title":"D. Another Problem About Dividing Numbers","text":"<p>\u5206\u6790: \u9996\u5148\u7528\u6b27\u62c9\u7b5b\u7b5b\u51fasqrt(1e9)\u4ee5\u4e0b\u7684\u8d28\u6570, \u7528\u6765\u505a\u8d28\u56e0\u6570\u5206\u89e3. \u7136\u540e\u5bf9a, b\u8d28\u56e0\u6570\u5206\u89e3. \u5904\u7406\u4e00\u4e0b\u7ec6\u8282\u5373\u53ef. <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;vector&gt;\n#include &lt;cmath&gt;\nusing namespace std;\nconst int MAXN = 100010;\nbool isnp[MAXN];\nvector&lt;int&gt; primes; // \u8d28\u6570\u8868\nvoid init(int n)\n{\n    for (int i = 2; i &lt;= n; i++)\n    {\n        if (!isnp[i])\n            primes.push_back(i);\n        for (int p : primes)\n        {\n            if (p * i &gt; n)\n                break;\n            isnp[p * i] = 1;\n            if (i % p == 0)\n                break;\n        }\n    }\n}\n\nvector&lt;int&gt; func(int a)\n{\n    vector&lt;int&gt; rev;\n    int lim = ceil(sqrt(a));\n    for(int i = 0; primes[i] &lt;= lim; i++)\n    {\n        while(a%primes[i] == 0) \n        {\n            a/=primes[i];\n            rev.push_back(primes[i]);\n        }\n    }\n    if(a != 1) rev.push_back(a);\n    return rev;\n}\n\nint main()\n{\n    int t; cin &gt;&gt; t;\n    init(100000);\n    while(t--)\n    {\n        int a, b, k; scanf(\"%d %d %d\",&amp;a,&amp;b,&amp;k);\n        vector&lt;int&gt; fa = func(a);\n        vector&lt;int&gt; fb = func(b);\n        int s1 = fa.size(), s2 = fb.size();\n        int cnt = 0;\n        for(int i = 0, j = 0; i &lt; s1 &amp;&amp; j &lt; s2; )\n        {\n            if(fa[i] == fb[j]) { cnt++, i++, j++; continue; }\n            if(fa[i] &lt; fb[j]) i++;\n            if(fa[i] &gt; fb[j]) j++;\n        }\n        bool f = 0;\n        int l = (s1&gt;cnt) + (s2&gt;cnt);\n        int r = s1+s2;\n        if(l &lt;= k &amp;&amp; k &lt;= r) f=1;\n        if(l == 0 &amp;&amp; k==1) f=0;\n        if(f) printf(\"YES\\n\");\n        else printf(\"NO\\n\");\n\n    }\n    // system(\"pause\");\n}\n</code></pre></p>"},{"location":"archived/codefroces/Codeforces-Round-725/#e-funny-substrings","title":"E. Funny Substrings","text":"<p>\u5206\u6790:  \u4e00\u5f00\u59cb\u4ee5\u4e3a\u662f\u66b4\u529b\u6a21\u62df, \u4e00\u770bn\u6700\u592750, \u90a3\u663e\u7136\u5c31\u4e0d\u884c\u4e86. \u56e0\u4e3a\u8fd9\u6837\u5b50\u6700\u574f\u60c5\u51b5\u4e0b, \u7b54\u6848\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4f1a\u8fbe\u5230\\(5*2^{49}\\). \u76ee\u524d\u8003\u8651\u662f\u7ef4\u62a4\u4e00\u4e2a\u53d8\u91cf\u7684\u6709\u6548\u524d\u7f00\u548c\u540e\u7f00, \u8fd9\u6837\u4e0d\u4f1a\u8d85\u8fc74\u4e2a, \u5728\u7ef4\u62a4\u4e00\u4e2a\u5185\u90e8\u7684haha\u7684\u4e2a\u6570. \u665a\u70b9\u518d\u6765\u5199.</p>"},{"location":"archived/codefroces/Codeforces-Round-725/#f-interesting-function","title":"F. Interesting Function","text":"<p>\u5982\u679c\u8fd9\u7b97\u6570\u4f4dDP, \u90a3\u4e48\u7b97\u662f\u6211\u89c1\u8fc7\u6700\u7b80\u5355\u7684\u6570\u4f4dDP\u4e86. \u5206\u6790: \u8bb0\\(dp[i]\\)\u8868\u793a\u4ece0\u5230\\(10^{i-1}\\)\u7684\u6570\u4f4d\u53d8\u5316\u6b21\u6570. \u7136\u540e\u66b4\u529b\u5408\u5e76\u5373\u53ef. <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;vector&gt;\n#include &lt;cmath&gt;\nusing namespace std;\ntypedef long long LL;\nLL dp[20];\n\nvoid init(int n)\n{\n    dp[1] = 1;\n    for(int i = 2; i &lt;= n; i++) dp[i] = dp[i-1]*10+1;\n}\n\nLL work(LL x)\n{\n    int a[20] = {0}, cnt = 0;\n    while(x)\n    {\n        a[cnt++] = x%10;\n        x/=10;\n    }\n    LL rev = 0;\n    for(int i = cnt-1; i &gt;= 0; i--)\n        rev += dp[i+1]*a[i];\n    return rev;\n}\n\nint main()\n{\n    int t; cin &gt;&gt; t;\n    init(14);\n    while(t--)\n    {\n        LL a, b; cin &gt;&gt; a&gt;&gt;b;\n        cout &lt;&lt; work(b) - work(a) &lt;&lt; endl;\n    }\n    // system(\"pause\");\n}\n</code></pre></p>"},{"location":"archived/codefroces/Codeforces-Round-725/#g-gift-set","title":"G. Gift Set","text":"<p>\u5206\u6790\uff1a \u8003\u8651\u4e8c\u5206\u53ef\u5206\u7684\u96c6\u5408\u7684\u6570\u91cf\u3002 \u5982\u4f55O(1)\u6c42\u7ed9\u5b9a\u7684\u67d0\u4e2a\u96c6\u5408\u53ef\u884c\u4e0e\u5426\uff1f \u4e0d\u59a8\u8bbe\\(x&lt;y, a&lt;b\\) \u8bb0n\u4e3a\u8981\u9a8c\u8bc1\u7684\u96c6\u5408\u6570\u91cf\uff0cs\u4e3a\u7b2c\u4e00\u79cd\u96c6\u5408\u6570\u91cf\uff0ct\u4e3a\u7b2c\u4e8c\u79cd\u96c6\u5408\u6570\u91cf\u3002 \u4e8e\u662f\u6211\u4eec\u6709 $$ \\left{ \\begin{aligned} as +bt \\le x \\ bs + at \\le y \\ s + t = n \\end{aligned} \\right. $$ \u53d8\u5f62\u53ef\u4ee5\u5f97\u5230 $$ \\left{ \\begin{aligned} s \\ge \\frac{x-nb}{a-b} \\ s \\le \\frac{y-na}{b-a}  \\end{aligned} \\right. $$ \u4e5f\u5c31\u662f\u8bf4\uff0c\u7ed9\u5b9an\uff0c\u6211\u4eec\u53ef\u4ee5\u6c42\u51fas\u7684\u53d6\u503c\u533a\u95f4\u3002\u518d\u5224\u5b9a\u4e0b\u8be5\u533a\u95f4\u662f\u5426\u5408\u6cd5\u5373\u53ef\u3002 note: s\u53d6\u503c\u533a\u95f4\u7684\u5de6\u754c\u5e94\u8be5\u662f\u5411\u4e0b\u53d6\u6574\uff0c\u4f46\u662f\\(x-nb\\)\u548c\\(a-b\\)\u90fd\u662f\u8d1f\u6570\uff0c\u800cc++\u9ed8\u8ba4\u662f\u8d8b\u96f6\u53d6\u6574\uff0c\u6240\u4ee5\u8981\u7279\u5224\u3002 <pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\n#include &lt;cmath&gt;\nusing namespace std;\ntypedef long long LL;\nLL x, y, a, b;\nbool check(LL n)\n{\n    LL l = ((x-n*b)/(a-b));\n    if((x-n*b)&lt;0 &amp;&amp; (-(x-n*b))%(b-a)!=0) l++;\n    LL r = (y-n*a)/(b-a);\n    // printf(\"%lld [%lld, %lld]\\n\",n,l,r);\n    return l&lt;=r &amp;&amp; r&gt;=0 &amp;&amp; l&lt;=n;\n}\nint main()\n{\n    int t; cin &gt;&gt; t;\n    while(t--)\n    {\n        cin &gt;&gt; x &gt;&gt; y &gt;&gt; a &gt;&gt; b;\n        if(x&gt;y) swap(x, y);\n        if(a&gt;b) swap(a, b);\n        if(a == b)\n        {\n            cout &lt;&lt; (x/a) &lt;&lt; endl;\n            continue;\n        }\n        LL l=0 , r=x;\n        while(l&lt;r)\n        {\n            if(l == r-1) \n            {\n                if(check(r)) l = r;\n                break;\n            }\n            LL mid = l+r&gt;&gt;1;\n            if(check(mid)) l=mid;\n            else r=mid-1;\n        }\n        cout &lt;&lt; l &lt;&lt; endl;\n    }\n    // system(\"pause\");\n}\n</code></pre></p>"},{"location":"archived/codefroces/Codeforces-Round-725/#_1","title":"\u4e09\u5206\u505a\u6cd5\u6b63\u786e\u6027","text":"<p>\u4e8c\u5206\u7684\u6b63\u786e\u6027\u662f\u663e\u7136\u7684\uff0c\u4f46\u662f\u4e09\u5206\u7684\u6b63\u786e\u6027\u5e76\u4e0d\u90a3\u4e48\u663e\u7136\u3002 \u4e3a\u4e86\u8bc1\u660e\u4e09\u5206\u7684\u6b63\u786e\u6027\uff0c\u6211\u4eec\u9700\u8981\u8bc1\u660e\u96c6\u5408\u603b\u6570n\u662f\u7b2c\u4e00\u96c6\u5408\u6570s\u7684\u51fd\u6570\uff0c\u4e14\u8be5\u51fd\u6570\u81f3\u591a\u6709\u4e00\u4e2a\u5cf0\u3002 \u4e0b\u9762\u7ed9\u51fa\u8bc1\u660e\uff1a </p> <p>\u5c0f\u603b\u7ed3: C\u548cD\u5206\u522bwa\u4e86\u4e24\u53d1, \u5f88\u4e8f, C\u662f\u56e0\u4e3a\u628a\u4e00\u4e2aupper_bound\u5199\u6210\u4e86lower_bound, D\u662f\u6ca1\u8003\u8651\u6e05\u695a\u7ec6\u8282. \u5c31\u5f88\u4e8f. \u6628\u665a\u5199\u5b8cF\u7684\u65f6\u5019\u8fd8\u670920\u591a\u5206\u949f, \u7136\u800c\u7535\u8111\u6ca1\u7535, \u4e0b\u6b21\u5e94\u8be5\u65e9\u70b9\u5f00\u7701\u70b9\u6a21\u5f0f. \u8bf4\u8d77\u6765\u4e4b\u524d\u8865\u76845.5\u7684\u90a3\u573adiv.3\u4e5f\u662f\u8fd9\u51e0\u4e2a\u4eba\u51fa\u7684\u9898, \u662f\u771f\u7684\u559c\u6b22\u4e8c\u5206...</p>"},{"location":"archived/codefroces/Codeforces-Round-726/","title":"A. Arithmetic Array","text":"<p>\u5206\u6790\uff1a \u5f53sum\u5927\u4e8en\u65f6\uff0c\u90a3\u4e48\u6dfb\u52a0\uff08sum-n\uff09\u4e2a0\uff0c\u5f53sum\u5c0f\u4e8en\u65f6\uff0c\u53ea\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u6570\u5373\u53ef\u3002 <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main()\n{\n    int t; cin &gt;&gt; t;\n    while(t--)\n    {\n        int n; cin &gt;&gt; n;\n        int sum = 0;\n        for(int i = 0; i &lt; n; i++)\n        {\n            int tmp; cin &gt;&gt; tmp;\n            sum += tmp;\n        }\n        cout &lt;&lt; ((sum&gt;=n)?sum-n:1) &lt;&lt; endl;\n    }\n    // system(\"pause\");\n}\n</code></pre></p>"},{"location":"archived/codefroces/Codeforces-Round-726/#b-bad-boy","title":"B. Bad Boy","text":"<p>\u5206\u6790\uff1a \u8d70\u79bb\u8d77\u59cb\u70b9\u8f83\u8fdc\u7684\u4e24\u89d2\u5373\u53ef\u3002 <pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\nusing namespace std;\n\nint main()\n{\n    int t; cin &gt;&gt; t;\n    while(t--)\n    {\n        int n, m, x, y; cin &gt;&gt; n &gt;&gt; m &gt;&gt; x &gt;&gt; y;\n        if(x &gt; n/2) x = 1; else x = n;\n        if(y &gt; m/2) y = 1; else y = m;\n        int i, j;\n        i = x==1?n:1;\n        j = y==1?m:1;\n        printf(\"%d %d %d %d\\n\",x,y,i,j);\n    }\n    // system(\"pause\");\n}\n</code></pre></p>"},{"location":"archived/codefroces/Codeforces-Round-726/#c-challenging-cliffs","title":"C. Challenging Cliffs","text":"<p>\u5206\u6790\uff1a \u6392\u5e8f\u540e\uff0c\u4e0d\u96be\u53d1\u73b0\u6b64\u65f6\u7684\u6392\u5217\u662f\u6743\u91cd\u6700\u5927\u7684\u3002 \u4f46\u662f\u56e0\u4e3a\u8fd8\u9700\u8981\u6ee1\u8db3\u7ea6\u675f\uff0c\u5f00\u5934\u548c\u672b\u5c3e\u7684\u5dee\u7684\u7edd\u5bf9\u503c\u5e94\u8be5\u6700\u5c0f\u3002 \u90a3\u4e48\u6211\u4eec\u627e\u5230\u90a3\u5bf9\u6570\uff0c\u4ece\u4e2d\u95f4\u65ad\u5f00\uff0c\u5373\u53ef\u3002 <pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\nusing namespace std;\nint a[300100];\nint b[300100];\nbool vis[300100];\nint abs(int x) { return x&lt;0?-x:x; }\nint main()\n{\n    int t; cin &gt;&gt; t;\n    while(t--)\n    {\n        int n; scanf(\"%d\",&amp;n);\n        for(int i = 0; i &lt; n; i++) \n        {\n            scanf(\"%d\",&amp;a[i]);\n            vis[i] = 0;\n        }\n        sort(a,a+n);\n        int l = 0, r = n-1;\n        int x = n-1;\n        for( int i = n-1; x&gt;=1&amp;&amp;i&gt;=1; i--)\n        {\n            if(a[x]-a[x-1] &gt;= a[i]-a[i-1]) x = i;\n        }\n        swap(a[x],a[x-1]);\n        // cout &lt;&lt; \"x = \" &lt;&lt; x &lt;&lt; endl;\n        int cnt = 0;\n        for(int i = x; i &lt; n; i++) b[cnt++] = a[i];\n        for(int i = 0; i &lt; x; i++) b[cnt++] = a[i];\n        for(int i = 0; i &lt; n; i++)\n        printf(\"%d \",b[i]); printf(\"\\n\");\n    }\n}\n</code></pre></p>"},{"location":"archived/codefroces/Codeforces-Round-726/#d-deleting-divisors","title":"D. Deleting Divisors","text":"<p>\u4e00\u9053\u535a\u5f08\u8bba\u3002 \u5206\u6790: \u9996\u5148\u8003\u86511\u548c\u5168\u4f53\u7d20\u6570\u662f\u5947\u5f02\u5c40\u52bf, \u67d0\u4e00\u65b9\u5f97\u5230\u5947\u5f02\u5c40\u52bf\u65f6\u4fbf\u5fc5\u8d25.</p> <p>\u7136\u540e\u8003\u8651\u64cd\u4f5c\u7684\u6027\u8d28: \u4e0d\u59a8\u8bbe \\(x = a*b\\space\\space\\space (a ,b&gt;1)\\) \u8003\u8651\\(x - a = a*(b-1)\\) \u4e5f\u5c31\u662f\u8bf4\u4e00\u4e2a\u6570x\u51cf\u53bb\u81ea\u5df1\u7684\u7ea6\u6570a, \u7ed3\u679cy\u8fd8\u662fa\u7684\u500d\u6570; \u540c\u65f6\u8bbeb\u4e3ax\u7684\u7ea6\u6570, \u4e14\\(b=x/a\\), \u90a3\u4e48b-1\u5c06\u662f\u7ed3\u679cy\u7684\u7ea6\u6570. \u7531\u6b64\u6211\u4eec\u53ef\u5f97, \u4e00\u4e2a\u5947\u5408\u6570\u7ecf\u8fc7\u4e00\u6b21\u64cd\u4f5c\u540e, \u5fc5\u7136\u4f1a\u5f97\u5230\u4e00\u4e2a\u5076\u6570;  \u4e00\u4e2a(\u542b\u5947\u7d20\u56e0\u5b50\u7684)\u5076\u5408\u6570\u7ecf\u8fc7\u4e00\u6b21\u64cd\u4f5c, \u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5947\u5408\u6570\u3002 \u8fd9\u662f\u56e0\u4e3a\u4e00\u4e2a\u5076\u5408\u6570\u4e3a\u4e86\u64cd\u4f5c\u540e\u5f97\u5230\u4e00\u4e2a\u5947\u6570\u7ed3\u679c, \u90a3\u4e48\u52bf\u5fc5\u628a\u51cf\u53bb\u6240\u6709\u5076\u7d20\u56e0\u5b50\u7684\u4e58\u79ef\u3002 \u4f46\u662f\u56e0\u4e3a\u6ca1\u6709\u5947\u7d20\u56e0\u5b50\u6240\u4ee5\u6240\u6709\u5076\u7d20\u56e0\u5b50\u7684\u4e58\u79ef\u4e3a\u8be5\u6570\u672c\u8eab\uff0c\u4e0d\u7b26\u5408\u9898\u610f\u7ea6\u675f\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u521d\u6b65\u7684\u6a21\u578b\uff1a  \u90a3\u4e48\u518d\u6765\u8003\u86512\u7684\u5e42\u6b21 \u4e0d\u59a8\u8bbe\\(t = 2^k \\space (k=1,2,3,...)\\) 1. \u5f53k=1\u65f6:     \u5148\u624b\u5fc5\u8d25 2. \u5f53k=2\u65f6:     \u5148\u624b\u5fc5\u80dc 3. \u5f53k&gt;2\u65f6,\u6709\u4e24\u79cd\u64cd\u4f5c:     1). \\(t = t - 2^{i} \\space (i=1,2,...,k-2)\\). \u6b64\u65f6t\u4e3a\u53d8\u4e3a\u4e00\u4e2a\u4e0d\u662f2\u7684\u5e42\u6b21\u7684\u5076\u6570, \u56e0\u6b64\u8fd9\u79cd\u64cd\u4f5c\u5bf9\u65b9\u5fc5\u80dc.     2). \\(t=t-2^{k-1}\\). \u6b64\u65f6t\u53d8\u4e3a2\u7684\u5e42, \u4e14\u5e42\u6b21-1. </p> <p>\u4e0d\u96be\u770b\u51fa\u5f53k\u4e3a\u5947\u6570\u7684\u65f6\u5019, \u5148\u624b\u5fc5\u8d25, k\u4e3a\u5076\u6570\u7684\u65f6\u5019\u540e\u624b\u5fc5\u8d25. \u4e8e\u662f\u7ed9\u51fa\u4fee\u6b63\u540e\u7684\u6a21\u578b  \u4ee3\u7801: <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main()\n{\n    int t; scanf(\"%d\",&amp;t);\n    while(t--)\n    {\n        int n; scanf(\"%d\",&amp;n);\n        int cnt = 0;\n        while(n%2==0) { n/=2; cnt++; }\n        if(cnt == 0) printf(\"Bob\\n\"); //odd\n        else if(cnt == 1 &amp;&amp; n == 1) printf(\"Bob\\n\"); //exactly be 2\n        else if(n &gt; 1) printf(\"Alice\\n\"); //even but not a pow of 2\n        else if((cnt &amp; 1) == 0) printf(\"Alice\\n\"); \n        else printf(\"Bob\\n\");\n    }\n}\n</code></pre></p>"},{"location":"archived/codefroces/Codeforces-Round-726/#e1-erase-and-extend-easy-version","title":"E1. Erase and Extend (Easy Version)","text":"<p>\u5206\u6790: \u66b4\u529b\u679a\u4e3e\u6240\u6709\u524d\u7f00\u5f62\u6210\u7684\u4e32, \u53d6\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5373\u53ef. \u65f6\u95f4\u590d\u6742\u5ea6\\(O(n^2)\\) <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;string.h&gt;\nusing namespace std;\nchar s[100001], t[100001], ans[100001];\nint n, k; \nbool cmp()\n{\n    for(int i = 0; i &lt; k; i++)\n    {\n        if(ans[i] &gt; t[i]) return 1;\n        else if(ans[i] == t[i]) continue;\n        else return 0;\n    }\n    return 0;\n}\nint main()\n{\n    cin &gt;&gt; n &gt;&gt; k;\n    scanf(\"%s\",s);\n    for(int i = 1; i &lt;= n; i++)\n    {\n        int cnt = k/i + (k%i!=0);\n        for(int j = 0; j &lt; cnt; j++)\n        {\n            for(int l = 0; l &lt; i; l++)\n                t[i*j+l] = s[l];\n        }\n        t[k] = '\\0';\n        if(i&gt;1) \n        {\n            if(cmp()) strcpy(ans, t);\n        }\n        else strcpy(ans, t);\n        // printf(\"this t is %s\\n\",t);\n    }\n    printf(\"%s\\n\",ans);\n    // system(\"pause\");\n}\n</code></pre></p>"},{"location":"archived/codefroces/Codeforces-Round-727/","title":"A. Contest Start","text":"<p>\u5206\u6790\uff1a \u9996\u5148\u4e0d\u96be\u60f3\u5230\u5012\u6570\u7b2c\\(\\lfloor t/x\\rfloor\\)\u4e2a\u4eba\u5f00\u59cb, \u6bcf\u5f80\u540e\u6570\u4e00\u4e2a\u4eba, \u4e0d\u6ee1\u503c\u4f1a\u51cf\u4e00, \u6545\u53ef\u4ee5\u5f97\u51fa: \\(answer = \\frac{n*(n-1)}{2} \\space \\space ,n\\le\\lfloor t/x\\rfloor\\) \u8003\u8651\u4ece\u5012\u6570\u7b2c\\(\\lfloor t/x\\rfloor\\)\u4e2a\u4eba\u5f80\u524d\u6570, \u6bcf\u4e2a\u4eba\u90fd\u80fd\u79ef\u6512\u76f8\u540c\u7684\u6012\u503c, \u8fd9\u4e2a\u503c\u4e3a\\(\\lfloor t/x\\rfloor\\). \u8bb0k = \\(\\lfloor t/x\\rfloor\\). \u4e8e\u662f\u53ef\u4ee5\u5f97\u5230: \\(answer = (n-k)*k+\\frac{k*(k-1)}{2}\\space \\space, n&gt;\\lfloor t/x\\rfloor\\) \u4ee3\u7801: <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nint main()\n{\n    int K; cin &gt;&gt; K;\n    while(K--)\n    {\n        long long n, x, t; cin &gt;&gt; n &gt;&gt; x &gt;&gt; t;\n        long long ans = 0;\n        if(n &gt; t/x) \n        {\n            ans = (n-t/x) *(t/x);\n            t /= x;\n            ans += t*(t-1)/2;    \n        }    \n        else ans = n*(n-1)/2;\n        cout &lt;&lt; ans &lt;&lt; endl;\n    }\n    // system(\"pause\");\n}\n</code></pre></p>"},{"location":"archived/codefroces/Codeforces-Round-727/#b-love-song","title":"B. Love Song","text":"<p>\u5206\u6790: \u524d\u7f00\u548c\u505a\u5230O(n)\u9884\u5904\u7406, O(1)\u67e5\u8be2\u5373\u53ef \u4ee3\u7801: <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nconst int N = 200001;\nchar s[N];\nlong long a[N];\nint main()\n{\n    int n, q; cin &gt;&gt; n &gt;&gt; q;\n    scanf(\"%s\",s);\n    for(int i = 0; i &lt; n; i++)\n    {\n        a[i+1] = a[i] + (s[i]-'a'+1);\n    }\n    for(int i = 0; i &lt; q; i++)\n    {\n        int l, r; scanf(\"%d %d\",&amp;l,&amp;r);\n        printf(\"%lld\\n\",a[r]-a[l-1]);\n    }\n    // system(\"pause\");\n}\n</code></pre></p>"},{"location":"archived/codefroces/Codeforces-Round-727/#c-stable-groups","title":"C. Stable Groups","text":"<p>\u5206\u6790: \u8d2a\u5fc3. \u6bcf\u6b21\u9009\u53d6\u6700\u5c0f\u4ee3\u4ef7\u53ef\u4ee5\u5408\u5e76\u7684\u4e24\u6bb5\u6765\u5408\u5e76\u5373\u53ef.  \u6b63\u786e\u6027\u662f\u663e\u7136\u7684. \u53ef\u4ee5\u4f7f\u7528\u5806\u6765\u7ef4\u62a4. <pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\n#include &lt;queue&gt;\nusing namespace std;\ntypedef long long LL;\nLL a[300100];\npriority_queue&lt;LL, vector&lt;LL&gt;, greater&lt;LL&gt;&gt; q;\nint main()\n{\n    LL n, k, x; cin &gt;&gt; n &gt;&gt; k &gt;&gt; x;\n    for(int i = 0; i &lt; n; i++) scanf(\"%lld\",&amp;a[i]);\n    sort(a, a+n);\n    for(int i = 0; i &lt; n-1; i++)\n    {\n        if(a[i+1]-a[i] &gt; x) \n        {\n            LL tmp = a[i+1]-a[i];\n            q.push((tmp)/x + (tmp%x!=0) -1);\n        }\n    }\n    // cout &lt;&lt; q.size() &lt;&lt; endl;\n    while(q.size() &amp;&amp; k &gt;= q.top())\n    {\n        k -= q.top();\n        q.pop();\n    }\n    cout &lt;&lt; q.size()+1 &lt;&lt; endl;\n    // system(\"pause\");\n}\n</code></pre></p>"},{"location":"archived/codefroces/Codeforces-Round-727/#d-pricefixed","title":"D. PriceFixed","text":"<p>\u5206\u6790:  \u8fd8\u662f\u8d2a\u5fc3. \u4ee5\\({b_i}\\)\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\u975e\u964d\u5e8f\u6392\u5e8f. \u6392\u5e8f\u5b8c, \u663e\u7136\u9ad8\u4f4d\u7684\u5546\u54c1\u53ef\u4ee5\u6253\u6298 \u90a3\u4e48\u4f4e\u4f4d\u7684\u4e5f\u53ef\u4ee5\u6253\u6298\u3002 \u4e5f\u5c31\u662f\u9ad8\u4f4d\u6253\u6298\u7684\u6982\u7387\u4f4e\u4e9b\uff0c\u4f4e\u4f4d\u6253\u6298\u7684\u6982\u7387\u9ad8\u4e9b\u3002 \u90a3\u4e48\u5f53\u4e0d\u80fd\u6253\u6298\u7684\u65f6\u5019\u6211\u4eec\u5c31\u53bb\u4e70\u9ad8\u4f4d\u7684\uff0c\u53ef\u4ee5\u6253\u6298\u7684\u65f6\u5019\u4ece\u4f4e\u4f4d\u4e70\u8d77\u3002 \u8fd9\u4e2a\u8d2a\u5fc3\u7b56\u7565\u6240\u5f97\u51fa\u7684\u7ed3\u679c\u662f\u6240\u6709\u5546\u54c1\u90fd\u6070\u597d\\(a_i\\)\u7684\u6700\u597d\u4ef7\u683c, \u5982\u679c\u6700\u4f18\u7b56\u7565\u4e0d\u662f\u6240\u6709\u5546\u54c1\u90fd\u6070\u597d\u4e70\u7684\u60c5\u51b5, \u8fd9\u4e2a\u7b56\u7565\u662f\u4e0d\u4e00\u5b9a\u6700\u4f18\u7684. \u4f46\u4e0d\u7528\u62c5\u5fc3, \u56e0\u4e3a\u4e00\u5b9a\u5b58\u5728\u4e00\u79cd\u6700\u4f18\u7b56\u7565\u662f\u521a\u597d\u4e70\\(a_i\\)\u4e2a\u7684. \u539f\u56e0\u5f88\u7b80\u5355, \u5047\u8bbe\u5b58\u5728\u4e00\u4e2a\u6700\u4f18\u89e3\u4e0d\u662f\u521a\u597d\u4e70\\(a_i\\)\u4e2a, \u8003\u8651\u5230\u6253\u62981\u5757, \u539f\u4ef72\u5757, \u5982\u679c\u4e0d\u662f\u521a\u597d\u7684\u8bdd,  \u989d\u5916\u4e70\u7684\u5546\u54c1\u5e94\u8be5\u662f\u62ff\u6765\u51d1\u6570\u6253\u6298\u7684, \u5426\u5219\u4e0d\u53ef\u80fd\u4ef7\u683c\u6700\u4f18. \u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5982\u6b64\u6784\u9020: \u6240\u6709\u88ab\u989d\u5916\u5546\u54c1\u51d1\u6570\u6253\u6298\u7684\u5546\u54c1\u539f\u4ef7\u4e70, \u51d1\u6570\u5546\u54c1\u4e0d\u4e70, \u53ef\u5f97\u5230\u6700\u4f18\u89e3. \u4ee3\u7801: <pre><code>#include &lt;algorithm&gt;\n#include &lt;queue&gt;\n#include &lt;iostream&gt;\nusing namespace std;\ntypedef long long LL;\nstruct node{\n    LL a, b;\n    bool operator &lt; (const node&amp; o) const{\n        return b &lt; o.b;\n    }\n}p[200100];\nLL c[200100];\nint main()\n{\n    int n; cin &gt;&gt; n;\n    for(int i = 1; i &lt;= n; i++) scanf(\"%lld %lld\",&amp;p[i].a,&amp;p[i].b);\n    sort(p+1, p+1+n);\n    int r = n, l = 1;\n    LL sum = 0, cost = 0;\n    while(l &lt;= r)\n    {\n        // for(int i = 1; i &lt;= n; i++) cout &lt;&lt; c[i] &lt;&lt; \" \"; cout &lt;&lt; cost &lt;&lt; \":\" &lt;&lt; sum &lt;&lt; endl;\n        if(sum &gt;= p[l].b)\n        {\n            // printf(\"%lld %lld %lld\\n\",sum, p[l].a, c[l]);\n            cost += p[l].a - c[l];\n            sum += p[l].a - c[l];\n            c[l] = p[l].a;\n            l++;\n            continue;\n        }\n        else\n        {\n            LL sub = min(p[r].a-c[r], p[l].b-sum);\n            if(sub == 0) { r--; continue; }\n            c[r] += sub;\n            cost += 2*sub;\n            sum += sub;\n            if(p[r].a - c[r] == 0) r--; \n            continue;\n        }\n    }\n    // for(int i = 1; i &lt;= n; i++) cout &lt;&lt; c[i] &lt;&lt; \" \"; cout &lt;&lt; endl;\n    cout &lt;&lt; cost &lt;&lt; endl;\n    // system(\"pause\");\n}\n</code></pre></p>"},{"location":"archived/codefroces/Codeforces-Round-741/","title":"Codeforces Round #741 (Div. 2)","text":"<p>\u4f20\u9001\u95e8</p>"},{"location":"archived/codefroces/Codeforces-Round-741/#a-the-miracle-and-the-sleeper","title":"A.  The Miracle and the Sleeper","text":"<p>\u4e0d\u96be\u8bc1\u660e\u7b54\u6848\u7b49\u4e8e \\(r\\%(\\max(l, \\lfloor\\frac{r}{2}\\rfloor+1))\\)</p> <pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\nusing namespace std;\n\nvoid solve()\n{\n    int l, r; cin &gt;&gt; l &gt;&gt; r;\n    int x = max(l, r/2+1);\n    cout &lt;&lt; r%x &lt;&lt; endl;\n}\n\nint main()\n{\n    int T; cin &gt;&gt; T;\n    while(T--) solve();\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-741/#b-scenes-from-a-memory","title":"B. Scenes From a Memory","text":"<p>\u8003\u8651\u81f3\u5c11\u542b\u6709\u4e00\u4e2a \\(\\{1,4,6,8,9\\}\\) \u7684\u5143\u7d20\u7684\u5341\u8fdb\u5236\u8868\u8fbe\u5f0f\u7686\u7b26\u5408\u9898\u610f\u3002</p> <p>\u8003\u8651\u53ea\u542b\\(\\{2,3,5,7\\}\\)\u7684\u4e24\u4f4d\u6570\u662f\u5408\u6570\u65f6\u7b26\u5408\u9898\u610f\uff0c\u6362\u8a00\u4e4b\uff0c\u4e24\u4f4d\u6570\u4e2d\u53ea\u6709\\(\\{23,53,73\\}\\)\u4e0d\u7b26\u5408\u9898\u610f\u3002</p> <p>\u8003\u8651\u4e09\u4f4d\u6570\u5fc5\u7136\u7b26\u5408\u9898\u610f\uff0c\u56e0\u4e3a\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u4e09\u4f4d\u6570x\u4e0d\u7b26\u5408\u9898\u610f\uff0c\u5c06x\u8fdb\u884c\u62c6\u5206\u6210\u4e24\u4f4d\u6570\u5fc5\u7136\u5f97\u5230\\(\\{23,53,73\\}\\)\u4e2d\u7684\u6570\u5b57\uff0c\u4e14\u4e0d\u5b58\u5728\\(\\{1,4,6,8,9\\}\\)\uff0c\u4e0d\u59a8\u66b4\u529b\u5217\u51fa\uff0c\u53d1\u73b0\u65e0\u89e3\u3002</p> <p>\u7efc\u4e0a\uff0c\u5f53k\u5927\u4e8e\u7b49\u4e8e3\uff0c\u5fc5\u5b9a\u6709\u89e3\uff1b\u5f53k=1\u65f6\uff0c\u82e5\\(n\\in\\{1.4,6,8,9\\}\\)\u6709\u89e3\uff1b\u5f53k=2\u65f6\uff0c\u5f53\\(n\\in\\{23,53,73\\}\\)\u65e0\u89e3\u3002</p> <pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\nusing namespace std;\nchar s[100];\nint b[10];\nvoid solve()\n{\n    for(int i = 0; i &lt; 10; i++) b[i] = 0;\n    int k; scanf(\"%d %s\",&amp;k,&amp;s);\n    for(int i = 0; i &lt; k; i++)\n        if(s[i] == '1' || s[i] == '4' || s[i] == '6' || s[i] == '8' || s[i] == '9') \n        {\n            printf(\"1\\n%c\\n\",s[i]); \n            return;\n        }\n    for(int i = 0; i &lt; k; i++)\n    {\n        for(int j = 1; j &lt;= 9; j++) \n            if(b[j])\n            {\n                int x = j*10+s[i]-'0';\n                if(x != 23 &amp;&amp; x != 53 &amp;&amp; x != 37 &amp;&amp; x != 73) \n                {\n                    printf(\"2\\n%d\\n\",x);\n                    return;\n                }\n            } \n        b[s[i]-'0'] = 1;\n    }\n    printf(\"-1\\n\");\n}\n\nint main()\n{\n    int T; cin &gt;&gt; T;\n    while(T--) solve();\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-741/#c-rings","title":"C. Rings","text":"<p>\u8003\u8651\u4e24\u79cd\u60c5\u51b5\uff1a</p> <ol> <li> <p>\u5b57\u7b26\u4e32\u81f3\u5c11\u5305\u542b\u4e00\u4e2a0\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u4f9d\u7167\u8fd9\u4e2a0\u7684\u4f4d\u7f6e\u5411\u524d\u6784\u9020\uff082\u500d\uff09\uff0c\u6216\u5411\u540e\u6784\u9020\uff081\u500d\uff09</p> </li> <li> <p>\u5b57\u7b26\u4e32\u4e0d\u5305\u542b0\uff0c\u5168\u4e3a1\u3002\u8fd9\u4e2a\u65f6\u5019\u5f53\u4e14\u4ec5\u5f53\u957f\u5ea6n\u4e3a\u5076\u6570\u65f6\u6709\u89e3\uff08\u56e0\u4e3a\u5f53a\u548cb\u5168\u4e3a1\u4e32\u7684\u60c5\u51b5\u4e0b\uff0c\u5f53\u4e14\u4ec5\u5f53a\u7684\u957f\u5ea6\u53ef\u4ee5\u6574\u9664b\u7684\u957f\u5ea6\u7684\u65f6\u5019\uff0ca\u53ef\u4ee5\u6574\u9664b\uff0c\u5217\u4e2a\u9664\u6cd5\u7ad6\u5f0f\u5373\u53ef\u76f4\u89c2\u770b\u51fa\uff09</p> </li> </ol> <pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\nusing namespace std;\nchar s[20100];\nvoid solve()\n{\n    int n; scanf(\"%d %s\",&amp;n,s);\n    bool f = 0;\n    int cnt = 0;\n    for(int i = 0; i &lt; n; i++)\n    {\n        if(s[i] == '0') {f = 1; cnt = i+1; break;}\n    }\n    if(f)\n    {\n        if(cnt &lt;= n/2) printf(\"%d %d %d %d\\n\",cnt,n,cnt+1,n);\n        else printf(\"%d %d %d %d\\n\",1,cnt,1,cnt-1); \n    }\n    else\n    {\n        if(n % 2 == 0)\n        {\n            printf(\"%d %d %d %d\\n\",1,n,1,n/2);\n        }\n        else \n        {\n            printf(\"%d %d %d %d\\n\",1,n-1,1,n/2);\n        }\n    }\n}\n\nint main()\n{\n    int T; cin &gt;&gt; T;\n    while(T--)\n    {\n        solve();\n    }\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-741/#d1-two-hundred-twenty-one-easy-version","title":"D1. Two Hundred Twenty One (easy version)","text":"<p>\u8bb0a\u4e3a\u5143\u7d20\u6570\u7ec4\uff0c\u5982\u679c\u662f\u6b63\u7535\u8377\u5219\\(a[i]\\)\u4e3a+1\uff0c\u5982\u679c\u662f\u8d1f\u7535\u8377\u5219\u4e3a-1.</p> <p>\u8bb0b\u4e3a\u4e00\u4e2a\u6570\u7ec4\uff0c\u5176\u4e2d\\(b[i]\\)\u8868\u793a\u79fb\u9664\u5143\u7d20\\(a[i]\\)\u4ee5\u540e\u7684\u5269\u4f59\u4e0b\u6765\u7684\u6570\u7ec4\u7684Signed Sum\uff0c\u7279\u522b\u7684\uff0c\u4e0d\u5220\u9664\u4efb\u4f55\u5143\u7d20\u7684Signed Sum\u8bb0\u4e3a\\(b_0\\)</p> <p>\u8bb0\\(f(l,r)\\)\u8868\u793a\u6570\u7ec4a\u7684\u533a\u95f4\\([l,r]\\)\u7684Signed Sum</p> <p>\u8bb0a\u6570\u7ec4\u7684\u957f\u5ea6\u4e3a n\u3002</p> <p>\u8003\u8651\u5b58\u5728\u4ee5\u4e0b\u51e0\u4e2a\u6027\u8d28\uff1a</p> <p>\u6027\u8d281\uff1a</p> <pre><code>if a[i] == a[i+1]\nthen abs( b[i] -b[i+1] ) == 0\nelse abs( b[i] -b[i+1] ) == 2\n</code></pre> <p>\u8bc1\u660e\uff1a</p> <p>i. \u5982\u679c\\(a_i = a_{i+1}\\)\uff0c\u7531\u5b9a\u4e49\u6613\u5f97\\(b_i=b_{i+1}\\). </p> <p>ii. \u7531\u5b9a\u4e49\u6211\u4eec\u6709 $$ a[i] != a[i+1]\\ b[i] = f(1,i-1) \\pm a[i+1] \\mp f(i+2, n) \\ b[i+1] = f(1,i-1) \\mp a[i] \\mp f(i+2, n) $$  \u6240\u4ee5 \\(|b_i - b_{i-1}| = |\\pm a_{i+1} \\mp a_{i}| = 2 \\space,\\space a_i \\ne a_{i+1}\\) </p> <p>\u6027\u8d282\uff1a\\(n\\)\u548c\\(|b_0|\\)\u7684\u5947\u5076\u6027\u76f8\u540c\u3002\u53ef\u4ee5\u7531\u6570\u5b66\u5f52\u7eb3\u6cd5\u7b80\u5355\u8bc1\u660e\u3002\u8fd9\u610f\u5473\u7740\\(b[1...n]\\)\u7684\u6bcf\u4e2a\u5143\u7d20\u7684\u5947\u5076\u6027\u90fd\u76f8\u540c\u3002</p> <p>\u6027\u8d283\uff1a\u5982\u679c\\(n\\)\u662f\u5947\u6570\u4e14\\(n&gt;1\\)\uff0c\u5219 \\(b[1]\\)\u548c\\(b[n]\\)\u5f02\u53f7\u6216\u8005\u81f3\u5c11\u6709\u4e00\u4e2a\u4e3a0\u3002\u8bc1\u660e\u5982\u4e0b\uff1a-1 -1 1 -1 -1</p> <p>\u6211\u4eec\u6709 $$ b[1] = -b[0] + a[1] \\ b[n] = b[0] - a[n] $$ \u7531\u4e0a\u9762\u4e24\u4e2a\u5f0f\u5b50\u4e0d\u96be\u60f3\u5230\uff0c\u5f53\\(b[0]\\ge 2\\)\u65f6\uff0c\\(b[1],b[n]\\)\u5fc5\u7136\u5f02\u53f7\uff1b\u5f53\\(b[0]=1\\)\u65f6\uff0c\u4e0d\u96be\u53d1\u73b0\\(b[1],b[n]\\)\u5fc5\u7136\u5f02\u53f7\u6216\u5176\u4e2d\u4e00\u4e2a\u4e3a0.</p> <p>\u7531\u4ee5\u4e0a\u4e09\u4e2a\u6027\u8d28\u53ef\u5f97\uff0c\u5bf9\u4e8e\u5f53n\u4e3a\u5947\u6570\u7684\u65f6\u5019\uff0c\u6839\u636e\u6027\u8d281\u548c\u6027\u8d283\uff0c\u5fc5\u7136\u5b58\u5728\\(b[k] = 0, \\space k\\in[1,n]\\)\uff1b\u5f53n\u4e3a\u5076\u6570\u65f6\uff0c\u6839\u636e\u6027\u8d282\uff0c$\\forall k\\in[1,n],b[k] \\% 2 =1 $\u3002</p> <p>\u7efc\u4e0a\uff0c\u5982\u679cn\u4e3a\u5947\u6570\uff0c\u603b\u53ef\u4ee5\u4e00\u6b65\u8fbe\u5230\u53ef\u884c\u89e3\uff1b\u5f53n\u4e3a\u5076\u6570\uff0c\u5982\u679c\u5f53\u524d\u72b6\u6001\u4e0b\u7684Signed Sum = 0, \u90a3\u4e48\u65e0\u9700\u64cd\u4f5c\uff0c\u5426\u5219\u4e24\u6b65\u53ef\u4ee5\u5230\u8fbe\u53ef\u884c\u89e3\u3002 </p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\nusing namespace std;\nconst int N = 3e5+100;\nchar s[N];\nint n, m, a[N], f[N];\n\nvoid work(int l, int r)\n{\n    int sum = f[r]-f[l-1];\n    if(sum == 0) { printf(\"0\\n\"); return; }\n    if(n % 2 == 0) printf(\"2\\n\");\n    else printf(\"1\\n\");\n}\n\nvoid solve()\n{\n    scanf(\"%d%d\",&amp;n,&amp;m);\n    scanf(\"%s\",s);\n    for(int i = 0; i &lt; n; i++) if(s[i] == '+') a[i+1] = 1; else a[i+1] = -1;\n    for(int i = 1; i &lt;= n; i++) f[i] = f[i-1] + ( (i%2)?a[i] : -a[i] );\n    while(m--)\n    {\n        int l, r; scanf(\"%d %d\",&amp;l,&amp;r);\n        work(l,r);\n    }\n}\n\nint main()\n{\n    int T; cin &gt;&gt; T;\n    while(T--) solve();\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-741/#d2-two-hundred-twenty-one-hard-version","title":"D2. Two Hundred Twenty One (hard version)","text":"<p>\u4e0d\u59a8\u56de\u60f3D1\u7684\u9898\u89e3\u4e2d\u6240\u8bc1\u660e\u7684\u6027\u8d281\u548c3\uff0c\u8fd9\u8868\u660e\\(b[k],k\\in[1,n]\\)\u662f\u5fc5\u5b9a\u5b58\u5728\u96f6\u70b9\u7684\uff0c\u4e14\u662f\u7c7b\u8fde\u7eed\u7684\uff08\\(|b[i] - b[i+1]| = 2 \\space or \\space 0)\\)\u3002</p> <p>\u4e8e\u662f\u76f4\u63a5\u4e8c\u5206\u627e\u96f6\u70b9\u5373\u53ef\u3002</p> <p>\u8fd8\u6709\u4e2a\u5c0f\u95ee\u9898\u662f\u5982\u4f55\\(O(1)\\)\u6c42\u7ed9\u5b9a\u533a\u95f4\\([l,r]\\)\u7684\\(b[k]\\), \u53ef\u4ee5\u7528\u4e0b\u9762\u8fd9\u4e2a\u516c\u5f0f\uff1a $$ b[k] = -1^{isOdd(l)} * (sum[k-1] + sum[l-1]) + -1 ^ {isOdd(k+1) \\oplus isOdd(k-l)} *(sum[r]-sum[k]) $$ \u8fd9\u4e2a\u516c\u5f0f\u662f\u7531\u5b9a\u4e49\u76f4\u63a5\u5f97\u51fa\u7684\uff0c\u6ca1\u7406\u89e3\u7684\u53ef\u4ee5\u53bb\u770b\u770b\u4ee3\u7801\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\nusing namespace std;\nconst int N = 3e5+100;\nchar s[N];\nint n, m, a[N], f[N];\nint u, v;\nint func(int x)\n{\n    int p1 = f[x-1] - f[u-1]; p1 = u%2? p1: -p1;\n    int p2 = f[v] - f[x]; p2 = (((x-u)%2) ^ ((x+1)%2) )? p2: -p2;\n    return p1 + p2;\n}\n\nvoid work(int l, int r)\n{\n    int sum = f[r]-f[l-1];\n    if(sum == 0) { printf(\"0\\n\"); return; }\n    int flag = 0;\n    if((r-l+1)%2==0) { r--; flag = r+1; sum = f[r] - f[l-1]; sum = l%2 ? sum: -sum; }\n    u = l, v = r;\n    printf(\"b (%d,%d): \",l,r); for(int i = l; i &lt;= r; i++) printf(\"%d \",func(i)); cout &lt;&lt; endl;\n    while(l &lt; r)\n    {\n        int mid = l+r&gt;&gt;1;\n        // printf(\"%d %d %d\\n\",func(l),func(r),func(mid));\n        if( (func(mid) &gt; 0 &amp;&amp; func(l) &lt; 0) || (func(mid) &lt; 0 &amp;&amp; func(l) &gt; 0) ) r = mid-1;\n        else if( (func(mid) &gt; 0 &amp;&amp; func(r) &lt; 0) || (func(mid) &lt; 0 &amp;&amp; func(r) &gt; 0) ) l = mid+1;\n        else if( func(mid) == 0 ) l = r = mid;\n        else if( func(l) == 0 ) r = l;\n        else if( func(r) == 0 ) l = r;\n    } \n    if(flag) printf(\"2\\n%d %d\\n\",l,flag);\n    else printf(\"1\\n%d\\n\",l);\n}\n\nvoid solve()\n{\n    scanf(\"%d%d\",&amp;n,&amp;m);\n    scanf(\"%s\",s);\n    for(int i = 0; i &lt; n; i++) if(s[i] == '+') a[i+1] = 1; else a[i+1] = -1;\n    for(int i = 1; i &lt;= n; i++) f[i] = f[i-1] + ( (i%2)?a[i] : -a[i] );\n\n    while(m--)\n    {\n        int l, r; scanf(\"%d %d\",&amp;l,&amp;r);\n        work(l,r);\n    }\n}\n\nint main()\n{\n    int T; cin &gt;&gt; T;\n    while(T--) solve();\n    system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-741/#e-rescue-niwen","title":"E. Rescue Niwen!","text":"<p>\u4e0d\u96be\u770b\u51fa\u9898\u610f\u4e2d\u5c06\u539f\u5b57\u7b26\u4e32\u5c55\u5f00\u7684\u5b57\u7b26\u4e32\u5b66\u5217\u662f\u5c06\u539f\u5b57\u7b26\u4e32\u5148\u5c55\u5f00\u540e\u7f00\uff0c\u518d\u5c06\u6bcf\u4e2a\u540e\u7f00\u5c55\u5f00\u524d\u7f00\u3002</p> <p>\u4e8e\u662f\u5f88\u76f4\u89c2\u5730\u60f3\u5230\uff0c\u5728\u539f\u5b57\u7b26\u4e32\u4e0a\u8dd1\u540e\u7f00\u6570\u7ec4\u540e\uff0c\u7b54\u6848\u5e8f\u5217\u5fc5\u7136\u5728\u5f97\u5230\u7684rank\u6570\u7ec4\u4e0a\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u3002</p> <p>\u540c\u65f6\u6ce8\u610f\u5230\u52a0\u5165\u540e\u7f00\\(i\\)\u4ee5\u540e\uff0c\u7b54\u6848\u957f\u5ea6\u5e76\u4e0d\u662f\u52a0\u4e0a\\(n-i+1\\)\uff0c\u800c\u662f\\(n-i+1-lcp(i,j)\\)\uff0c\u5176\u4e2dlcp\u662f\u6700\u957f\u5171\u540c\u524d\u7f00\uff0cj\u8868\u793a\u8be5\u5e8f\u5217\u7684\u4e0a\u4e00\u4e2a\u540e\u7f00\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u8981\u5feb\u901f\u6c42lcp\uff0c\u5e78\u8fd0\u7684\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u540e\u7f00\u6570\u7ec4\u6c42\u5f97\\(lcp(i-1,i),i\\in [2,n]\\)\uff0c\u7136\u540e\u7ed3\u5408ST\u8868\u505a\u5230\\(O(1)\\)\u67e5\u8be2\u3002</p> <p>\u6ce8\u610f\u5230\u66b4\u529b\u679a\u4e3e\u662f\\(O(2^n)\\)\u7684\u590d\u6742\u5ea6, \u6240\u6709\u4e0a\u5347\u5b50\u5e8f\u5217\u662f\u4e0d\u53ef\u63a5\u53d7\u7684()\u3002\u4e8e\u662f\u8003\u8651\u7528dp\u3002</p> <p>\u8bb0\\(f[i]\\)\u8868\u793a\u4ee5\u540e\u7f00i\u7ed3\u5c3e\u7684\u6700\u4f18\u7b54\u6848\uff0c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a$f[i] = \\max(\\max_{j=1}^{i-1}(f[j]+n-i+1-lcp(i,j)) , n-i+1) $\u3002</p> <p>dp\u7684\u590d\u6742\u5ea6\u662f\\(O(n^2)\\)\u7684\uff0c\u53ef\u4ee5\u63a5\u53d7\u3002</p> <p>\u540e\u7f00\u6570\u7ec4\u548clcp\u90fd\u53ef\u4ee5\u5957\u677f\u5b50\uff0c\u6240\u4ee5\u770b\u8d77\u6765\u4ee3\u7801\u5f88\u957f\uff0c\u4f46\u5176\u5b9e\u8fd8\u53ef\u4ee5\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;cstring&gt;\nusing namespace std;\nconst int N = 2e4+100;\nstruct Suffix_Array{\n    int n, m, sa[N], rk[N&lt;&lt;1], oldrk[N&lt;&lt;1];\n    int id[N], cnt[N], rkid[N], height[N];\n\n    bool cmp(int x, int y, int w)\n    {\n        return oldrk[x] == oldrk[y] &amp;&amp; oldrk[x+w] == oldrk[y+w];\n    }\n\n    void init()\n    {\n        for(int i = 0; i &lt;= m+1; i++) height[i] = id[i] = cnt[i] = rkid[i] = sa[i] = 0;\n        for(int i = 0; i &lt;= 2*m+2; i++) rk[i] = oldrk[i] = 0; \n    }\n\n    void solve(char* s) //Note:\u771f\u6b63\u7684\u5b57\u7b26\u4e32\u662f\u4eces+1\u5f00\u59cb\u7684\n    {\n        n = strlen(s+1);\n        m = max(n, 256); //\u503c\u57df\u5927\u5c0f\n        init();\n        //\u521d\u59cb\u5316 sa\u548crk\u6570\u7ec4\n        for(int i = 1; i &lt;= n; i++) ++cnt[rk[i] = s[i]];\n        for(int i = 1; i &lt;= m; i++) cnt[i] += cnt[i-1];\n        for(int i = n; i &gt; 0; i--) sa[cnt[rk[i]]--] = i;\n\n        //\u4ee5\u4e0b\u662f\u500d\u589e\n        //w\u8868\u793a\u5df2\u63a8\u51fa\u7684\u5b50\u4e32\u957f\u5ea6\n        for(int w = 1, p; w &lt; n; w &lt;&lt;= 1)\n        {\n            p = 0;\n            for(int i = n; i &gt; n-w; i--) id[++p] = i;\n            for(int i = 1; i &lt;= n; ++i)\n                if(sa[i] &gt; w) id[++p] = sa[i] - w;\n            //\u4ee5\u4e0a\u662f\u540e\u534a\u622ark[i+w\u4f5c\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\n            memset(cnt, 0, sizeof(int)*(m+1));\n            for(int i = 1; i &lt;= n; i++) ++cnt[rkid[i] = rk[id[i]]];\n            for(int i = 1; i &lt;= m; i++) cnt[i] += cnt[i-1];\n            for(int i = n; i &gt;= 1; --i) sa[cnt[rkid[i]]--] = id[i];\n            //\u6309\u7167\u524d\u534a\u622ark[i]\u4f5c\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\u6392\u5e8f\n            swap(rk, oldrk);\n            m = 0;\n            for(int i = 1; i &lt;= n; i++)\n                rk[sa[i]] = (m += (cmp(sa[i], sa[i-1], w) ^ 1));\n        }\n        return;\n    }\n    void GetHeight(char *s) {\n    for (int i = 1, k = 0; i &lt;= n; ++ i) {\n        if (rk[i] == 1) k = 0;\n        else {\n        if (k &gt; 0) k --;\n        int j = sa[rk[i] - 1];\n        while (i + k &lt;= n &amp;&amp; j + k &lt;= n &amp;&amp; \n                s[i + k] == s[j + k]) {\n            ++ k;\n        }\n        }\n        height[rk[i]] = k;\n    }\n    }\n}w;\nchar s[N];\nstruct LCP{\n    static const int logn = 21;\n    static const int maxn = 2000001;\n    int f[maxn][logn + 1], Logn[maxn + 1];\n    int *height;\n    int *rk;\n    int n;\n\n    void init(Suffix_Array&amp; o){\n        height = o.height;\n        rk = o.rk;\n        n = o.n;\n    }\n\n    void pre_lcp()\n    {\n        Logn[1] = 0;\n        Logn[2] = 1;\n        for (int i = 3; i &lt; maxn; i++) {\n            Logn[i] = Logn[i / 2] + 1;\n        }\n        // memset(f, 0x3f, sizeof f); //\u591a\u6b21\u5faa\u73af\u8fd9\u91cc\u65f6\u95f4\u5ea6\u7206\u70b8 \u8981\u6ce8\u610f\n        for (int j = 1; j &lt;= logn; j++)\n        for (int i = 1; i + (1 &lt;&lt; j) - 1 &lt;= n; i++)\n        f[i][j] = 0x3f3f3f3f;\n\n        for(int i = 1; i &lt;= n; i++) f[i][0] = height[i];\n\n        for (int j = 1; j &lt;= logn; j++)\n        for (int i = 1; i + (1 &lt;&lt; j) - 1 &lt;= n; i++)\n        f[i][j] = min(f[i][j - 1], f[i + (1 &lt;&lt; (j - 1))][j - 1]);\n\n    }\n\n    int lcp(int l, int r){ //l\u548cr\u662f\u6307\u4ee5\u7b2cl\u4e2a\u5b57\u7b26\u5f00\u59cb\u7684\u540e\u7f00\u548c\u7b2cr\u4e2a\u5b57\u7b26\u5f00\u59cb\u7684\u540e\u7f00\n        if(l == r) return n-l+1;\n\n        l = rk[l];\n        r = rk[r];\n        if(l&gt;r) swap(l, r);\n        l++;\n        int x = Logn[r - l + 1];\n        return min(f[l][x], f[r - (1 &lt;&lt; x) + 1][x]);\n    }\n}t;\nint f[N], top = 0;\nvoid solve()\n{\n    int n; scanf(\"%d %s\",&amp;n,s+1);\n    w.solve(s);\n    w.GetHeight(s);\n    t.init(w);\n    t.pre_lcp();\n    int *a = w.rk;\n    int ans = 0;\n    for(int i = 1; i &lt;= n; i++)\n    {\n        int tmp = 0;\n        for(int j = 1; j &lt; i; j++)\n        {\n            if(a[i] &gt; a[j]) tmp = max(tmp, f[j] + n-i+1 - t.lcp(i,j));\n        }\n        f[i] = max(tmp, n-i+1);\n        ans =  max(f[i], ans);\n    }\n    printf(\"%d\\n\",ans);\n}\nint main()\n{\n    int T; cin &gt;&gt; T;\n    while(T--)\n    {\n        solve();\n    }\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-742/","title":"Codeforces Round #742 (Div. 2)","text":""},{"location":"archived/codefroces/Codeforces-Round-742/#a-domino-disaster","title":"A. Domino Disaster","text":"<p>\u63cf\u8ff0\uff1a</p> <p>Alice\u6709\u4e00\u4e2a\u5305\u542b2\u884c\u548cn\u5217\u7684\u7f51\u683c\u3002\u5979\u4f7f\u7528\u5927\u5c0f\u4e3a1\u00d72\u7684n\u4e2a\u591a\u7c73\u8bfa\u9aa8\u724c\u5b8c\u5168\u8986\u76d6\u7f51\u683c\uff08Alice\u53ef\u4ee5\u5782\u76f4\u6216\u6c34\u5e73\u653e\u7f6e\u5b83\u4eec\uff09\uff0c\u5e76\u4e14\u6bcf\u4e2a\u5355\u5143\u683c\u5e94\u8be5\u7531\u4e00\u4e2a\u591a\u7c73\u8bfa\u9aa8\u724c\u8986\u76d6\u3002 \u73b0\u5728\uff0c\u5979\u51b3\u5b9a\u5411\u9c8d\u52c3\u5c55\u793a\u4e00\u6392\u7f51\u683c\u3002\u5e2e\u52a9Bob\u627e\u51fa\u7f51\u683c\u7684\u53e6\u4e00\u884c\u662f\u4ec0\u4e48\u6837\u5b50</p> <p>\u5206\u6790\uff1a</p> <p>\u7565\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\nusing namespace std;\nchar s[105], ans[105];\nvoid solve()\n{\n    int n; scanf(\"%d%s\",&amp;n,s);\n    for(int i = 0; s[i]; i++)\n    {\n        if(s[i] == 'R' || s[i] == 'L') ans[i] = s[i];\n        else if(s[i] == 'U') ans[i] = 'D';\n        else ans[i] = 'U';\n    }\n    ans[n] = '\\0';\n    printf(\"%s\\n\",ans);\n}\n\nint main()\n{\n    int __; scanf(\"%d\",&amp;__);\n    while(__--) solve();\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-742/#b-mexor-mixup","title":"B. MEXor Mixup","text":"<p>\u63cf\u8ff0\uff1a</p> <p>\u7ed9\u5b9a\u4e24\u4e2a\u6574\u6570a\u548cb\uff0c\uff08a&gt;0 and \\(b\\ge0\\)) \u3002</p> <p>\u79f0\u4e00\u4e2a\u6570\u7ec4arr\u7b26\u5408\u8981\u6c42\uff0c\u5f53\u4e14\u4ec5\u5f53$MEX(arr) = a $ and \\(XOR(arr) = b\\)\u3002</p> <p>\u6c42\u7b26\u5408\u8981\u6c42\u7684\u6570\u7ec4\u7684\u6700\u5c0f\u957f\u5ea6\u3002</p> <p>\u5171T\u7ec4\u6570\u636e\u3002</p> <p>\u5206\u6790\uff1a</p> <p>\u8981\u6784\u9020\u51fa\u4e00\u4e2aMEX\u4e3aa\u7684\u6570\u7ec4\uff0c\u6211\u4eec\u663e\u7136\u81f3\u5c11\u9700\u8981a\u4e2a\u5143\u7d20\uff08\u4ece0\u5230a-1\uff09\u3002</p> <p>\u6b64\u65f6\u6211\u4eec\u5f97\u5230\u7684\u6570\u7ec4\u7684\u5f02\u6216\u548c\u4e3a\\(XOR(0,1,2,...,a-1)\\)</p> <p>\u901a\u8fc7\u5f02\u6216\u7684\u6027\u8d28\uff0c\u6211\u4eec\u4e0d\u96be\u5f97\u77e5\u7ed9\u6570\u7ec4\u6dfb\u52a0\u4e0a\u4e00\u4e2a\u6574\u6570\\(c = b \\oplus XOR(0,1,...,a-1)\\)\uff0c\u5c31\u80fd\u4f7f\u6574\u4e2a\u6570\u7ec4\u7684\u5f02\u6216\u548c\u4e3ab\u3002</p> <p>\u4f46\u662f\u5982\u679cc\u6070\u597d\u7b49\u4e8ea\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u7528\u4e24\u4e2a\u6574\u6570\u6765\u6784\u9020c\u3002</p> <p>\u5982\u679c\\(XOR(0,1,...,a-1)\\)\u5df2\u7ecf\u7b49\u4e8eb\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4e0d\u8981\u753b\u86c7\u6dfb\u8db3\u4e86\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\n#include &lt;queue&gt;\nusing namespace std;\nint aa[300100];\nvoid init()\n{\n    for(int i = 1; i &lt;= 300001; i++)\n    aa[i] = aa[i-1] ^ i;\n}\n\nvoid solve()\n{\n    int a,b; scanf(\"%d%d\",&amp;a,&amp;b);\n    int sum = aa[a-1];\n    if(sum == b) printf(\"%d\\n\",a);\n    else if((b ^ sum) == a) printf(\"%d\\n\",a+2);\n    else printf(\"%d\\n\",a+1);\n}\n\nint main()\n{\n    init();\n    int __; scanf(\"%d\",&amp;__);\n    while(__--) solve();\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-742/#c-carrying-conundrum","title":"C. Carrying Conundrum","text":"<p>\u63cf\u8ff0\uff1a</p> <p>\u7231\u4e3d\u4e1d\u6709\u70b9\u8822\uff0c\u5728\u8fdb\u884c\u52a0\u6cd5\u7684\u7ad6\u5f0f\u8fd0\u7b97\u7684\u65f6\u5019\u4f1a\u5c06\u8fdb\u4f4d\u653e\u5728\u6bd4\u539f\u672c\u7684\u8fdb\u4f4d\u66f4\u9ad8\u4e00\u4f4d\u7684\u5730\u65b9\u3002</p> <p>\u4e0d\u59a8\u5c06\u8fd9\u79cd\u8fd0\u7b97\u5b9a\u4e49\u4e3a\u4e00\u79cd\u65b0\u8fd0\u7b97\u3002</p> <p>\u6bd4\u5982\uff1a2039+2976=15005</p> <p>\u73b0\u5728\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570n\uff0c\u6c42\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u6b63\u6574\u6570\u5bf9\u8fdb\u884c\u8fd0\u7b97\u53ef\u4ee5\u5f97\u5230n\u3002 <p>T\u7ec4\u6570\u636e\u3002</p> <p>\u5206\u6790\uff1a</p> <p>\u8bb0\u4e2a\u4f4d\u6570\u4e3a\u7b2c1\u4f4d\uff0c\u5341\u4f4d\u6570\u4e3a\u7b2c2\u4f4d\uff0c\u4f9d\u6b21\u7c7b\u63a8\u3002</p> <p>\u4e0d\u80fd\u53d1\u73b0\uff0c\u5947\u6570\u4f4d\u53ea\u80fd\u5f71\u54cd\u5947\u6570\u4f4d\uff0c\u5076\u6570\u4f4d\u53ea\u80fd\u5f71\u54cd\u5076\u6570\u4f4d\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u5c06\u539f\u672c\u7684a\u6309\u7167\u5947\u5076\u4f4d\u6570\u62c6\u5206\u6210\u4e24\u4e2a\u6570\u5b57x\u548cy\u3002</p> <p>\u8fd9\u65f6\u5019x\u548cy\u7684\u8868\u73b0\u5c31\u548c\u666e\u901a\u52a0\u6cd5\u4e00\u6837\u4e86\u3002\u540c\u65f6\u53bb\u6389\u540c\u65f6\u4e3a(0, n)\u7684\u60c5\u51b5\u5373\u53ef\u3002</p> <p>\u6240\u4ee5\u7b54\u6848\u5c31\u662f\\((x+1)*(y+1)-2\\)</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\n#include &lt;queue&gt;\nusing namespace std;\n#define N 100\n#define endl \"\\n\";\nint a[N];\n\nvoid solve()\n{\n    int n; scanf(\"%d\",&amp;n);\n    int cnt = 0;\n    while(n) { a[cnt++] = n%10; n/=10; }\n    long long x = 0;\n    for(int i = cnt-1; i &gt;= 0; i-=2)\n    {\n        x *= 10;\n        x += a[i];\n    }\n    long long y = 0;\n    for(int i = cnt-2; i &gt;= 0; i-=2)\n    {\n        y *= 10;\n        y += a[i];\n    }\n    long long ans = 0;\n    ans = (y+1) * (x+1) - 2;\n    printf(\"%lld\\n\",ans);\n}\n\nint main()\n{\n    int __; scanf(\"%d\",&amp;__);\n    while(__--) solve();\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-742/#d-expression-evaluation-error","title":"D. Expression Evaluation Error","text":"<p>\u63cf\u8ff0\uff1a</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u5341\u8fdb\u5236\u6570s\uff0c\u5c06\u5176\u5206\u4e3an\u4efd\u3002\u7136\u540e\u5c06n\u4e2a\u6570\u5168\u90e8\u8f6c\u6210\u5341\u4e00\u8fdb\u5236\u6570\u3002</p> <p>\u95ee\uff0c\u8f6c\u6362\u6210\u5341\u4e00\u8fdb\u5236\u540en\u4e2a\u6570\u7684\u548c\u6700\u5927\u7684\u65b9\u6848\u3002\uff08\\(n\\le100\\))</p> <p>T\u7ec4\u6570\u636e\u3002</p> <p>\u5206\u6790\uff1a</p> <p>\u6211\u4eec\u79f0\u4e00\u4e2a\u6570\u7279\u6b8a\uff0c\u5f53\u4e14\u4ec5\u5f53\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u8fd9\u4e2a\u6570\u4e0a\u9762\u62c6\u5206\u4e0b\u4e00\u4e2a\u6570\uff0c\u4f7f\u5f97\uff0c\u539f\u6570\u548c\u62c6\u5206\u540e\u7684\u4e24\u4e2a\u6570\u5728\u5341\u4e00\u8fdb\u5236\u4e0b\u7684\u548c\u76f8\u540c\u3002</p> <p>\u6bd4\u5982\uff1a $$ 11_{11} = 10_{11}+1_{11}\\ 400_{11} = 100_{11}+100_{11}+100_{11}+100_{11}\\ 23_{11} = 10_{11}+10_{11}+1_{11}+1_{11}+1_{11} $$ \u89c2\u5bdf\u4e0d\u96be\u53d1\u73b0\uff0c\u53ea\u6709\u5f62\u5982\\(1[0]^*\\)\u7684\u6570\u662f\u4e0d\u7279\u6b8a(\u5e73\u51e1\uff09\u7684\u3002</p> <p>\u4e14\u4e0d\u7279\u6b8a\u7684\u6570\u53ef\u4ee5\u88ab\u62c6\u5206\u6210\u82e5\u5e72\u4e2a\u5e73\u51e1\u6570\u3002</p> <p>\u4f9d\u636e\u9898\u610f\uff0c\u6211\u4eec\u5e94\u8be5\u4f18\u5148\u5c06\u7279\u6b8a\u7684\u6570\u62c6\u89e3\u6210\u5e73\u51e1\u7684\u6570\u3002</p> <p>\u90a3\u4e48\u5f53\u6ca1\u6709\u7279\u6b8a\u6570\u65f6\u600e\u4e48\u529e\u5462\uff1f</p> <p>\u8fd9\u65f6\u5019\u518d\u62c6\u5206\u5fc5\u7136\u9020\u6210\u635f\u5931\uff0c\u4f46\u662f\u6211\u4eec\u5e94\u8be5\u8d2a\u5fc3\u5730\u6700\u5c0f\u5316\u635f\u5931\u3002</p> <p>\u89c2\u5bdf\uff1a $$ 10_{11} - (9_{11}+1_{11}) = 1\\ 100_{11} - (90_{11} + 10_{11}) = 11\\ 100_{11} - (99_{11} + 1_{11}) = 12\\ 1000_{11} - {(999_{11} + 1_{11})} = 242\\ 1000_{11} - {(900_{11} + 100_{11})} = 121 $$ \u4ece\u4e0a\u9762\u7684\u4f8b\u5b50\u53ef\u4ee5\u770b\u51fa\uff0c\u5f53\u6211\u4eec\u8981\u62c6\u5206\u5e73\u51e1\u6570x\u7684\u65f6\u5019\uff0c\u5c06\u5176\u62c6\u5206\u6210\\(x-x/10, x/10\\)\u65f6\u7684\u635f\u5931\u662f\u6700\u5c0f\u7684\uff0c\u4e14x\u8d8a\u5c0f\uff0c\u635f\u5931\u8d8a\u5c0f\u3002</p> <p>\u7531\u4ee5\u4e0a\u7684\u6027\u8d28\uff0c\u4e0d\u96be\u60f3\u51fa\u8d2a\u5fc3\u7b56\u7565\u3002</p> <pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\n#include &lt;queue&gt;\n#define endl \"\\n\"\nusing namespace std;\nint ans[106];\n\nbool isSpi1(int x)\n{\n    if(x % 10 &gt; 0) return 0;\n    while(x % 10 == 0) x /= 10;\n    return x == 1;\n}\n\nbool isSpi2(int x)\n{\n    for(int i = 2; i &lt; 10; i++)\n    {\n        if(x % i == 0) return 0;\n    }\n    return 1;\n}\n\nint cut(int&amp; x)\n{\n    int b = 10;\n    while(x % b == 0) b*=10;\n    x -= b/10;\n    return b/10;\n}\n\nvoid solve()\n{\n    int s, n; scanf(\"%d%d\",&amp;s,&amp;n);\n    ans[1] = s; ans[0] = s+1;\n    for(int i = 2; i &lt;= n; i++)\n    {\n        bool f = 0;\n        for(int j = 1; j &lt; i; j++)\n        {\n            if(!isSpi1(ans[j])  &amp;&amp; ans[j] &gt; 1) { ans[i] = cut(ans[j]); f = 1; }\n        }\n        if(!f) \n        {\n            int mn = 0;\n            for(int j = 1; j &lt; i; j++)\n            if(ans[j] &gt; 1 &amp;&amp; ans[j] &lt; ans[mn]) mn = j;\n            ans[i] = ans[mn]/10; \n            ans[mn] -= ans[i];\n        }\n    }\n    for(int i = 1; i &lt;= n; i++) printf(\"%d \",ans[i]); printf(\"\\n\");\n}\nint main()\n{\n    int __; scanf(\"%d\",&amp;__);\n    while(__--) solve();\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-742/#e-non-decreasing-dilemma","title":"E. Non-Decreasing Dilemma","text":"<p>\u63cf\u8ff0\uff1a</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u6570\u5217a\uff0c\u957f\u5ea6\u4e3an\u3002</p> <p>\u8fdb\u884cm\u6b21\u64cd\u4f5c\uff0c\u5171\u6709\u4e24\u79cd\u64cd\u4f5c\uff1a</p> <p>1 x y: \u5c06\\(a_x\\)\u66f4\u65b0\u4e3ay</p> <p>2 l r: \u8ba1\u7b97\u6709\u591a\u5c11\u4e0d\u9012\u51cf\u7684\u8fde\u7eed\u5b50\u5e8f\u5217\u5728\u6570\u7ec4a\u7684\u533a\u95f4[l,r]\u4e2d\uff0c\u5e76\u5c06\u7ed3\u679c\u8f93\u51fa\u3002</p> <p>\u5206\u6790\uff1a</p> <p>\u8003\u8651\u4e00\u6761\u8fde\u7eed\u7684\u4e0d\u9012\u51cf\u7684\u957f\u5ea6\u4e3ak\u7684\u6570\u7ec4\uff0c\u603b\u5171\u6709\\((k+1)*k/2\\)\u4e2a\u4e0d\u9012\u51cf\u7684\u8fde\u7eed\u5b50\u5e8f\u5217\u3002</p> <p>\u518d\u8003\u8651\u4e00\u4e2a\u533a\u95f4\\([l,r]\\)\uff0c\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u533a\u95f4\u7684\u8fde\u7eed\u524d\u7f00\u957f\u5ea6pre\uff0c\u8fde\u7eed\u540e\u7f00\u957f\u5ea6suf\uff0c\u662f\u5426\u6574\u6bb5\u8fde\u7eedisDiv\uff0c\u5df2\u7ecf\u88ab\u524d\u7f00\u548c\u540e\u7f00\u5939\u5728\u4e2d\u95f4\u7684\u90e8\u5206\u7684\u8fde\u7eed\u5b50\u5e8f\u5217\u6570\u91cfsum\uff0c\u5c31\u53ef\u4ee5\\(O(1)\\)\u6c42\u51fa\u8be5\u533a\u95f4\u7684\u7b54\u6848\u3002</p> <p>\u8003\u8651\u5408\u5e76\u4e24\u4e2a\u533a\u95f4\u65f6\uff0c\u4e5f\u53ea\u9700\u8981\u7ef4\u62a4\u4ee5\u4e0a\u56db\u4e2a\u53d8\u91cf\u5373\u53ef\u5728O(1)\u5185\u5408\u5e76\u3002</p> <p>\u4e8e\u662f\u8003\u8651\u4f7f\u7528\u7ebf\u6bb5\u6811\u3002</p> <pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\nusing namespace std;\n#define N 1&lt;&lt;20\n#define M 1&lt;&lt;18\ntypedef long long LL;\nstruct node\n{\n    LL pre, suf, sum, len;\n    bool isDiv;\n}c[N];\nint n, a[M];\n\nvoid merge(int p, int mid)\n{\n    int x = p&lt;&lt;1, y = (p&lt;&lt;1)+1;\n    if(a[mid] &lt;= a[mid+1])\n    {\n        if(c[x].isDiv) c[p].pre = c[x].pre;\n        else c[p].pre = c[x].pre + c[y].pre;\n        if(c[y].isDiv) c[p].suf = c[y].suf;\n        else c[p].suf = c[x].suf + c[y].suf;\n        if(c[x].isDiv || c[y].isDiv) c[p].isDiv = 1; else c[p].isDiv = 0;\n        c[p].len = c[x].len + c[y].len;\n        c[p].sum = c[x].sum + c[y].sum;\n        if(c[x].isDiv &amp;&amp; c[y].isDiv) \n        {\n            LL s = c[x].suf + c[y].pre;\n            c[p].sum += s*(s+1)/2;\n        }\n    }\n    else\n    {\n        c[p].pre = c[x].pre; c[p].suf = c[y].suf;\n        c[p].isDiv = 1;\n        c[p].len = c[x].len + c[y].len;\n        c[p].sum = c[x].sum + c[y].sum;\n        if(c[x].isDiv) c[p].sum += c[x].suf*(c[x].suf+1)/2;\n        if(c[y].isDiv) c[p].sum += c[y].pre*(c[y].pre+1)/2;\n    }\n}\n\nvoid build(int p = 1, int l = 1, int r = n)\n{\n    if(l == r) { c[p] = {1,1,0,1,0}; }\n    else\n    {\n        int mid = l+r&gt;&gt;1;\n        build(p&lt;&lt;1, l, mid);\n        build((p&lt;&lt;1)+1, mid+1, r);\n        merge(p, mid);\n    }\n}\n\nvoid update(int x, int p=1, int l=1, int r=n)\n{\n    if(l==r) return;\n    else if(x&lt;l || x&gt;r) return;\n    else \n    {\n        int mid = l+r&gt;&gt;1;\n        if(x&lt;=mid) update(x, p&lt;&lt;1, l, mid);\n        else update(x, (p&lt;&lt;1)+1, mid+1, r);\n        merge(p, mid);\n    }\n}\n\nnode query(int tl, int tr, int p = 1, int nl = 1, int nr = n)\n{\n    if(nl&gt;=tl &amp;&amp; nr&lt;=tr) return c[p];\n    else if(nl &gt; tr || nr &lt; tl) return {0, 0, 0, 0, 0};\n    else\n    {\n        int mid = nl+nr&gt;&gt;1;\n        auto u = query(tl, tr, p&lt;&lt;1, nl, mid);\n        auto v = query(tl, tr, (p&lt;&lt;1)+1, mid+1, nr);\n        node rev = {0,0,0,0,0};\n        if(u.suf == 0) return v;\n        else if(v.pre == 0) return u;\n        else \n        {\n            if(a[mid] &lt;= a[mid+1])\n            {\n                if(u.isDiv) rev.pre = u.pre;\n                else rev.pre = u.pre + v.pre;\n                if(v.isDiv) rev.suf = v.suf;\n                else rev.suf = u.suf + v.suf;\n                if(u.isDiv || v.isDiv) rev.isDiv = 1; else rev.isDiv = 0;\n                rev.len = u.len + v.len;\n                rev.sum = u.sum + v.sum;\n                if(u.isDiv &amp;&amp; v.isDiv) \n                {\n                    LL s = u.suf + v.pre;\n                    rev.sum += s*(s+1)/2;\n                }\n            }\n            else\n            {\n                rev.pre = u.pre; rev.suf = v.suf;\n                rev.isDiv = 1;\n                rev.len = u.len + v.len;\n                rev.sum = u.sum + v.sum;\n                if(u.isDiv) rev.sum += u.suf*(u.suf+1)/2;\n                if(v.isDiv) rev.sum += v.pre*(v.pre+1)/2;\n            }\n        }\n        return rev;\n    }\n}\n\nint main()\n{\n    int m; scanf(\"%d%d\",&amp;n,&amp;m);\n    for(int i = 1; i &lt;= n; i++) scanf(\"%d\",a+i);\n    build();\n    for(int i = 1; i &lt;= m; i++)\n    {\n        int f; scanf(\"%d\",&amp;f);\n        if(f == 1)\n        {\n            int x, v; scanf(\"%d%d\",&amp;x,&amp;v);\n            a[x] = v;\n            update(x);\n        }\n        else\n        {\n            int l, r; scanf(\"%d%d\",&amp;l,&amp;r);\n            node u = query(l,r);\n            LL ans =  0;\n            if(u.isDiv) ans = u.sum + u.suf*(u.suf+1)/2 + u.pre*(u.pre+1)/2;\n            else ans = u.len * (u.len+1) / 2;\n            printf(\"%lld\\n\",ans);\n        }\n    }\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-744/","title":"Codeforces Round #744 (Div. 3)","text":""},{"location":"archived/codefroces/Codeforces-Round-744/#a-casimirs-string-solitaire","title":"A. Casimir's String Solitaire","text":"<p>\u5206\u6790\uff1a\u4e0d\u96be\u53d1\u73b0\uff0c\u5f53\u4e14\u4ec5\u5f53B\u7684\u4e2a\u6570\u7b49\u4e8eA\u548cC\u7684\u4e2a\u6570\u7684\u548c\u65f6\uff0c\u53ef\u884c\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\nusing namespace std;\nconst int N  = 500;\nchar s[N];\n\nvoid solve()\n{\n    scanf(\"%s\",s);\n    int a, b; a = b = 0;\n    for(int i = 0; s[i]; i++)\n    {\n        if(s[i] == 'B') b++;\n        else a++;\n    }\n    if(b == a) printf(\"YES\\n\");\n    else printf(\"NO\\n\");\n}\n\nint main()\n{\n    int t; scanf(\"%d\",&amp;t);\n    while(t--) solve();\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-744/#b-shifting-sort","title":"B. Shifting Sort","text":"<p>\u5206\u6790: \u4e0d\u96be\u60f3\u51fa, \u6bcf\u6b21\u5bfb\u627e\u7b2ci\u5927\u7684\u5143\u7d20, \u7136\u540e\u628a\u8fd9\u4e2a\u5143\u7d20\u6ed1\u52a8\u5230\u7b2ci\u4f4d\u5373\u53ef. \u8003\u8651\u5230n\u4e0d\u5927\u4e8e50, \u66b4\u529b\u67e5\u627e\u6a21\u62df\u5373\u53ef.</p> <p>code:</p> <pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\nusing namespace std;\nconst int N  = 500;\nint a[N], b[N];\nint l[N], r[N], d[N], cnt;\nvoid solve()\n{\n    int n; scanf(\"%d\",&amp;n);\n    cnt = 0;\n    for(int i = 1; i &lt;= n; i++) { scanf(\"%d\",a+i); b[i] = a[i]; }\n    sort(b+1, b+1+n);\n    for(int i = 1; i &lt;= n; i++)\n    {\n        int j;\n        for(j = i; j &lt;= n; j++)\n        {\n            if(b[i] == a[j]) break;\n        }\n        if(i != j) \n        {\n            l[cnt] = i;\n            r[cnt] = j;\n            d[cnt] = j-i;\n            for(int k = j; k &gt; i; k--) a[k] = a[k-1];\n            a[i] = b[i];\n            cnt++;\n        }\n    }\n    printf(\"%d\\n\",cnt);\n    for(int i = 0; i &lt; cnt; i++)\n    {\n        printf(\"%d %d %d\\n\",l[i],r[i],d[i]);\n    }\n}\n\nint main()\n{\n    int t; scanf(\"%d\",&amp;t);\n    while(t--) solve();\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-744/#c-ticks","title":"C. Ticks","text":"<p>\u5206\u6790: \u6a21\u62df\u9898, \u6ca1\u5565\u597d\u8bf4\u7684.</p> <pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\nusing namespace std;\nconst int N  = 32;\nchar s[N];\nint a[N][N], cnt;\nint c[N][N];\nint n, m, k; \nvoid check(int x, int y, int k)\n{\n    if(x &lt;= k) return;\n    if(y &lt;= k || m-y &lt; k) return;\n    int h = 1;\n    while( x&gt;h &amp;&amp; y&gt;h &amp;&amp; m-y&gt;=h &amp;&amp; a[x-h][y-h] &amp;&amp; a[x-h][y+h] ) h++;\n    h--;\n    if(h &lt; k) return;\n    for(int i = 0; i &lt;= h; i++)\n    {\n        if( c[x-i][y-i] == 0) { cnt--; \n        c[x-i][y-i] = 1; }\n        if( c[x-i][y+i] == 0) { cnt--; \n        c[x-i][y+i] = 1; }\n    }\n}\n\nvoid solve()\n{\n    scanf(\"%d %d %d\",&amp;n,&amp;m,&amp;k);\n    cnt = 0;\n    for(int i = 1; i &lt;= n; i++)\n    {\n        scanf(\"%s\",s);\n        for(int j = 1; j &lt;= m; j++)\n        {\n            if(s[j-1] == '*') { a[i][j] = 1; cnt++; }\n            else a[i][j] = 0;\n            c[i][j] = 0;\n        }\n    }\n    for(int i = n; i; i--)\n        for(int j = 1; j &lt;= m; j++)\n            if(a[i][j]) check(i, j, k);\n    if(cnt == 0) printf(\"YES\\n\");\n    else printf(\"NO\\n\");\n}\n\nint main()\n{\n    int t; scanf(\"%d\",&amp;t);\n    while(t--) solve();\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-744/#d-productive-meeting","title":"D. Productive Meeting","text":"<p>\u5206\u6790:</p> <p>\u89c2\u5bdf\u4e0b\u5217\u8fd9\u7ec4\u6570\u636e:</p> <p>5</p> <p>8 2 0 1 1</p> <p>\u6211\u4eec\u53d1\u73b0, \u5f53\u4e0d\u662f\u6700\u5927\u5143\u7d20\u53bb\u5339\u914d\u65f6, \u53ef\u80fd\u51fa\u73b0\u975e\u6700\u4f18\u7684\u60c5\u51b5. </p> <p>\u4e8e\u662f\u6211\u4eec\u8003\u8651\u6bcf\u6b21\u5339\u914d\u6700\u5927\u5143\u7d20\u548c\u6b21\u5927\u5143\u7d20, \u7528\u4f18\u5148\u961f\u5217\u7ef4\u62a4\u5373\u53ef.</p> <p>\u4e3a\u4e86\u4fdd\u8bc1\u6b63\u786e\u6027, \u6bcf\u6b21\u5339\u914d\u53ea\u53ef\u4ee5\u5339\u914d\u4e00\u6b21.</p> <p>code:</p> <pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\n#include &lt;queue&gt;\nusing namespace std;\nconst int N = 1&lt;&lt;18;\nint a[N];\nstruct node{\n    int w, idx;\n    bool operator &lt;(const node&amp; o) const{\n        return w &lt; o.w;\n    }\n};\npriority_queue&lt;node&gt; q;\nint x[N], y[N], cnt;\nvoid solve()\n{\n    int n; scanf(\"%d\",&amp;n);\n    cnt = 0;\n    for(int i = 1; i &lt;= n; i++) \n    {\n        scanf(\"%d\",&amp;a[i]);\n        if(a[i]) q.push({a[i], i});\n    }\n    while(q.size() &gt; 1)\n    {\n        node u = q.top(); q.pop();\n        node v = q.top(); q.pop();\n        x[cnt] = u.idx;\n        y[cnt] = v.idx;\n        cnt++;\n        u.w--; v.w--;\n        if(v.w) q.push(v);\n        if(u.w) q.push(u);\n    }\n    while(q.size()) q.pop();\n    printf(\"%d\\n\",cnt);\n    for(int i = 0; i &lt; cnt; i++) printf(\"%d %d\\n\",x[i],y[i]);\n}\n\nint main()\n{\n    int t; scanf(\"%d\",&amp;t);\n    while(t--) solve();\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-744/#e1-permutation-minimization-by-deque","title":"E1. Permutation Minimization by Deque","text":"<p>\u5206\u6790:</p> <p>\u76f4\u63a5\u7528deque\u6a21\u62df\u5373\u53ef.</p> <p>\u9644\u4e0a\u4e00\u5f20deque\u7684\u57fa\u672c\u64cd\u4f5c. </p> <p>code: <pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\n#include &lt;queue&gt;\nusing namespace std;\nconst int N  = 32;\ndeque&lt;int&gt; q;\nvoid solve()\n{\n    int n; scanf(\"%d\",&amp;n);\n    int tmp; scanf(\"%d\",&amp;tmp); q.push_back(tmp);\n    for(int i = 2; i &lt;= n; i++)\n    {\n        scanf(\"%d\",&amp;tmp);\n        if(tmp &lt; q.front()) q.push_front(tmp);\n        else q.push_back(tmp);\n    }\n    for(int i = 1; i &lt;= n; i++)\n    {\n        printf(\"%d \",q.front()); q.pop_front();\n    }\n    printf(\"\\n\");\n}\n\nint main()\n{\n    int t; scanf(\"%d\",&amp;t);\n    while(t--) solve();\n    // system(\"pause\");\n}\n</code></pre></p>"},{"location":"archived/codefroces/Codeforces-Round-744/#e2-array-optimization-by-deque","title":"E2. Array Optimization by Deque","text":"<p>\u5206\u6790: \u6211\u4eec\u53d1\u73b0, \u628aai\u653e\u5728\u524d\u5934\u65f6, \u6240\u589e\u52a0\u7684\u9006\u5e8f\u5bf9\u662f\u4e4b\u524d\u6240\u6709\u5143\u7d20\u4e2d\u6bd4ai\u5c0f\u7684. \u628aai\u653e\u5728\u540e\u5934\u65f6,\u6240\u589e\u52a0\u7684\u9006\u5e8f\u5bf9\u662f\u4e4b\u524d\u6240\u6709\u5143\u7d20\u6bd4ai\u5927\u7684\u4e2a\u6570.</p> <p>\u8d2a\u5fc3\u5730\u64cd\u4f5c\u5373\u53ef. \u8d2a\u5fc3\u7684\u6b63\u786e\u6027\u57fa\u4e8e, \u65e0\u8bbaai\u653e\u5728\u524d\u9762\u8fd8\u662f\u540e\u9762, \u5bf9\u4e4b\u540e\u7684\u9006\u5e8f\u5bf9\u7684\u8d21\u732e\u90fd\u662f\u4e00\u6837.</p> <p>\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5373\u53ef.</p> <pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\n#include &lt;queue&gt;\nusing namespace std;\nconst int N = 1&lt;&lt;18;\nint a[N];\nint n; \nstruct node{\n    int w, idx;\n    bool operator &lt;(const node&amp; o) const{\n        return w &lt; o.w;\n    }\n}b[N];\n\nint c[N];\n\nvoid add(int x, int val)\n{\n    for(int i = x; i &lt;= n; i += i&amp;-i)\n    c[i] += val;\n}\n\nint query(int x)\n{\n    int rev = 0;\n    for(int i = x; i &gt; 0; i -= i&amp;-i)\n    rev += c[i];\n    return rev;\n}\n\nvoid solve()\n{\n    scanf(\"%d\",&amp;n);\n    for(int i = 1; i &lt;= n; i++)\n    {\n        scanf(\"%d\",&amp;a[i]);\n        b[i] = {a[i], i};\n    }\n    sort(b+1, b+n+1);\n    int cnt = 1; a[b[1].idx] = 1;\n    for(int i = 2; i &lt;= n; i++)\n    {\n        if(b[i].w &gt; b[i-1].w) cnt++;\n        a[b[i].idx] = cnt;\n    }\n    long long ans = 0;\n    for(int i = 1; i &lt;= n; i++)\n    {\n        int front = a[i]==1? 0 : query(a[i]-1);\n        int end = query(n) - query(a[i]);\n        ans += min(front, end);\n        add(a[i],1);\n    }\n    printf(\"%lld\\n\",ans);\n    for(int i = 1; i &lt;= n; i++)\n    {\n        add(a[i], -1);\n    }\n}\n\nint main()\n{\n    int t; scanf(\"%d\",&amp;t);\n    while(t--) solve();\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-744/#f-array-stabilization-and-version","title":"F. Array Stabilization (AND version)","text":"<p>\u5206\u6790:</p> <p>\u8003\u8651\u6bcf\u4e2a\u5143\u7d20ai\u4f1a\u88ab\u4f9d\u6b21\u53f3\u8fb9\u7684\u5143\u7d20\\(a_{i-d*j}, j\\in\\{1,2,3,...\\}\\)\u66f4\u65b0.</p> <p>\u6211\u4eec\u8bb0\\(f[i]\\)\u8868\u793aai\u53f3\u6570\u7b2c\\(f[i]*d\\)\u4e2a\u5143\u7d20\u662f0, \u5f53ai\u672c\u8eab\u5c31\u4e3a0\u65f6, f[i]\u663e\u7136\u4e3a0.</p> <p>\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a $$ if(a[i] == 1)\\space f[i] = f[i-d]+1\\ if(a[i]==0)\\space f[i] = 0 $$ dp\u4e00\u904d\u5373\u53ef.</p> <p>\u56e0\u4e3a\u662f\u4e2a\u73af,\u8bb0\u5f97\u53d6\u4f59.</p> <p>\u5f53\u4e00\u4e2a\u4f4d\u7f6e\u8fd8\u672a\u6c42\u51fa\u6765\u7684\u65f6\u5019\u88ab\u518d\u6b21\u8bbf\u95ee, \u5219\u8868\u793a\u65e0\u89e3.</p> <p>code:</p> <pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\n#include &lt;queue&gt;\nusing namespace std;\nconst int N = 1&lt;&lt;21;\nint a[N];\nint n, d; \nint dp[N];\nbool vis[N];\nint ans = 0;\nint dfs(int x)\n{\n    if(vis[x]) return dp[x] = -0x3f3f3f3f;\n    if(dp[x] != -1) return dp[x];\n    if(a[x] == 0) return 0;\n    vis[x] = 1;\n    int nxt = (x + n - d)%n;\n    dp[x] = dfs(nxt)+1;\n    vis[x] = 0;\n    return dp[x];\n}   \n\nvoid solve()\n{\n    scanf(\"%d %d\",&amp;n,&amp;d);\n    for(int i = 0; i &lt; n; i++) \n    {\n        scanf(\"%d\",a+i);\n        dp[i] = -1;\n    }\n    int ans = 0;\n    for(int i = 0; i &lt; n; i++)\n    {\n        if(dfs(i) &lt; 0) { printf(\"-1\\n\"); return; }\n        else ans = max(ans, dfs(i));\n    }\n    printf(\"%d\\n\",ans);\n}\n\nint main()\n{\n    int t; scanf(\"%d\",&amp;t);\n    while(t--) solve();\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-744/#g-minimal-coverage","title":"G. Minimal Coverage","text":"<p>\u5206\u6790:</p> <p>\u8003\u8651\u4e8c\u5206\u7b54\u6848+dp\u9a8c\u8bc1.</p> <p>\u8bb0\u6700\u5927\u7684\u5143\u7d20\u4e3amaxx</p> <p>\u4e0d\u96be\u53d1\u73b0, \u7b54\u6848\u5728\u4e8e[maxx, maxx*2]\u8fd9\u4e2a\u533a\u95f4\u4e2d.</p> <p>\u7136\u540e\u8003\u8651\u5982\u4f55\u68c0\u9a8c\u7ed9\u5b9a\u7b54\u6848\u662f\u5426\u5408\u6cd5.</p> <p>\u8bb0f[i]\u8868\u793a\u8ddd\u79bb\u6700\u5927\u4f4d\u7f6e\u8ddd\u79bb\u4e3ai\u7684\u65b9\u6848\u662f\u5426\u5b58\u5728, \u4e5f\u5c31\u662f\u8bf4\u53d6\u503c\u4ec5\u6709\\(\\{ture, false\\}\\)\u4e24\u79cd\u53ef\u80fd\u6027.</p> <p>\u8fd9\u91cc\u7684\u6700\u5927\u4f4d\u7f6e\u7684\u610f\u601d\u662f,\u67d0\u4e2a\u5408\u6cd5\u7684\u65b9\u6848\u4e2d\u7684\u53f3\u8fb9\u754c.</p> <p>code:</p> <pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\n#include &lt;string.h&gt;\nusing namespace std;\nconst int N = 2048;\nint a[1&lt;&lt;16];\nint n; \nbool s[N], t[N];\nbool check(int x)\n{\n    for(int i = 0; i &lt;= x; i++) s[i] = 1; //\u663e\u7136\u521d\u59cb\u7684\u65f6\u5019\u8ddd\u79bb\u5c0f\u4e8e\u7b49\u4e8ex\u7684\u90fd\u5408\u6cd5.\n    for(int i = 1; i &lt;= n; i++)\n    {\n        memset(t, 0, sizeof t);\n        int tmp = a[i];\n        for(int j = tmp; j &lt;= x; j++) t[j-tmp] = s[j]; //\u7b2cj\u4e2a\u7ebf\u6761\u5f80\u5de6\u653e\n        for(int j = x-tmp; j&gt;=0; j--) t[j+tmp] |= s[j];//\u5f80\u53f3\u653e\n        swap(s, t);\n    }\n    int flag = 0;\n    for(int i = 0; i &lt;= x; i++) flag |= s[i]; //\u5b58\u5728\u4e00\u79cd\u53ef\u80fd\u6027\u5373\u5408\u6cd5\n    return flag;\n}\n\nvoid solve()\n{\n    scanf(\"%d\",&amp;n);\n    int maxx = 0;\n    for(int i = 1; i &lt;= n; i++) \n    {\n        scanf(\"%d\",a+i);\n        maxx = max(maxx, a[i]);\n    }\n\n    int l = maxx, r = maxx*2;\n    while( l &lt; r )\n    {\n        int mid = l+r&gt;&gt;1;\n        if(check(mid)) r = mid;\n        else l = mid+1;\n    }\n    cout &lt;&lt; l &lt;&lt; endl;\n}\n\n\nint main()\n{\n    int T; scanf(\"%d\",&amp;T);\n    while(T--) solve();\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-756/","title":"Codeforces Round #756 (Div. 3)","text":""},{"location":"archived/codefroces/Codeforces-Round-756/#a-make-even","title":"A. Make Even","text":""},{"location":"archived/codefroces/Codeforces-Round-756/#_1","title":"\u5206\u6790:","text":"<p>\u4e09\u79cd\u60c5\u51b5</p> <ol> <li>\u672c\u8eab\u662f\u5076\u6570, \u7b54\u6848\u4e3a0</li> <li>\u5341\u8fdb\u5236\u6700\u9ad8\u4f4d\u662f\u5076\u6570, \u7b54\u6848\u4e3a1</li> <li>\u5341\u8fdb\u5236\u975e\u6700\u9ad8\u4f4d\u5b58\u5728\u5076\u6570, \u7b54\u6848\u4e3a2</li> </ol>"},{"location":"archived/codefroces/Codeforces-Round-756/#_2","title":"\u4ee3\u7801:","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n//#pragma GCC optimize(2)\n#define close();    ios::sync_with_stdio(false);\n#define endl '\\n'\n#define rep(i, l, r) for(int i = l; i &lt;= r; i++)\n#define dwn(i, r, l) for(int i = r; i &gt;= l; i--)\ntypedef long long LL;\nconst int N = 3e5+100;\nint a[N];\nvoid solve()\n{\n    LL n; cin &gt;&gt; n;\n    if(n % 2 == 0) cout &lt;&lt; 0 &lt;&lt; endl;\n    else \n    {\n        int cnt = 0;\n        int x = 0;\n        while(n) \n        {\n            a[++cnt] = n%10;\n            if(a[cnt] % 2 == 0) x = cnt;\n            n/=10;\n        }\n        if(x == 0) cout &lt;&lt; \"-1\" &lt;&lt; endl;\n        else \n        {\n            if(x == cnt) cout &lt;&lt; 1 &lt;&lt; endl;\n            else cout &lt;&lt; 2 &lt;&lt; endl;\n        }\n    }\n}\n\nint main()\n{\n    int T; cin &gt;&gt; T;\n    while(T--) solve();\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-756/#b-team-composition-programmers-and-mathematicians","title":"B. Team Composition: Programmers and Mathematicians","text":""},{"location":"archived/codefroces/Codeforces-Round-756/#_3","title":"\u5206\u6790:","text":"<p>\u663e\u7136\u7b54\u6848\u662f\\(\\min(\\lfloor\\frac{a+b}{4}\\rfloor, a, b)\\)</p>"},{"location":"archived/codefroces/Codeforces-Round-756/#_4","title":"\u4ee3\u7801:","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n//#pragma GCC optimize(2)\n#define close();    ios::sync_with_stdio(false);\n#define endl '\\n'\n#define rep(i, l, r) for(int i = l; i &lt;= r; i++)\n#define dwn(i, r, l) for(int i = r; i &gt;= l; i--)\ntypedef long long LL;\nconst int N = 3e5+100;\nvoid solve()\n{\n    LL a, b; cin &gt;&gt; a &gt;&gt; b;\n    cout &lt;&lt; min( (a+b)/4, min(a, b) ) &lt;&lt; endl;\n}\n\nint main()\n{\n    int T; cin &gt;&gt; T;\n    while(T--) solve();\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-756/#c-polycarp-recovers-the-permutation","title":"C. Polycarp Recovers the Permutation","text":""},{"location":"archived/codefroces/Codeforces-Round-756/#_5","title":"\u5206\u6790:","text":"<p>\u5bb9\u6613\u53d1\u73b0\u6570\u7ec4a\u7684\u6700\u5927\u503cn, \u4e00\u5b9a\u51fa\u73b0\u5728p\u6570\u7ec4\u7684\u4e24\u7aef.</p> <p>\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u5982\u679c\u6570\u7ec4p\u7684\u4e24\u7aef\u4e0d\u5b58\u5728n, \u90a3\u4e48\u5c31\u662f\u4e0d\u5408\u6cd5\u7684.</p> <p>\u7136\u540e\u6211\u4eec\u53d1\u73b0\u4e86\u4e00\u79cd\u6784\u9020\u505a\u6cd5:</p> <p>\u5728\u6784\u9020\u6570\u7ec4a\u7684\u65f6\u5019, \u628an\u653e\u5728\u4e00\u7aef, \u90a3\u4e48\u6bcf\u6b21\u62ff\u53bb\u6784\u9020\u6570\u7ec4p\u7684\u5143\u7d20\u90fd\u662f\u5728\u975en\u7aef\u7684\u5143\u7d20.</p> <p>\u4e8e\u662f\u53ea\u9700\u8981\u628a\u6570\u7ec4p\u7ffb\u8f6c\u5373\u53ef\u5f97\u5230\u4e00\u79cd\u53ef\u884c\u7684\u6570\u7ec4a.</p>"},{"location":"archived/codefroces/Codeforces-Round-756/#_6","title":"\u4ee3\u7801:","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n//#pragma GCC optimize(2)\n#define close();    ios::sync_with_stdio(false);\n#define endl '\\n'\n#define rep(i, l, r) for(int i = l; i &lt;= r; i++)\n#define dwn(i, r, l) for(int i = r; i &gt;= l; i--)\ntypedef long long LL;\nconst int N = 3e5+100;\nint a[N];\nint b[N]; \nvoid solve()\n{\n    int n; cin &gt;&gt; n;\n    rep(i, 1, n) cin &gt;&gt; a[i];\n\n    if(a[1] == n || a[n] == n)\n    {\n        dwn(i, n, 1) cout &lt;&lt; a[i] &lt;&lt; \" \"; cout &lt;&lt; endl;\n    }\n    else cout &lt;&lt; -1 &lt;&lt; endl;\n\n}\n\nint main()\n{\n    close();\n    int T; cin &gt;&gt; T;\n    while(T--) solve();\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-756/#d-weights-assignment-for-tree-edges","title":"D. Weights Assignment For Tree Edges","text":""},{"location":"archived/codefroces/Codeforces-Round-756/#_7","title":"\u5206\u6790:","text":"<p>\u9996\u5148\u5bb9\u6613\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28, \u5bf9\u4e8e\u7ed9\u5b9a\u7684\u6392\u5217p, \u5982\u679c\u5b58\u5728\u67d0\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9\u6bd4\u8be5\u8282\u70b9\u6392\u540d\u9760\u540e, \u90a3\u4e48\u663e\u7136\u662f\u4e0d\u5408\u6cd5\u7684.</p> <p>\u56e0\u4e3a\u663e\u7136\u7236\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u5e94\u8be5\u66f4\u5c0f.</p> <p>\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5047\u8bbe\u5f53\u6211\u4eec\u8ba1\u7b97\\(w[i]\\)\u65f6, \\(w[fa[i]]\\)\u662f\u5df2\u7ecf\u786e\u5b9a\u4e86\u7684.</p> <p>\u8bb0\\(dis[i]\\)\u8868\u793a\u8282\u70b9i\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb.</p> <p>\u4e8e\u662f\u4e0d\u96be\u5f97\u5230\u65b9\u7a0b:  $$ w[p[i]] = dis[p[i-1]] - dis[fa[p[i-1]]] + 1; $$</p>"},{"location":"archived/codefroces/Codeforces-Round-756/#_8","title":"\u4ee3\u7801:","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n//#pragma GCC optimize(2)\n#define close();    ios::sync_with_stdio(false);\n#define endl '\\n'\n#define rep(i, l, r) for(int i = l; i &lt;= r; i++)\n#define dwn(i, r, l) for(int i = r; i &gt;= l; i--)\ntypedef long long LL;\nconst int N = 3e5+100;\nint p[N], to[N];\nLL dis[N], w[N];\nint b[N]; \nvoid solve()\n{\n    int n; cin &gt;&gt; n;\n    int rt = 0;\n    rep(i, 1, n) dis[i] = w[i] = 0;\n    rep(i, 1, n) { cin &gt;&gt; b[i]; if(b[i] == i)  rt = i; }\n    rep(i, 1, n) { cin &gt;&gt; p[i]; to[p[i]] = i; }\n    bool f = 1;\n    if(p[1] != rt) f = 0;\n    else \n    {\n        rep(i, 2, n)\n        {\n            if(to[b[p[i]]] &gt; to[p[i]]) { f = 0; break; }\n            w[p[i]] = dis[p[i-1]] - dis[b[p[i]]] + 1;\n            dis[p[i]] = dis[b[p[i]]] + w[p[i]];\n        }\n    }\n    if(f == 0) cout &lt;&lt; -1 &lt;&lt; endl;\n    else rep(i, 1, n) cout &lt;&lt; w[i] &lt;&lt; \" \"; cout &lt;&lt; endl;\n}\n\nint main()\n{\n    close();\n    int T; cin &gt;&gt; T;\n    while(T--) solve();\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-756/#e1-escape-the-maze-easy-version","title":"E1. Escape The Maze (easy version)","text":""},{"location":"archived/codefroces/Codeforces-Round-756/#_9","title":"\u5206\u6790:","text":"<p>\u8bb0d[x]\u8868\u793a\u8282\u70b9x\u8ddd\u79bb\u670b\u53cb\u8282\u70b9\u7684\u6700\u8fd1\u8ddd\u79bb, dp[x]\u8868\u793a\u8282\u70b9x\u7684\u6df1\u5ea6(\u5373\u8282\u70b9x\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb).</p> <p>\u4e0d\u96be\u53d1\u73b0, \u5bf9\u4e8e\u6ee1\u8db3\\(dp[x] \\ge d[x]\\)\u7684\u8282\u70b9x, \u662f\u4e00\u5b9a\u4f1a\u88ab\u670b\u53cb\u6293\u7684, \u662f\u4e0d\u53ef\u8d70\u7684.</p> <p>\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u4e00\u904ddfs\u6c42\u51fadp\u548cd\u6570\u7ec4, \u7136\u540e\u518ddfs\u4e00\u904d\u770b\u770b\u80fd\u4e0d\u80fd\u8d70\u5230\u53f6\u8282\u70b9\u5373\u53ef.</p>"},{"location":"archived/codefroces/Codeforces-Round-756/#_10","title":"\u4ee3\u7801:","text":"<p>\u4ee3\u7801\u6bd4\u8f83\u61a8, \u6bd4\u8d5b\u6253\u4e00\u534a\u7684\u65f6\u5019\u56e0\u4e3a<sub>~\u79cb\u4fc3</sub>~\u573a\u5916\u8d70\u795e\u4e86.</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n//#pragma GCC optimize(2)\n#define close();    ios::sync_with_stdio(false);\n#define endl '\\n'\n#define rep(i, l, r) for(int i = l; i &lt;= r; i++)\n#define dwn(i, r, l) for(int i = r; i &gt;= l; i--)\ntypedef long long LL;\nconst int N = 3e5+100;\nconst int INF = 0x3f3f3f3f;\nvector&lt;int&gt; G[N];\nint d[N], dp[N];\nvoid dfs(int x, int fa)\n{\n    if(x != 1) dp[x] = dp[fa]+1;\n    for(int e: G[x]) \n    {\n        if(e == fa) continue;\n        dfs(e, x);\n    }\n}\n\nvoid dfs2(int x, int fa)\n{\n    if(d[x] == 0) return;\n    int t = INF;\n    for(int e: G[x]) \n    {\n        if(e == fa) continue;\n        dfs2(e, x);\n        t = min(t, d[e]);\n    }\n    d[x] = t+1;\n}\n\nbool dfs3(int x, int fa)\n{\n    if(d[x] &lt;= dp[x]) return 0;\n    if(G[x].size() == 1 &amp;&amp; x != 1) return 1;\n    bool f = 0;\n    for(int e: G[x])\n    {\n        if(e == fa) continue;\n        f |= dfs3(e, x);\n    }\n    return f;\n}\n\nvoid solve()\n{\n    int n, k; cin &gt;&gt; n &gt;&gt; k;\n    rep(i, 1, n) dp[i] = 0, d[i] = INF, G[i].clear();\n    rep(i, 1, k) { int t; cin &gt;&gt; t; d[t] = 0; }\n    rep(i, 1, n-1)\n    {\n        int u, v; cin &gt;&gt; u &gt;&gt; v;\n        G[u].push_back(v);\n        G[v].push_back(u);\n    }\n    dfs(1, 0);\n    dfs2(1, 0);\n    if(dfs3(1, 0)) cout &lt;&lt; \"YES\\n\";\n    else cout &lt;&lt; \"NO\\n\";\n\n}\n\nint main()\n{\n    close();\n    int T; cin &gt;&gt; T;\n    while(T--) solve();\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-756/#e2-escape-the-maze-hard-version","title":"E2. Escape The Maze (hard version)","text":""},{"location":"archived/codefroces/Codeforces-Round-756/#_11","title":"\u5206\u6790\uff1a","text":"<p>\u5c31\u662f\u95ee\u8bf4E1\u91cc\u7b2c\u4e8c\u904ddfs\u7684\u65f6\u5019\uff0c\u88ab\u591a\u5c11\u4e2a\u4e0d\u53ef\u8d70\u7684\u8282\u70b9\u6321\u56de\u4e86\u3002</p> <p>\u628aE1\u7684\u4ee3\u7801\u5c0f\u4fee\u5c0f\u8865\u4e00\u4e0b\u5c31\u80fd\u8fc7\u4e86</p>"},{"location":"archived/codefroces/Codeforces-Round-756/#_12","title":"\u4ee3\u7801\uff1a","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n//#pragma GCC optimize(2)\n#define close();    ios::sync_with_stdio(false);\n#define endl '\\n'\n#define rep(i, l, r) for(int i = l; i &lt;= r; i++)\n#define dwn(i, r, l) for(int i = r; i &gt;= l; i--)\ntypedef long long LL;\nconst int N = 3e5+100;\nconst int INF = 0x3f3f3f3f;\nvector&lt;int&gt; G[N];\nint d[N], dp[N];\nint ans = 0;\nvoid dfs(int x, int fa)\n{\n    if(x != 1) dp[x] = dp[fa]+1;\n    for(int e: G[x]) \n    {\n        if(e == fa) continue;\n        dfs(e, x);\n    }\n}\n\nvoid dfs2(int x, int fa)\n{\n    if(d[x] == 0) return;\n    int t = INF;\n    for(int e: G[x]) \n    {\n        if(e == fa) continue;\n        dfs2(e, x);\n        t = min(t, d[e]);\n    }\n    d[x] = t+1;\n}\n\nbool dfs3(int x, int fa)\n{\n    if(d[x] &lt;= dp[x]) { ans++; return 0; }\n    if(G[x].size() == 1 &amp;&amp; x != 1) return 1;\n    bool f = 0;\n    for(int e: G[x])\n    {\n        if(e == fa) continue;\n        f |= dfs3(e, x);\n    }\n    return f;\n}\n\nvoid solve()\n{\n    int n, k; cin &gt;&gt; n &gt;&gt; k;\n    rep(i, 1, n) dp[i] = 0, d[i] = INF, G[i].clear();\n    rep(i, 1, k) { int t; cin &gt;&gt; t; d[t] = 0; }\n    rep(i, 1, n-1)\n    {\n        int u, v; cin &gt;&gt; u &gt;&gt; v;\n        G[u].push_back(v);\n        G[v].push_back(u);\n    }\n    dfs(1, 0);\n    dfs2(1, 0);\n    if(dfs3(1, 0)) cout &lt;&lt; -1 &lt;&lt; endl;\n    else cout &lt;&lt; ans &lt;&lt; endl;;\n    ans = 0;\n}\n\nint main()\n{\n    close();\n    int T; cin &gt;&gt; T;\n    while(T--) solve();\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-756/#f-atm-and-students","title":"F. ATM and Students","text":""},{"location":"archived/codefroces/Codeforces-Round-756/#_13","title":"\u5206\u6790\uff1a","text":"<p>\u9898\u5e72\u8981\u6c42\u6211\u4eec\u6c42\u51fa\u4e00\u4e2a\u6700\u957f\u8fde\u7eed\u5b50\u5e8f\u5217\u4fdd\u8bc1\u5176\u4e2d\u6240\u6709\u7684\u524d\u7f00\u548c\u4e0d\u5c0f\u4e8ek\u3002</p> <p>\u8003\u8651\u8bb2\u95ee\u9898\u8f6c\u5316\u5982\u4e0b:</p> <p>\u53cc\u6307\u9488\u5bf9\u6570\u7ec4a\u6c42\u6700\u5927\u8fde\u7eed\u5b50\u5e8f\u5217\u548c\uff08\u4e00\u822c\u7b97\u6cd5\u662f\u5982\u679c\u8fde\u7eed\u5b50\u5e8f\u5217\u548c\u5c0f\u4e8e0\u5c31\u5f03\u6389\u53e6\u8d77\u7089\u7076\uff0c\u4f46\u662f\u8fd9\u91cc\u8981\u52a0\u4e2a\u7cfb\u6570k\uff0c\u5373\u8fde\u7eed\u5b50\u5e8f\u5217\u548c\u5c0f\u4e8e-k\u624d\u5f03\u6389\u53e6\u8d77\u7089\u7076\uff09\u3002</p> <p>\u7136\u540e\u6c42\u7684\u65f6\u5019\u6211\u4eec\u4f1a\u628a\u6570\u7ec4a\u5206\u6210\u51e0\u4e2a\u8fde\u7eed\u5b50\u5e8f\u5217\u7684\u96c6\u5408\uff0c\u6bcf\u4e2a\u8fde\u7eed\u5b50\u5e8f\u5217\u7684\u524d\u7f00\u548c\u90fd\u4e0d\u5c0f\u4e8ek\u3002</p> <p>\u90a3\u4e48\u7b54\u6848\u5c31\u662f\u8fd9\u4e9b\u8fde\u7eed\u5b50\u5e8f\u5217\u7684\u6700\u5927\u957f\u5ea6\u3002</p> <p>\u8bc1\u660e\u5982\u4e0b\uff1a</p> <ol> <li>\u5982\u679c\u7b54\u6848\u8fde\u7eed\u5b50\u5e8f\u5217\u662f\u6a2a\u8de8\u82e5\u5e72\u4e2a\u6211\u4eec\u6c42\u51fa\u6765\u7684\u8fde\u7eed\u5b50\u5e8f\u5217\u7684\uff0c\u90a3\u4e48\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\u524d\u7f00\u5c0f\u4e8e-k\uff0c\u5373\u4e0d\u5408\u6cd5\u3002</li> <li>\u663e\u7136\u6211\u4eec\u6c42\u51fa\u7684\u82e5\u5e72\u4e2a\u8fde\u7eed\u5b50\u5e8f\u5217\u90fd\u7b26\u5408\u7b54\u6848\u8981\u6c42\uff0c \u5373\u6240\u6709\u524d\u7f00\u548c\u4e0d\u5c0f\u4e8e-k\u3002</li> </ol> <p>note: \u524d\u6392\u5927\u4f6c\u597d\u50cf\u90fd\u7528\u7684\u4e8c\u5206Orz</p>"},{"location":"archived/codefroces/Codeforces-Round-756/#_14","title":"\u4ee3\u7801\uff1a","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n//#pragma GCC optimize(2)\n#define close();    ios::sync_with_stdio(false);\n#define endl '\\n'\n#define rep(i, l, r) for(int i = l; i &lt;= r; i++)\n#define dwn(i, r, l) for(int i = r; i &gt;= l; i--)\ntypedef long long LL;\nconst int N = 3e5+100;\nconst int INF = 0x3f3f3f3f;\nLL a[N];\n\nvoid solve()\n{\n    int n;\n    LL k; \n    cin &gt;&gt; n &gt;&gt; k;\n    rep(i, 1, n) cin &gt;&gt; a[i];\n    LL sum = k;\n    int p = 1, q = 1;\n    sum += a[1];\n    int x, y, cnt; x= y= cnt= 0;\n    while( p &lt;= n &amp;&amp; q &lt;= n )\n    {\n        while(sum &gt;= 0) \n        {\n            if(q-p+1&gt;cnt) \n            {\n                cnt = q-p+1;\n                x = p; y = q;\n            }\n            ++q;\n            if(q &gt; n) break;\n            sum += a[q];\n        }\n        while(sum &lt; 0)\n        {\n            sum -= a[p]; ++p;\n            if(p &gt; n || p &gt; q) break;\n        }\n    }\n    if(x == y &amp;&amp; x == 0) cout &lt;&lt; -1 &lt;&lt; endl;\n    else cout &lt;&lt; x &lt;&lt; \" \" &lt;&lt; y &lt;&lt; endl;\n}\n\nint main()\n{\n    close();\n    int T; cin &gt;&gt; T;\n    while(T--) solve();\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-757/","title":"Codeforces Round #757 (Div. 2)","text":""},{"location":"archived/codefroces/Codeforces-Round-757/#a-divan-and-a-store","title":"A. Divan and a Store","text":""},{"location":"archived/codefroces/Codeforces-Round-757/#_1","title":"\u5206\u6790\uff1a","text":"<p>\u6392\u5e8f\u540e\u4ece\u5c0f\u5230\u5927\u8d2a\u5fc3\u5373\u53ef\u3002</p>"},{"location":"archived/codefroces/Codeforces-Round-757/#_2","title":"\u4ee3\u7801\uff1a","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n//#pragma GCC optimize(2)\n#define close();    ios::sync_with_stdio(false);\n#define endl '\\n'\n#define rep(i, l, r) for(int i = l; i &lt;= r; i++)\n#define dwn(i, r, l) for(int i = r; i &gt;= l; i--)\ntypedef long long LL;\nconst int N = 3e5+100;\nint a[N];\nvoid solve()\n{\n    int n, l, r, k; cin &gt;&gt;  n &gt;&gt; l &gt;&gt; r &gt;&gt; k;\n    rep(i, 1, n) cin &gt;&gt; a[i];\n    sort(a+1, a+1+n);\n    int cnt = 0;\n    rep(i, 1, n) \n    {\n        if(a[i] &gt;= l &amp;&amp; a[i] &lt;= r &amp;&amp; k &gt;= a[i]) k -= a[i], cnt++;\n    }\n    cout &lt;&lt; cnt &lt;&lt; endl;\n}\n\nint main()\n{\n    int T; cin &gt;&gt; T;\n    while(T--) solve();\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-757/#b-divan-and-a-new-project","title":"B. Divan and a New Project","text":""},{"location":"archived/codefroces/Codeforces-Round-757/#_3","title":"\u5206\u6790\uff1a","text":"<p>\u4e0d\u96be\u89c2\u5bdf\u51fa\u53ef\u4ee5\u5c06\\(x_0\\) \u653e\u5728\u96f6\u70b9(\u5f53\u7136\u653e\u5176\u4ed6\u7684\u70b9\u4e5f\u7b49\u4ef7), \u7136\u540e\u8d2a\u5fc3\u5730\u5f80\u96f6\u70b9\u4e24\u8fb9\u653e.</p>"},{"location":"archived/codefroces/Codeforces-Round-757/#_4","title":"\u4ee3\u7801:","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n//#pragma GCC optimize(2)\n#define close();    ios::sync_with_stdio(false);\n#define endl '\\n'\n#define rep(i, l, r) for(int i = l; i &lt;= r; i++)\n#define dwn(i, r, l) for(int i = r; i &gt;= l; i--)\ntypedef long long LL;\nconst int N = 1e6+100;\n\nstruct node{\n    int idx;\n    int w;\n    bool operator&lt;(const node&amp; o) const{\n        return w &lt; o.w;\n    }\n};\n\nnode a[N];\nint x[N];\nvoid solve()\n{\n    int n; cin &gt;&gt; n;\n    rep(i, 1, n) { cin &gt;&gt; a[i].w; a[i].w = -a[i].w; a[i].idx = i; }\n    sort(a+1, a+1+n);\n    int cnt = 1;\n    LL ans = 0;\n    rep(i, 1, n)\n    {\n        x[a[i].idx] = (i&amp;1)?cnt:-(cnt++);\n        ans += 2ll * abs(x[a[i].idx]) * (LL)(-a[i].w);\n    }\n    cout &lt;&lt; ans &lt;&lt; endl;\n    rep(i, 0, n) cout &lt;&lt; x[i] &lt;&lt; \" \";cout &lt;&lt; endl;\n}   \n\nint main()\n{\n    close();\n    int T; cin &gt;&gt; T;\n    while(T--) solve();\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-757/#c-divan-and-bitwise-operations","title":"C. Divan and bitwise operations","text":""},{"location":"archived/codefroces/Codeforces-Round-757/#_5","title":"\u5206\u6790:","text":"<p>\u521a\u5f00\u59cb\u8bfb\u9519\u9898\u4e86, \u770b\u4e86\u5feb\u4e00\u4e2a\u5c0f\u65f6, \u4e00\u5f00\u59cb\u4ee5\u4e3a\u7ed9\u7684\u9650\u5236\u662f\u533a\u95f4\u5f02\u6216, \u6700\u540e\u53d1\u73b0\u7ed9\u7684\u9650\u5236\u662f\u533a\u95f4\u6216 ( .</p> <p>\u90a3\u5982\u679c\u662f\u533a\u95f4\u6216\u5c31\u597d\u505a\u4e86, \u4e0d\u59a8\u9996\u5148\u5c06\u6240\u6709\u7684\u5143\u7d20\u521d\u59cb\u5316\u4e3a0x7ffffff, \u7136\u540e\u7528\u9650\u5236\u53bb\u533a\u95f4\u4e0e, \u8fd9\u663e\u7136\u662f\u4fdd\u8bc1\u6784\u9020\u51fa\u4e00\u4e2a\u7b26\u5408\u9650\u5236\u7684\u6570\u7ec4\u7684\u6700\u7b80\u6761\u4ef6.</p> <p>\u8fd9\u91cc\u6211\u5efa\u4e86\u4e2a\u7ebf\u6bb5\u6811\u53bb\u7ef4\u62a4.</p> <p>\u7136\u540e\u8003\u8651\u6784\u9020\u51fa\u4e00\u4e2a\u7b26\u5408\u9650\u5236\u7684\u6570\u7ec4\u4e4b\u540e, \u5982\u4f55\u8ba1\u7b97\u7b54\u6848\u5462?</p> <p>\u8003\u8651\u6309\u4f4d\u8ba8\u8bba, \u8bb0\\(cnt_1\\)\u8868\u793a\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u7b2c\\(i\\)\u9879\u4e3a1 \u7684\u5143\u7d20\u7684\u4e2a\u6570, \\(cnt_0\\)\u5219\u53cd\u4e4b. \u90a3\u4e48\u7b2ci\u4f4d\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u662f\u9009\u51fa \u5947\u6570\u4e2a\u7b2ci\u9879\u4e3a1\u7684\u5143\u7d20 \u7684\u65b9\u6848\u6570 \u4e58\u4ee5 \\(2^i\\).</p> <p>\u4e8e\u662f\u6709\u4e0b\u5f0f: $$ Ans = \\sum_{i=0} 2^{cnt_{1}-1} \\cdot 2^{cnt_0} \\cdot 2^i $$</p>"},{"location":"archived/codefroces/Codeforces-Round-757/#_6","title":"\u4ee3\u7801:","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n//#pragma GCC optimize(2)\n#define close();    ios::sync_with_stdio(false);\n#define endl '\\n'\n#define rep(i, l, r) for(int i = l; i &lt;= r; i++)\n#define dwn(i, r, l) for(int i = r; i &gt;= l; i--)\ntypedef long long LL;\n#define lc (p&lt;&lt;1)\n#define rc (lc|1)\n#define mid ((l+r)&gt;&gt;1)\nconst int N = 2e5+100;\nconst int ALLONE = 0x7fffffff;\nconst LL p = 1e9+7;\nint c[N&lt;&lt;2], lazy[N&lt;&lt;2];\nint n;\nint a[N];\nvoid build(int p = 1, int l = 1, int r = n)\n{\n    if(l == r) c[p] = 0x7fffffff, lazy[p] = ALLONE;\n    else {\n        build(lc, l, mid);\n        build(rc, mid+1, r);\n        c[p] = 0x7fffffff;\n        lazy[p] = ALLONE;\n    }\n}\n\nvoid push(int p)\n{\n    c[lc] &amp;= lazy[p];\n    c[rc] &amp;= lazy[p];\n    lazy[lc] &amp;= lazy[p];\n    lazy[rc] &amp;= lazy[p];\n    lazy[p] = ALLONE;\n}\n\nvoid update(int tl, int tr, int x, int p=1, int l=1, int r=n)\n{\n    if(tl &gt; r || tr &lt; l ) return;\n    else if(tl &lt;= l &amp;&amp; tr &gt;= r) { c[p] &amp;= x; lazy[p] &amp;= x; return; }\n    else \n    {\n        push(p);\n        update(tl, tr, x, lc, l, mid);\n        update(tl, tr, x, rc, mid+1, r);\n    }\n}\n\nvoid query(int p = 1, int l = 1, int r = n)\n{\n    if(l == r) a[l] = c[p];\n    else {\n        push(p);\n        query(lc, l, mid);\n        query(rc, mid+1, r);\n    }\n}\n\nLL qpow(LL a, LL b)\n{\n    LL rev = 1;\n    while(b)\n    {\n        if(b &amp; 1) (rev *= a) %= p;\n        a = a * a % p;\n        b &gt;&gt;= 1;\n    }\n    return rev;\n}\n\n\n\nvoid solve()\n{\n    int m; cin &gt;&gt; n &gt;&gt; m;   \n    build();\n    rep(i, 1, m)\n    {\n        int l, r, x; cin &gt;&gt; l &gt;&gt; r &gt;&gt; x;\n        update(l, r, x);\n    }\n    query();\n    // rep(i, 1, n) cout &lt;&lt; a[i] &lt;&lt; \" \"; cout &lt;&lt; endl;\n    LL ans = 0;\n    for(int k = 0; k &lt; 30; k++)\n    {\n        int o, v; o = v = 0;\n        for(int i = 1; i &lt;= n; i++)\n        {\n            if(a[i] &amp; (1&lt;&lt;k)) o++;\n        }\n        v = n-o;\n        if(o &gt; 0) (ans += qpow(2, o-1) * qpow(2, v) % p * (1&lt;&lt;k) % p) %= p;\n    }\n    cout &lt;&lt; ans &lt;&lt; endl;\n}   \n\nint main()\n{\n    close();\n    int T; cin &gt;&gt; T;\n    while(T--) solve();\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-757/#d1-divan-and-kostomuksha-easy-version","title":"D1. Divan and Kostomuksha (easy version)","text":""},{"location":"archived/codefroces/Codeforces-Round-757/#_7","title":"\u5206\u6790:","text":"<p>\u8003\u8651dp. </p> <p>\u8bb0\\(dp[i]\\)\u8868\u793a\u628agcd\u4e3a\\(i\\)\u7684\u4e00\u7ec4\u6570\u653e\u6700\u524d\u65f6\u7684\u7b54\u6848, \u6b64\u65f6\u8fd9\u7ec4\u6570\u7684\u5148\u540e\u987a\u5e8f\u4e0d\u8bba, \u4f46\u662f\u4e00\u5b9a\u662f\u6392\u5728\u5176\u4ed6\u6570\u4e4b\u524d\u7684.</p> <p>\u8bb0\\(b[u]\\)\u8868\u793a\u542b\u6709\u56e0\u5b50u\u7684\u6570\u7684\u4e2a\u6570.</p> <p>\u6839\u636e\u5b9a\u4e49, \u4e0d\u96be\u60f3\u51fa\u8f6c\u79fb\u65b9\u7a0b: $dp[i] = \\max_{j|i} dp[i] + b[i] \\cdot (i-j)  $</p> <p>\u8bb0\u6570\u7ec4x\u6700\u5927\u503c\u4e3aC.</p> <p>\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u7528\u57c3\u6c0f\u7b5b\u7684\u65b9\u5f0f, \\(O(C\\log C)\\)\u7684dp\u5b8c\u6240\u6709\u72b6\u6001.</p> <p>\u90a3\u5982\u4f55\u6c42\\(b\\)\u6570\u7ec4\u5462? </p> <p>\u8003\u8651\u7ed9\u4e864s\u65f6\u9650, n\u53c8\u53ea\u67091e5, \u76f4\u63a5\u66b4\u529b\u7b97\u5373\u53ef.</p> <p>\u6240\u4ee5\u6700\u540e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\\(O(C\\log C + n \\sqrt{C} )\\)</p>"},{"location":"archived/codefroces/Codeforces-Round-757/#_8","title":"\u4ee3\u7801:","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n//#pragma GCC optimize(2)\n#define close();    ios::sync_with_stdio(false);\n#define endl '\\n'\n#define rep(i, l, r) for(int i = l; i &lt;= r; i++)\n#define dwn(i, r, l) for(int i = r; i &gt;= l; i--)\ntypedef long long LL;\n#define lc (p&lt;&lt;1)\n#define rc (lc|1)\n#define mid ((l+r)&gt;&gt;1)\ntypedef LL ll;\nconst int N = 2e5+100;\nconst LL p = 1e9+7;\nconst int MAXN = 5e6+100;\nint a[N];\nint b[MAXN];\nLL dp[MAXN];\ninline void div(int x)\n{\n    for(int i = 1; i*i &lt;= x; ++i)\n    {\n        if(x%i==0)\n        {\n            b[i]++;\n            if(i*i!=x) b[x/i]++;\n        }\n    }\n}\n\nvoid solve()\n{\n    int n; cin &gt;&gt; n;\n    rep(i, 1, n) \n    {\n        cin &gt;&gt; a[i];\n        div(a[i]);\n    }\n    // rep(i, 1, 5000000) if(b[i]) cout &lt;&lt; i &lt;&lt; \"-&gt; \" &lt;&lt; b[i] &lt;&lt; endl;\n    LL ans = n;\n    dp[1] = n;\n    rep(i, 1, 5000000)\n    {\n        ans = max(ans, dp[i]);\n\n        for(int j = 2; j*i &lt;= 5000000; j++)\n        {\n            dp[i*j] = max(dp[i*j], dp[i] + ( b[i*j] ) * ( (LL)i*j-i ) );\n        }\n\n    }\n    cout &lt;&lt; ans &lt;&lt; endl;\n}   \n\nint main()\n{\n    close();\n    solve();\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-757/#d2-divan-and-kostomuksha-hard-version","title":"D2. Divan and Kostomuksha (hard version)","text":""},{"location":"archived/codefroces/Codeforces-Round-757/#_9","title":"\u5206\u6790\uff1a","text":"<p>\u62ff\u4e0a\u9762\u7684\u4ee3\u7801\u6765\u8bd5D2\u662f\u4f1aT\u7684\uff0c\u4e8e\u662f\u8003\u8651\u8fdb\u4e00\u6b65\u4f18\u5316\u3002</p> <p>\u8bb0\\(dp[i] \\rightarrow dp[j]\\)\u8868\u793a\\(dp[i]\\)\u66f4\u65b0\u72b6\u6001\\(dp[j]\\)</p> <p>\u4ece\u5b9a\u4e49\u4e0a\u6765\u770b\uff0c\u6211\u4eec\u5c1d\u8bd5\u662f\u4e0d\u505c\u5730\u5148\u5c06\u62e5\u6709\u5171\u540c\u56e0\u6570\u7684\u6570\u7684\u96c6\u5408\u4e0d\u52a0\u533a\u5206\u987a\u5e8f\u5730\u6392\u5728\u524d\u9762\uff0c\u7136\u540e\u518d\u6839\u636e\u72b6\u6001\u8f6c\u79fb\u6765\u7ee7\u7eed\u5728\u8fd9\u4e2a\u62e5\u6709\u5171\u540c\u56e0\u6570\u7684\u6570\u7684\u96c6\u5408\u4e2d\u8fdb\u884c\u6392\u5e8f\uff08\u5373\u5c06\u62e5\u6709\u66f4\u5927\u7684\u5171\u540c\u56e0\u6570\u7684\u6570\u7684\u96c6\u5408\u6392\u5728\u524d\u9762\uff09\u3002</p> <p>\u90a3\u4e48\u663e\u7136 \u5bf9\u4e8e\u72b6\u6001\u8f6c\u79fb\u6765\u8bf4\uff0c\u6bcf\u6b21\u53ea\u8f6c\u79fb\u8d28\u6570\u500d\u662f\u6700\u4f18\u7684\u3002</p> <p>\u66f4\u52a0\u5f62\u5f0f\u5316\u5730\u6765\u8bf4\uff0c\\(dp[i] \\rightarrow dp[j]\\) \u4e0d\u4f1a\u4f18\u4e8e\\(dp[i] \\rightarrow dp[k] \\rightarrow dp[j]\\)</p> <p>\\(dp[i] \\rightarrow dp[j]\\)\u5bf9\\(dp[j]\\)\u7684\u8d21\u732e\u662f\\(dp[i]+b[j]\\cdot(j-i)\\)</p> <p>\\(dp[i] \\rightarrow dp[k] \\rightarrow dp[j]\\)\u7684\u8d21\u732e\u5219\u662f$ dp[i] + b[k]\\cdot(k-i) + b[j]\\cdot(j-k)$</p> <p>\u6ce8\u610f\u5230\\(b[j] \\le b[k]\\)</p> <p>\u5219\u6709  $$ dp[i] + b[k]\\cdot(k-i) + b[j]\\cdot(j-k)  \\ = dp[i] + (b[k]-b[j]) \\cdot (k-i) + b[j]\\cdot(j-i) \\ \\ge dp[i]+b[j]\\cdot(j-i) $$ \u6240\u4ee5\u62ff\u6b27\u62c9\u7b5b\u7b5b\u4e00\u904d\u8d28\u6570\u5c31\u884c\u4e86.</p> <p>\u4e8e\u662f\u7b97\u6cd5\u590d\u6742\u5ea6\u5c31\u964d\u5230\u4e86\\(O(C\\log\\log C + n \\sqrt{C} )\\)</p> <p>\u611f\u89c9\u590d\u6742\u5ea6\u8fd8\u662f\u5f88\u7384\u5b66, \u4e8e\u662f\u72e0\u4e0b\u5fc3\u6765\u4ea4\u4e00\u53d1, \u8fc7\u4e86.</p>"},{"location":"archived/codefroces/Codeforces-Round-757/#_10","title":"\u4ee3\u7801:","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n//#pragma GCC optimize(2)\n#define close();    ios::sync_with_stdio(false);\n#define endl '\\n'\n#define rep(i, l, r) for(int i = l; i &lt;= r; i++)\n#define dwn(i, r, l) for(int i = r; i &gt;= l; i--)\ntypedef long long LL;\n#define lc (p&lt;&lt;1)\n#define rc (lc|1)\n#define mid ((l+r)&gt;&gt;1)\ntypedef LL ll;\nconst int N = 2e5+100;\nconst LL p = 1e9+7;\nconst int MAXN = 2e7+100;\n\nbool isnp[MAXN];\nvector&lt;int&gt; primes; // \u8d28\u6570\u8868\nvoid init(int n)\n{\n    for (int i = 2; i &lt;= n; i++)\n    {\n        if (!isnp[i])\n            primes.push_back(i);\n        for (int p : primes)\n        {\n            if (p * i &gt; n)\n                break;\n            isnp[p * i] = 1;\n            if (i % p == 0)\n                break;\n        }\n    }\n    isnp[1] = 1;\n}\n\nint a[N];\nint b[MAXN];\nLL dp[MAXN];\ninline void div(int x)\n{\n    for(int i = 1; i*i &lt;= x; ++i)\n    {\n        if(x%i==0)\n        {\n            b[i]++;\n            if(i*i!=x) b[x/i]++;\n        }\n    }\n}\n\nvoid solve()\n{\n    int n; cin &gt;&gt; n;\n    rep(i, 1, n) \n    {\n        cin &gt;&gt; a[i];\n        div(a[i]);\n    }\n    LL ans = n;\n    dp[1] = n;\n    rep(i, 1, 20000000)\n    {\n        ans = max(ans, dp[i]);\n\n        for(int e: primes)\n        {\n            if(i * e &gt; 20000000) break;\n            dp[i*e] = max(dp[i*e], dp[i] + ( b[i*e] ) * ( (LL)i*e-i ) );\n        }\n\n    }\n    cout &lt;&lt; ans &lt;&lt; endl;\n}   \n\nint main()\n{\n    close();\n    init(20000000);\n    solve();\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-765/","title":"Codeforces Round #765 (Div. 2)","text":""},{"location":"archived/codefroces/Codeforces-Round-765/#a-ancient-civilization","title":"A. Ancient Civilization","text":""},{"location":"archived/codefroces/Codeforces-Round-765/#_1","title":"\u5206\u6790","text":"<p>\u6309\u4f4d\u8ba8\u8bba, \u5bf9\u4e8e\u7b2ci\u4f4d, \u5982\u679c1\u591a\u5c31\u90091, 0\u591a\u5c31\u90090. \u6700\u540e\u5c31\u53ef\u4ee5\u628a\u7b54\u6848\u51d1\u51fa\u6765.</p>"},{"location":"archived/codefroces/Codeforces-Round-765/#_2","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n//#pragma GCC optimize(2)\n#define close();    ios::sync_with_stdio(false);\n#define endl '\\n'\n#define rep(i, l, r) for(int i = l; i &lt;= r; i++)\n#define dwn(i, r, l) for(int i = r; i &gt;= l; i--)\ntypedef long long LL;\nconst int N = 3e5+100;\nint a[N];\nvoid solve()\n{\n    int n, l; cin &gt;&gt; n &gt;&gt; l;\n    rep(i, 0, l-1) a[i] = 0;;\n    rep(i, 1, n){\n        int tmp; cin &gt;&gt; tmp;\n        rep(j, 0, l-1)\n        {\n            if(tmp &amp; (1&lt;&lt;j)) a[j]++;\n            else a[j]--;\n        }\n    }\n    LL ans = 0;\n    rep(i, 1, l) \n    {\n        ans += (a[i-1] &gt; 0) * (1&lt;&lt;(i-1));\n    }\n    cout &lt;&lt; ans &lt;&lt; endl;\n}\n\nint main()\n{\n    close();\n    int T; cin &gt;&gt; T;\n    while(T--) solve();\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-765/#b-elementary-particles","title":"B. Elementary Particles","text":""},{"location":"archived/codefroces/Codeforces-Round-765/#_3","title":"\u5206\u6790","text":"<p>\u9898\u610f\u662f\u4e24\u4e2a\u5b57\u6bb5\u6709\u4efb\u610f\u4e00\u4e2a\u4f4d\u7f6e\u7684\u5143\u7d20\u76f8\u540c\u5373\u53ef, \u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u8003\u8651\u5355\u4e2a\u5143\u7d20\u76f8\u540c\u7684\u60c5\u51b5\u5373\u53ef.</p> <p>\u4e8e\u662f\u5bf9\u4e8e\u4e24\u4e2a\u76f8\u540c\u7684\u5143\u7d20, \u5206\u522b\u5728\u4f4d\u7f6e\\(i\\) \u548c\u4f4d\u7f6e\\(j\\) , \u90a3\u4e48\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u51fa\u7684\u6700\u5927\u5b50\u6bb5\u957f\u5ea6\u662f\\(len = i+(n-j)\\).</p> <p>\u89c2\u5bdf\u8fd9\u4e2a\u5f0f\u5b50\u53d1\u73b0, \u76f8\u540c\u7684\u5143\u7d20\u5e94\u8be5\u5c3d\u91cf\u7684\u8fd1, \u90a3\u4e48\u6211\u4eec\u53ea\u8003\u8651\u6700\u8fd1\u7684\u76f8\u540c\u5143\u7d20\u5373\u53ef. \u8003\u8651\u9898\u4e2d\u7ed9\u7684\\(a_i\\)\u7684\u503c\u57df\u6bd4\u8f83\u5c0f, \u76f4\u63a5\u5f00\u4e2a\u6876\u5c31\u884c\u4e86.</p>"},{"location":"archived/codefroces/Codeforces-Round-765/#_4","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n//#pragma GCC optimize(2)\n#define close();    ios::sync_with_stdio(false);\n#define endl '\\n'\n#define rep(i, l, r) for(int i = l; i &lt;= r; i++)\n#define dwn(i, r, l) for(int i = r; i &gt;= l; i--)\ntypedef long long LL;\nconst int N = 3e5+100;\nconst int L = N-1;\nint b[N];\nint a[N];\nvoid solve()\n{\n    int n; cin &gt;&gt; n;\n    int ans = 0;\n    rep(i, 1, n) {\n        cin &gt;&gt; a[i];\n        if( b[a[i]] ) \n        {\n            ans = max(ans, b[a[i]]+n-i);\n        }\n        b[a[i]] = i;\n    }\n    rep(i, 1, n) b[a[i]] = 0;\n    cout &lt;&lt; (ans&gt;0?ans:-1) &lt;&lt; endl;\n}\n\nint main()\n{\n    close();\n    int T; cin &gt;&gt; T;\n    while(T--) solve();\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-765/#c-road-optimization","title":"C. Road Optimization","text":""},{"location":"archived/codefroces/Codeforces-Round-765/#_5","title":"\u5206\u6790","text":"<p>\u5bb9\u6613\u60f3\u5230\u4e00\u4e2a\\(O(nkM)\\)\u7684dp, \u5176\u4e2dn\u662f\u9650\u901f\u6807\u5fd7\u4e2a\u6570, k\u662f\u6700\u5927\u53ef\u79fb\u8d70\u7684\u6570\u91cf, M\u662f\u901f\u5ea6\u7684\u503c\u57df. </p> <p>\u5177\u4f53\u6765\u8bf4\u5c31\u662f\u8bb0\\(dp_{i,j,o}\\) \u4e3a\u8d70\u5b8c\u4ee5\u7b2c\\(i\\)\u4e2a\u8def\u724c\u4e3a\u8d77\u70b9\u7684\u8def\u6bb5\u65f6\u8fd8\u5269\u4e0b\\(j\\)\u4e2a\u53ef\u79fb\u8d70\u7684\u6570\u91cf\u4e14\u6b64\u65f6\u7684\u901f\u5ea6\u662f\\(o\\). </p> <p>\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u662f: $$ dp_{i,j,o} = \\min \\left{</p> <pre><code>\\begin{array}{**lr**}\ndp_{i-1,j-1,o} + (d[i+1]-d[i])\\cdot o  \\\\\n(\\min_{c=1}^M dp_{i-1, j, c}) + (d[i+1]-d[i])\\cdot a[i] &amp;  &amp;  a[i] = o\n\\end{array}\n</code></pre> <p>\\right. $$ \u6ce8\u610f\u5230\\(o\\), \u5373\u901f\u5ea6\u7684\u53d6\u503c\u53ea\u6709\\(n-1\\)\u79cd, \u6240\u4ee5\u53ef\u4ee5\u4f18\u5316\u4e3a\\(O(n^2k)\\), \u5176\u4e2d\\(k\\le n-1\\), \u6240\u4ee5\u662f\\(O(n^3)\\).</p> <p>\u7136\u540e\u628a\u7b2c\u4e00\u7ef4\u7528\u6eda\u52a8\u6570\u7ec4\u6eda\u6389\u8282\u7701\u7a7a\u95f4\u5373\u53ef.</p>"},{"location":"archived/codefroces/Codeforces-Round-765/#_6","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n//#pragma GCC optimize(2)\n#define close();    ios::sync_with_stdio(false);\n#define endl '\\n'\n#define rep(i, l, r) for(int i = l; i &lt;= r; i++)\n#define dwn(i, r, l) for(int i = r; i &gt;= l; i--)\ntypedef long long LL;\nconst int N = 512;\nconst int M = 1e4+100;\n\nint dp[N][N];\nint a[N], d[N];\nint main()\n{\n    close();\n\n    int n, l, k; cin &gt;&gt; n &gt;&gt; l &gt;&gt; k;\n    rep(i, 1, n) cin &gt;&gt; d[i];\n    rep(i, 1, n) cin &gt;&gt; a[i]; \n    d[n+1] = l;\n    memset(dp, 0x3f, sizeof dp);\n    dp[k][1] = (d[2]-d[1])*a[1];\n    rep(i, 2, n)\n    {\n        rep(j, 0, k)\n        {\n            int x = 0x3f3f3f3f;\n            rep(o, 1, i-1) x = min(x, dp[j][o]);\n            rep(o, 1, i)\n            {\n                dp[j][o] = min( dp[j+1][o]+ a[o]*(d[i+1]-d[i]), (a[i]==a[o]?x+ a[o]*(d[i+1]-d[i]):0x3f3f3f3f) ) ;\n            }\n        }\n    }\n\n    int ans = 0x3f3f3f3f;\n    rep(i, 0, k)\n    {\n        rep(j, 1, n) \n        {\n            ans = min(ans, dp[i][j]);\n        }\n    }\n\n    cout &lt;&lt; ans &lt;&lt; endl;\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"archived/codefroces/Codeforces-Round-765/#d-binary-spiders","title":"D. Binary Spiders","text":""},{"location":"archived/codefroces/Codeforces-Round-765/#_7","title":"\u5206\u6790","text":"<p>\u6211\u4eec\u7ea6\u5b9a\u6700\u4f4e\u4f4d\u4e3a\u7b2c0\u4f4d, \u6700\u9ad8\u4f4d\u4e3a\u7b2c29\u4f4d. </p> <p>\u8bb0k\u7684\u6700\u9ad8\u4f4d\u4e3a\u7b2c\\(x\\)\u4f4d, \u8bb0\u4e00\u4e2a\u6570\u7684\u7b2c\\(x+1\\)\u4f4d\u5230\u7b2c\\(29\\)\u4f4d\u4e3a\\(pre\\), \u8bb0\u7b2c\\(0\\)\u4f4d\u5230\u7b2c\\(x\\)\u4f4d\u4e3a\\(suf\\).</p> <p>\u6211\u4eec\u4e0d\u96be\u53d1\u73b0, \u5982\u679c\u4e24\u4e2a\u6570\u7684pre\u4e0d\u60f3\u7b49\u7684\u8bdd, \u90a3\u4e48\u8fd9\u4e24\u4e2a\u6570\u5f02\u6216\u7684\u503c\u5fc5\u7136\u5927\u4e8ek. \u56e0\u6b64\u6211\u4eec\u4e0d\u59a8\u6839\u636epre\u8fdb\u884c\u5206\u7ec4. \u8fd9\u6837\u4e0d\u540c\u7ec4\u7684\u6570\u4e4b\u95f4\u7684\u5f02\u6216\u5fc5\u7136\u5927\u4e8ek.</p> <p>\u8003\u8651\u5206\u7ec4\u6211\u4eec\u53ef\u4ee5\u7528map\u5b9e\u73b0. </p> <p>\u540c\u65f6\u6839\u636e\u9e3d\u5de2\u539f\u7406, \u6bcf\u7ec4\u5982\u679c\u9009\u8d85\u8fc72\u4e2a\u6570, \u90a3\u4e48\u5f02\u6216\u51fa\u6765\u7684\u7b2cx\u4f4d\u5fc5\u7136\u5b58\u57280. </p> <p>\u56e0\u6b64\u6211\u4eec\u7528trie\u6c42\u7ec4\u5185\u7684\u5f02\u6216\u6700\u5927\u503c, \u5982\u679c\u5927\u4e8e\u7b49\u4e8ek, \u90a3\u4e48\u628a\u8fd9\u4e24\u4e2a\u9009\u51fa\u6765. \u5426\u5219\u9009\u62e9\u4efb\u4e00\u4e00\u4e2a.</p> <p>\u6700\u7ec8\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\\(O(n\\log n)\\).</p>"},{"location":"archived/codefroces/Codeforces-Round-765/#_8","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n//#pragma GCC optimize(2)\n#define close();    ios::sync_with_stdio(false);\n#define endl '\\n'\n#define rep(i, l, r) for(int i = l; i &lt;= r; i++)\n#define dwn(i, r, l) for(int i = r; i &gt;= l; i--)\ntypedef long long LL;\nconst int N = 3e5+100;\n\nstruct Trie{\n    int top;\n    int size;\n    int a[N&lt;&lt;5];\n    int nxt[N&lt;&lt;5][2];\n\n    void init() \n    { \n        rep(i, 0, top) a[i] = nxt[i][0] = nxt[i][1] = 0;\n        top = 1;\n        size = 0;\n    }\n\n    void ins(int x)\n    {\n        int cur = 1;\n        dwn(i, 30, 0)\n        {\n            bool sign = ((x&gt;&gt;i)&amp;1);\n            if( nxt[cur][sign] == 0 ) nxt[cur][sign] = ++top;\n            cur = nxt[cur][sign];\n        }\n        a[cur] = x; size++;\n    }\n\n    int query(int x)\n    {\n        int cur = 1;\n        if(size == 0) return -1;\n        dwn(i, 30, 0)\n        {\n            bool sign = ((x&gt;&gt;i)&amp;1);\n            cur = nxt[cur][sign^1]?nxt[cur][sign^1]:nxt[cur][sign];\n        }\n        return a[cur]^x;\n    }\n\n}trie;\n\nint main()\n{\n    close();\n    int n, k; cin &gt;&gt; n &gt;&gt; k;\n    if(k == 0) \n    {\n        cout &lt;&lt; n &lt;&lt; endl;\n        rep(i, 1, n) cout &lt;&lt; i &lt;&lt; \" \"; cout &lt;&lt; endl;\n        return 0;\n    }\n    int bits = 0;\n    rep(i, 0, 30) if((k&gt;&gt;i)&amp;1) bits = i;\n    bits++;\n    vector&lt;int&gt; v(n+10);\n    map&lt;int, vector&lt;int&gt;&gt; mp;\n    rep(i, 1, n) \n    {\n        cin &gt;&gt; v[i];    \n        int s = 0;\n        dwn(j, 30, bits)\n        {\n            if((v[i]&gt;&gt;j)&amp;1) s^=(1&lt;&lt;j);\n        }\n        mp[s].push_back(i);\n    }\n    vector&lt;bool&gt; vis(n+10);\n    trie.init();\n    int cnt = 0;\n    for(auto b: mp)\n    {\n        for(int x: b.second)\n        {\n            if(trie.query(v[x]) &gt;= k) \n            {\n                for(int y: b.second)\n                {\n                    if((v[x] ^ v[y]) &gt;= k)  \n                    {\n                        vis[x] = vis[y] = 1;\n                        cnt+=2;\n                        trie.init();\n                        break;\n                    }\n                }\n            }\n            else trie.ins(v[x]);\n            if(trie.size == 0) break;\n        }\n        if(trie.size != 0)\n        {\n            cnt++;\n            vis[b.second[0]] = 1;\n            trie.init();\n        }\n    }\n    if(cnt &lt; 2) { cout &lt;&lt; -1 &lt;&lt; endl; return 0; }\n    cout &lt;&lt; cnt &lt;&lt; endl;\n    int c = 0;\n    rep(i, 1, n) if(vis[i]) { cout &lt;&lt; i &lt;&lt;\" \"; c++; }\n    assert(c == cnt);\n    // system(\"pause\");\n}\n</code></pre>"},{"location":"cook/","title":"\u7b80\u4ecb","text":"<p>\u8fd9\u4e2a\u9875\u9762\u8bb0\u5f55\u4e00\u4e0b\u81ea\u5df1\u7684\u70b8\u53a8\u623f\u5b9e\u7ee9</p>"},{"location":"cpp/","title":"\u7b80\u4ecb","text":"<p>\u8fd9\u91cc\u5b58\u653e\u4e00\u4e9bC++\u5b66\u4e60\u7b14\u8bb0</p>"},{"location":"friends/","title":"\u53cb\u94fe","text":"<p>\u8fd9\u91cc\u5b58\u653e\u4e00\u4e9b\u53cb\u60c5\u8fde\u63a5</p> <p>\u96f6\u5c9b</p> <p>Asurudo Jyo \u306e \u9752 \u7a7a</p>"}]}